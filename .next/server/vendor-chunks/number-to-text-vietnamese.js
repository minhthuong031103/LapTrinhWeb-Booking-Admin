"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/number-to-text-vietnamese";
exports.ids = ["vendor-chunks/number-to-text-vietnamese"];
exports.modules = {

/***/ "(ssr)/./node_modules/number-to-text-vietnamese/dist/index.es.js":
/*!*****************************************************************!*\
  !*** ./node_modules/number-to-text-vietnamese/dist/index.es.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getText: () => (/* binding */ c)\n/* harmony export */ });\nconst t = Object.prototype.toString;\nfunction e(e) {\n    return \"number\" == typeof e || function(t) {\n        return \"object\" == typeof t && null !== t;\n    }(e) && \"[object Number]\" == function(e) {\n        return null == e ? void 0 === e ? \"[object Undefined]\" : \"[object Null]\" : t.call(e);\n    }(e);\n}\nconst n = [\n    \"kh\\xf4ng\",\n    \"một\",\n    \"hai\",\n    \"ba\",\n    \"bốn\",\n    \"năm\",\n    \"s\\xe1u\",\n    \"bảy\",\n    \"t\\xe1m\",\n    \"ch\\xedn\"\n], r = [\n    \"mười\",\n    \"hai mươi\",\n    \"ba mươi\",\n    \"bốn mươi\",\n    \"năm mươi\",\n    \"s\\xe1u mươi\",\n    \"bảy mươi\",\n    \"t\\xe1m mươi\",\n    \"ch\\xedn mươi\"\n], s = [\n    \"kh\\xf4ng trăm\",\n    \"một trăm\",\n    \"hai trăm\",\n    \"ba trăm\",\n    \"bốn trăm\",\n    \"năm trăm\",\n    \"s\\xe1u trăm\",\n    \"bảy trăm\",\n    \"t\\xe1m trăm\",\n    \"ch\\xedn trăm\"\n], i = (t)=>{\n    const e = `${t}`.split(\"\"), s = parseInt(e[0]), i = parseInt(e[1]);\n    return 0 === i ? r[s - 1] : 5 === i ? `${r[s - 1]} lăm` : 4 === i ? 1 === s ? `${r[s - 1]} bốn` : `${r[s - 1]} tư` : 1 === i ? 1 === s ? `${r[s - 1]} một` : `${r[s - 1]} mốt` : `${r[s - 1]} ${n[i]}`;\n}, $ = (t)=>{\n    const e = `${t}`.split(\"\"), r = parseInt(e[0]), $ = parseInt(e[1]), o = parseInt(e[2]);\n    return $ > 0 ? `${s[r]} ${i(`${$}${o}`)}` : 0 === o ? `${s[r]}` : 4 === o ? `${s[r]} linh tư` : `${s[r]} linh ${n[o]}`;\n}, o = (t)=>{\n    const e = `${t}`.split(\"\").reverse(), r = e.slice(0, 3).reverse().join(\"\"), s = parseInt(e.slice(3, e.length).reverse().join(\"\")), o = `${s}`.length;\n    let l = \"\";\n    return parseInt(r) >= 1 && (l = $(r)), 1 === o ? `${n[s]} nghìn ${l}` : 2 === o ? `${i(s)} nghìn ${l}` : `${$(s)} nghìn ${l}`;\n}, l = (t)=>{\n    const e = `${t}`.split(\"\").reverse(), r = e.slice(0, 6).reverse().join(\"\"), s = parseInt(e.slice(6, e.length).reverse().join(\"\")), l = `${s}`.length;\n    let c = \"\";\n    return parseInt(r) > 999 ? c = o(r) : parseInt(r) <= 999 && parseInt(r) >= 1 && (c = $(`${r}`.split(\"\").slice(3, 6).join(\"\"))), 1 === l ? `${n[s]} triệu ${c}` : 2 === l ? `${i(s)} triệu ${c}` : `${$(s)} triệu ${c}`;\n}, c = (t, r = \"\")=>{\n    try {\n        if (!e(t)) throw new Error(\"Input is not a number\");\n        if (Math.abs(t) > 9007199254740992) throw new Error(\"Your number is too big\");\n        if (t < 0) return `âm ${c(Math.abs(t))}`;\n        const s = `${t}`.length;\n        let p;\n        return 1 === s && (p = n[t]), 2 === s && (p = i(t)), 3 === s && (p = $(t)), s > 3 && s <= 6 && (p = o(t)), s > 6 && s <= 9 && (p = l(t)), s > 9 && (p = ((t)=>{\n            const e = `${t}`.split(\"\").reverse(), r = e.slice(0, 9).reverse().join(\"\"), s = parseInt(e.slice(9, e.length).reverse().join(\"\"));\n            let c = \"\";\n            parseInt(r) > 999999 && parseInt(r) <= 999999999 ? c = l(r) : parseInt(r) <= 999999 && parseInt(r) > 999 ? c = o(`${r}`.split(\"\").slice(3, 9).join(\"\")) : parseInt(r) <= 999 && parseInt(r) >= 1 && (c = $(`${r}`.split(\"\").slice(6, 9).join(\"\")));\n            const p = `${s}`.length;\n            return 1 === p ? `${n[s]} tỷ ${c}` : 2 === p ? `${i(s)} tỷ ${c}` : 3 === p ? `${$(s)} tỷ ${c}` : p > 3 && p <= 6 ? `${o(s)} tỷ ${c}` : p > 6 && p <= 9 ? `${l(s)} tỷ ${c}` : void 0;\n        })(t)), r ? function(t = \"\", e = \"\") {\n            let n = t.split(\" \").reverse();\n            const r = n.findIndex((t)=>\"trăm\" === t), s = n.findIndex((t)=>\"ngh\\xecn\" === t), i = n.findIndex((t)=>\"triệu\" === t), $ = n.findIndex((t)=>\"tỷ\" === t);\n            return -1 !== $ && e && n.splice($, 1, `${n[$]}${e}`), -1 !== i && e && n.splice(i, 1, `${n[i]}${e}`), -1 !== s && e && -1 !== r && n.splice(s, 1, `${n[s]}${e}`), n.reverse().join(\" \");\n        }(p, r) : p;\n    } catch (t) {\n        console.error(\"error\", t);\n    }\n}, p = {\n    getText: c\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (p);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-to-text-vietnamese/dist/index.es.js\n");

/***/ })

};
;