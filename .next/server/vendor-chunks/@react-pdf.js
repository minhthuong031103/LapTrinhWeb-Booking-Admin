"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-pdf";
exports.ids = ["vendor-chunks/@react-pdf"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-pdf/fns/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@react-pdf/fns/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjust: () => (/* binding */ adjust),\n/* harmony export */   asyncCompose: () => (/* binding */ asyncCompose),\n/* harmony export */   capitalize: () => (/* binding */ capitalize),\n/* harmony export */   castArray: () => (/* binding */ castArray),\n/* harmony export */   compose: () => (/* binding */ compose),\n/* harmony export */   dropLast: () => (/* binding */ dropLast),\n/* harmony export */   evolve: () => (/* binding */ evolve),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   isNil: () => (/* binding */ isNil),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   mapValues: () => (/* binding */ mapValues),\n/* harmony export */   matchPercent: () => (/* binding */ matchPercent),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   reverse: () => (/* binding */ reverse),\n/* harmony export */   upperFirst: () => (/* binding */ upperFirst)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\n\n/**\n * Applies a function to the value at the given index of an array\n\n * @param {number} index\n * @param {function} fn\n * @param {array} collection\n * @returns copy of the array with the element at the given index replaced with the result of the function application.\n */ var adjust = function adjust(index, fn, collection) {\n    var _Object$assign;\n    if (index >= 0 && index >= collection.length) return collection;\n    if (index < 0 && Math.abs(index) > collection.length) return collection;\n    var i = index < 0 ? collection.length + index : index;\n    return Object.assign([], collection, (_Object$assign = {}, _Object$assign[i] = fn(collection[i]), _Object$assign));\n};\nvar reverse = function reverse(list) {\n    return Array.prototype.slice.call(list, 0).reverse();\n};\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */ var asyncCompose = function asyncCompose() {\n    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){\n        fns[_key] = arguments[_key];\n    }\n    return /*#__PURE__*/ function() {\n        var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee(value) {\n            var result, reversedFns, _len2, args, _key2, i, fn, _args = arguments;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee$(_context) {\n                while(1)switch(_context.prev = _context.next){\n                    case 0:\n                        result = value;\n                        reversedFns = reverse(fns);\n                        for(_len2 = _args.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                            args[_key2 - 1] = _args[_key2];\n                        }\n                        i = 0;\n                    case 4:\n                        if (!(i < reversedFns.length)) {\n                            _context.next = 12;\n                            break;\n                        }\n                        fn = reversedFns[i];\n                        _context.next = 8;\n                        return fn.apply(void 0, [\n                            result\n                        ].concat(args));\n                    case 8:\n                        result = _context.sent;\n                    case 9:\n                        i += 1;\n                        _context.next = 4;\n                        break;\n                    case 12:\n                        return _context.abrupt(\"return\", result);\n                    case 13:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }, _callee);\n        }));\n        return function(_x) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n};\n/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */ var capitalize = function capitalize(value) {\n    if (!value) return value;\n    return value.replace(/(^|\\s)\\S/g, function(l) {\n        return l.toUpperCase();\n    });\n};\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */ var castArray = function castArray(value) {\n    return Array.isArray(value) ? value : [\n        value\n    ];\n};\n/* eslint-disable no-await-in-loop */ /**\n * Performs right-to-left function composition\n *\n * @param  {...any} functions\n */ var compose = function compose() {\n    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++){\n        fns[_key] = arguments[_key];\n    }\n    return function(value) {\n        var result = value;\n        var reversedFns = reverse(fns);\n        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n            args[_key2 - 1] = arguments[_key2];\n        }\n        for(var i = 0; i < reversedFns.length; i += 1){\n            var fn = reversedFns[i];\n            result = fn.apply(void 0, [\n                result\n            ].concat(args));\n        }\n        return result;\n    };\n};\nvar dropLast = function dropLast(array) {\n    return array.slice(0, array.length - 1);\n};\nvar evolve = function evolve(transformations, object) {\n    var result = object instanceof Array ? [] : {};\n    var keys = Object.keys(object);\n    for(var i = 0; i < keys.length; i += 1){\n        var key = keys[i];\n        var transformation = transformations[key];\n        var type = typeof transformation;\n        if (type === \"function\") {\n            result[key] = transformation(object[key]);\n        } else if (transformation && type === \"object\") {\n            result[key] = evolve(transformation, object[key]);\n        } else result[key] = object[key];\n    }\n    return result;\n};\nvar isNil = function isNil(value) {\n    return value === null || value === undefined;\n};\nvar get = function get(target, path, defaultValue) {\n    if (isNil(target)) return defaultValue;\n    var _path = castArray(path);\n    var result = target;\n    for(var i = 0; i < _path.length; i += 1){\n        if (isNil(result)) return undefined;\n        result = result[_path[i]];\n    }\n    return isNil(result) ? defaultValue : result;\n};\nvar last = function last(value) {\n    return value === \"\" ? \"\" : value[value.length - 1];\n};\nvar mapValues = function mapValues(object, fn) {\n    var entries = Object.entries(object);\n    return entries.reduce(function(acc, _ref, index) {\n        var key = _ref[0], value = _ref[1];\n        acc[key] = fn(value, key, index);\n        return acc;\n    }, {});\n};\nvar isPercent = function isPercent(value) {\n    return /((-)?\\d+\\.?\\d*)%/g.exec(value);\n};\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */ var matchPercent = function matchPercent(value) {\n    var match = isPercent(value);\n    if (match) {\n        var f = parseFloat(match[1], 10);\n        var percent = f / 100;\n        return {\n            percent: percent,\n            value: f\n        };\n    }\n    return null;\n};\nvar omit = function omit(keys, object) {\n    var _keys = castArray(keys);\n    var copy = Object.assign({}, object);\n    _keys.forEach(function(key) {\n        delete copy[key];\n    });\n    return copy;\n};\nvar pick = function pick(keys, obj) {\n    var result = {};\n    for(var i = 0; i < keys.length; i += 1){\n        var key = keys[i];\n        if (key in obj) result[key] = obj[key];\n    }\n    return result;\n};\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */ var upperFirst = function upperFirst(value) {\n    if (!value) return value;\n    return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/fns/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/font/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@react-pdf/font/lib/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FontStore)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var is_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! is-url */ \"(ssr)/./node_modules/is-url/index.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! fontkit */ \"(ssr)/./node_modules/fontkit/dist/module.mjs\");\n\n\n\n\n\n\n\nvar _excluded = [\n    \"src\",\n    \"fontWeight\",\n    \"fontStyle\"\n];\nvar FONT_WEIGHTS = {\n    thin: 100,\n    hairline: 100,\n    ultralight: 200,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    demibold: 600,\n    bold: 700,\n    ultrabold: 800,\n    extrabold: 800,\n    heavy: 900,\n    black: 900\n};\nvar fetchFont = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee(src, options) {\n        var response, data;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    _context.next = 2;\n                    return cross_fetch__WEBPACK_IMPORTED_MODULE_5__(src, options);\n                case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.arrayBuffer();\n                case 5:\n                    data = _context.sent;\n                    return _context.abrupt(\"return\", new Uint8Array(data));\n                case 7:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function fetchFont(_x, _x2) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar isDataUrl = function isDataUrl(dataUrl) {\n    var header = dataUrl.split(\",\")[0];\n    var hasDataPrefix = header.substring(0, 5) === \"data:\";\n    var hasBase64Prefix = header.split(\";\")[1] === \"base64\";\n    return hasDataPrefix && hasBase64Prefix;\n};\nvar resolveFontWeight = function resolveFontWeight(value) {\n    return typeof value === \"string\" ? FONT_WEIGHTS[value] : value;\n};\nvar sortByFontWeight = function sortByFontWeight(a, b) {\n    return a.fontWeight - b.fontWeight;\n};\nvar FontSource = /*#__PURE__*/ function() {\n    function FontSource(src, fontFamily, fontStyle, fontWeight, options) {\n        this.src = src;\n        this.fontFamily = fontFamily;\n        this.fontStyle = fontStyle || \"normal\";\n        this.fontWeight = fontWeight || 400;\n        this.data = null;\n        this.options = options;\n        this.loadResultPromise = null;\n    }\n    var _proto = FontSource.prototype;\n    _proto._load = /*#__PURE__*/ function() {\n        var _load2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee2() {\n            var postscriptName, raw, uint8Array, _this$options, headers, body, _this$options$method, method, data;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee2$(_context2) {\n                while(1)switch(_context2.prev = _context2.next){\n                    case 0:\n                        postscriptName = this.options.postscriptName;\n                        if (!isDataUrl(this.src)) {\n                            _context2.next = 7;\n                            break;\n                        }\n                        raw = this.src.split(\",\")[1];\n                        uint8Array = new Uint8Array(atob(raw).split(\"\").map(function(c) {\n                            return c.charCodeAt(0);\n                        }));\n                        this.data = fontkit__WEBPACK_IMPORTED_MODULE_6__.create(uint8Array, postscriptName);\n                        _context2.next = 19;\n                        break;\n                    case 7:\n                        if (!is_url__WEBPACK_IMPORTED_MODULE_4__(this.src)) {\n                            _context2.next = 15;\n                            break;\n                        }\n                        _this$options = this.options, headers = _this$options.headers, body = _this$options.body, _this$options$method = _this$options.method, method = _this$options$method === void 0 ? \"GET\" : _this$options$method;\n                        _context2.next = 11;\n                        return fetchFont(this.src, {\n                            method: method,\n                            body: body,\n                            headers: headers\n                        });\n                    case 11:\n                        data = _context2.sent;\n                        this.data = fontkit__WEBPACK_IMPORTED_MODULE_6__.create(data, postscriptName);\n                        _context2.next = 19;\n                        break;\n                    case 15:\n                        _context2.next = 18;\n                        return fontkit__WEBPACK_IMPORTED_MODULE_6__.open(this.src, postscriptName);\n                    case 18:\n                        this.data = _context2.sent;\n                    case 19:\n                    case \"end\":\n                        return _context2.stop();\n                }\n            }, _callee2, this);\n        }));\n        function _load() {\n            return _load2.apply(this, arguments);\n        }\n        return _load;\n    }();\n    _proto.load = /*#__PURE__*/ function() {\n        var _load3 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee3() {\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee3$(_context3) {\n                while(1)switch(_context3.prev = _context3.next){\n                    case 0:\n                        if (this.loadResultPromise === null) {\n                            this.loadResultPromise = this._load();\n                        }\n                        return _context3.abrupt(\"return\", this.loadResultPromise);\n                    case 2:\n                    case \"end\":\n                        return _context3.stop();\n                }\n            }, _callee3, this);\n        }));\n        function load() {\n            return _load3.apply(this, arguments);\n        }\n        return load;\n    }();\n    return FontSource;\n}();\nvar Font = /*#__PURE__*/ function() {\n    Font.create = function create(family) {\n        return new Font(family);\n    };\n    function Font(family) {\n        this.family = family;\n        this.sources = [];\n    }\n    var _proto2 = Font.prototype;\n    _proto2.register = function register(_ref2) {\n        var src = _ref2.src, fontWeight = _ref2.fontWeight, fontStyle = _ref2.fontStyle, options = _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3__(_ref2, _excluded);\n        var numericFontWeight = resolveFontWeight(fontWeight);\n        this.sources.push(new FontSource(src, this.family, fontStyle, numericFontWeight, options));\n    };\n    _proto2.resolve = function resolve(descriptor) {\n        var _descriptor$fontWeigh = descriptor.fontWeight, fontWeight = _descriptor$fontWeigh === void 0 ? 400 : _descriptor$fontWeigh, _descriptor$fontStyle = descriptor.fontStyle, fontStyle = _descriptor$fontStyle === void 0 ? \"normal\" : _descriptor$fontStyle;\n        var styleSources = this.sources.filter(function(s) {\n            return s.fontStyle === fontStyle;\n        });\n        // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        var exactFit = styleSources.find(function(s) {\n            return s.fontWeight === fontWeight;\n        });\n        if (exactFit) return exactFit;\n        var res;\n        if (fontWeight >= 400 && fontWeight <= 500) {\n            var leftOffset = styleSources.filter(function(s) {\n                return s.fontWeight <= fontWeight;\n            });\n            var rightOffset = styleSources.filter(function(s) {\n                return s.fontWeight > 500;\n            });\n            var fit = styleSources.filter(function(s) {\n                return s.fontWeight >= fontWeight && s.fontWeight < 500;\n            });\n            res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n        }\n        var lt = styleSources.filter(function(s) {\n            return s.fontWeight < fontWeight;\n        }).sort(sortByFontWeight);\n        var gt = styleSources.filter(function(s) {\n            return s.fontWeight > fontWeight;\n        }).sort(sortByFontWeight);\n        if (fontWeight < 400) {\n            res = lt[lt.length - 1] || gt[0];\n        }\n        if (fontWeight > 500) {\n            res = gt[0] || lt[lt.length - 1];\n        }\n        if (!res) {\n            throw new Error(\"Could not resolve font for \" + this.family + \", fontWeight \" + fontWeight);\n        }\n        return res;\n    };\n    return Font;\n}();\nvar standard = [\n    \"Courier\",\n    \"Courier-Bold\",\n    \"Courier-Oblique\",\n    \"Courier-BoldOblique\",\n    \"Helvetica\",\n    \"Helvetica-Bold\",\n    \"Helvetica-Oblique\",\n    \"Helvetica-BoldOblique\",\n    \"Times-Roman\",\n    \"Times-Bold\",\n    \"Times-Italic\",\n    \"Times-BoldItalic\"\n];\nfunction FontStore() {\n    var _this = this;\n    var fonts = {};\n    var emojiSource = null;\n    var hyphenationCallback = null;\n    this.register = function(data) {\n        var family = data.family;\n        if (!fonts[family]) {\n            fonts[family] = Font.create(family);\n        }\n        // Bulk loading\n        if (data.fonts) {\n            for(var i = 0; i < data.fonts.length; i += 1){\n                fonts[family].register(_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_2__({\n                    family: family\n                }, data.fonts[i]));\n            }\n        } else {\n            fonts[family].register(data);\n        }\n    };\n    this.registerEmojiSource = function(_ref) {\n        var url = _ref.url, _ref$format = _ref.format, format = _ref$format === void 0 ? \"png\" : _ref$format, builder = _ref.builder, _ref$withVariationSel = _ref.withVariationSelectors, withVariationSelectors = _ref$withVariationSel === void 0 ? false : _ref$withVariationSel;\n        emojiSource = {\n            url: url,\n            format: format,\n            builder: builder,\n            withVariationSelectors: withVariationSelectors\n        };\n    };\n    this.registerHyphenationCallback = function(callback) {\n        hyphenationCallback = callback;\n    };\n    this.getFont = function(descriptor) {\n        var fontFamily = descriptor.fontFamily;\n        var isStandard = standard.includes(fontFamily);\n        if (isStandard) return null;\n        if (!fonts[fontFamily]) {\n            throw new Error(\"Font family not registered: \" + fontFamily + \". Please register it calling Font.register() method.\");\n        }\n        return fonts[fontFamily].resolve(descriptor);\n    };\n    this.load = /*#__PURE__*/ function() {\n        var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee(descriptor) {\n            var fontFamily, isStandard, f;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee$(_context) {\n                while(1)switch(_context.prev = _context.next){\n                    case 0:\n                        fontFamily = descriptor.fontFamily;\n                        isStandard = standard.includes(fontFamily);\n                        if (!isStandard) {\n                            _context.next = 4;\n                            break;\n                        }\n                        return _context.abrupt(\"return\");\n                    case 4:\n                        f = _this.getFont(descriptor); // We cache the font to avoid fetching it many times\n                        _context.next = 7;\n                        return f.load();\n                    case 7:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }, _callee);\n        }));\n        return function(_x) {\n            return _ref2.apply(this, arguments);\n        };\n    }();\n    this.reset = function() {\n        var keys = Object.keys(fonts);\n        for(var i = 0; i < keys.length; i += 1){\n            var key = keys[i];\n            fonts[key].data = null;\n        }\n    };\n    this.clear = function() {\n        fonts = {};\n    };\n    this.getRegisteredFonts = function() {\n        return fonts;\n    };\n    this.getEmojiSource = function() {\n        return emojiSource;\n    };\n    this.getHyphenationCallback = function() {\n        return hyphenationCallback;\n    };\n    this.getRegisteredFontFamilies = function() {\n        return Object.keys(fonts);\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9mb250L2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE0RTtBQUNKO0FBQ2xCO0FBQzBDO0FBQ3JFO0FBQ0s7QUFDRztBQUVuQyxJQUFJTyxZQUFZO0lBQUM7SUFBTztJQUFjO0NBQVk7QUFDbEQsSUFBSUMsZUFBZTtJQUNqQkMsTUFBTTtJQUNOQyxVQUFVO0lBQ1ZDLFlBQVk7SUFDWkMsWUFBWTtJQUNaQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxVQUFVO0lBQ1ZDLFVBQVU7SUFDVkMsTUFBTTtJQUNOQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsT0FBTztJQUNQQyxPQUFPO0FBQ1Q7QUFDQSxJQUFJQyxZQUFZLFdBQVcsR0FBRTtJQUMzQixJQUFJQyxPQUFPdkIsb0VBQWlCQSxDQUFFLFdBQVcsR0FBRUQsc0VBQW1CQSxHQUFHeUIsSUFBSSxDQUFDLFNBQVNDLFFBQVFDLEdBQUcsRUFBRUMsT0FBTztRQUNqRyxJQUFJQyxVQUFVQztRQUNkLE9BQU85QixzRUFBbUJBLEdBQUcrQixJQUFJLENBQUMsU0FBU0MsU0FBU0MsUUFBUTtZQUMxRCxNQUFPLEVBQUcsT0FBUUEsU0FBU0MsSUFBSSxHQUFHRCxTQUFTRSxJQUFJO2dCQUM3QyxLQUFLO29CQUNIRixTQUFTRSxJQUFJLEdBQUc7b0JBQ2hCLE9BQU85Qix3Q0FBS0EsQ0FBQ3NCLEtBQUtDO2dCQUNwQixLQUFLO29CQUNIQyxXQUFXSSxTQUFTRyxJQUFJO29CQUN4QkgsU0FBU0UsSUFBSSxHQUFHO29CQUNoQixPQUFPTixTQUFTUSxXQUFXO2dCQUM3QixLQUFLO29CQUNIUCxPQUFPRyxTQUFTRyxJQUFJO29CQUNwQixPQUFPSCxTQUFTSyxNQUFNLENBQUMsVUFBVSxJQUFJQyxXQUFXVDtnQkFDbEQsS0FBSztnQkFDTCxLQUFLO29CQUNILE9BQU9HLFNBQVNPLElBQUk7WUFDeEI7UUFDRixHQUFHZDtJQUNMO0lBQ0Es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TUFBTSxDQUFDO29CQUN6QixLQUFLO3dCQUNIK0YsSUFBSWpCLE1BQU1jLE9BQU8sQ0FBQ2pDLGFBQWEsb0RBQW9EO3dCQUNuRmhFLFNBQVNFLElBQUksR0FBRzt3QkFDaEIsT0FBT2tHLEVBQUVsRCxJQUFJO29CQUNmLEtBQUs7b0JBQ0wsS0FBSzt3QkFDSCxPQUFPbEQsU0FBU08sSUFBSTtnQkFDeEI7WUFDRixHQUFHZDtRQUNMO1FBQ0EsT0FBTyxTQUFVZSxFQUFFO1lBQ2pCLE9BQU9vRCxNQUFNbEQsS0FBSyxDQUFDLElBQUksRUFBRUM7UUFDM0I7SUFDRjtJQUNBLElBQUksQ0FBQzBGLEtBQUssR0FBRztRQUNYLElBQUlDLE9BQU9DLE9BQU9ELElBQUksQ0FBQ2xCO1FBQ3ZCLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJZSxLQUFLMUIsTUFBTSxFQUFFVyxLQUFLLEVBQUc7WUFDdkMsSUFBSWlCLE1BQU1GLElBQUksQ0FBQ2YsRUFBRTtZQUNqQkgsS0FBSyxDQUFDb0IsSUFBSSxDQUFDM0csSUFBSSxHQUFHO1FBQ3BCO0lBQ0Y7SUFDQSxJQUFJLENBQUM0RyxLQUFLLEdBQUc7UUFDWHJCLFFBQVEsQ0FBQztJQUNYO0lBQ0EsSUFBSSxDQUFDc0Isa0JBQWtCLEdBQUc7UUFDeEIsT0FBT3RCO0lBQ1Q7SUFDQSxJQUFJLENBQUN1QixjQUFjLEdBQUc7UUFDcEIsT0FBT3RCO0lBQ1Q7SUFDQSxJQUFJLENBQUN1QixzQkFBc0IsR0FBRztRQUM1QixPQUFPdEI7SUFDVDtJQUNBLElBQUksQ0FBQ3VCLHlCQUF5QixHQUFHO1FBQy9CLE9BQU9OLE9BQU9ELElBQUksQ0FBQ2xCO0lBQ3JCO0FBQ0Y7QUFFZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtZWNvbW1lcmNlLXVpdC8uL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmL2ZvbnQvbGliL2luZGV4LmpzPzdiNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9yZWdlbmVyYXRvclJ1bnRpbWUnO1xuaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvcic7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGlzVXJsIGZyb20gJ2lzLXVybCc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnY3Jvc3MtZmV0Y2gnO1xuaW1wb3J0ICogYXMgZm9udGtpdCBmcm9tICdmb250a2l0JztcblxudmFyIF9leGNsdWRlZCA9IFtcInNyY1wiLCBcImZvbnRXZWlnaHRcIiwgXCJmb250U3R5bGVcIl07XG52YXIgRk9OVF9XRUlHSFRTID0ge1xuICB0aGluOiAxMDAsXG4gIGhhaXJsaW5lOiAxMDAsXG4gIHVsdHJhbGlnaHQ6IDIwMCxcbiAgZXh0cmFsaWdodDogMjAwLFxuICBsaWdodDogMzAwLFxuICBub3JtYWw6IDQwMCxcbiAgbWVkaXVtOiA1MDAsXG4gIHNlbWlib2xkOiA2MDAsXG4gIGRlbWlib2xkOiA2MDAsXG4gIGJvbGQ6IDcwMCxcbiAgdWx0cmFib2xkOiA4MDAsXG4gIGV4dHJhYm9sZDogODAwLFxuICBoZWF2eTogOTAwLFxuICBibGFjazogOTAwXG59O1xudmFyIGZldGNoRm9udCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKHNyYywgb3B0aW9ucykge1xuICAgIHZhciByZXNwb25zZSwgZGF0YTtcbiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjtcbiAgICAgICAgICByZXR1cm4gZmV0Y2goc3JjLCBvcHRpb25zKTtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDtcbiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTtcbiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYXJyYXlCdWZmZXIoKTtcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgbmV3IFVpbnQ4QXJyYXkoZGF0YSkpO1xuICAgICAgICBjYXNlIDc6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgfVxuICAgIH0sIF9jYWxsZWUpO1xuICB9KSk7XG4gIHJldHVybiBmdW5jdGlvbiBmZXRjaEZvbnQoX3gsIF94Mikge1xuICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59KCk7XG52YXIgaXNEYXRhVXJsID0gZnVuY3Rpb24gaXNEYXRhVXJsKGRhdGFVcmwpIHtcbiAgdmFyIGhlYWRlciA9IGRhdGFVcmwuc3BsaXQoJywnKVswXTtcbiAgdmFyIGhhc0RhdGFQcmVmaXggPSBoZWFkZXIuc3Vic3RyaW5nKDAsIDUpID09PSAnZGF0YTonO1xuICB2YXIgaGFzQmFzZTY0UHJlZml4ID0gaGVhZGVyLnNwbGl0KCc7JylbMV0gPT09ICdiYXNlNjQnO1xuICByZXR1cm4gaGFzRGF0YVByZWZpeCAmJiBoYXNCYXNlNjRQcmVmaXg7XG59O1xudmFyIHJlc29sdmVGb250V2VpZ2h0ID0gZnVuY3Rpb24gcmVzb2x2ZUZvbnRXZWlnaHQodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgPyBGT05UX1dFSUdIVFNbdmFsdWVdIDogdmFsdWU7XG59O1xudmFyIHNvcnRCeUZvbnRXZWlnaHQgPSBmdW5jdGlvbiBzb3J0QnlGb250V2VpZ2h0KGEsIGIpIHtcbiAgcmV0dXJuIGEuZm9udFdlaWdodCAtIGIuZm9udFdlaWdodDtcbn07XG52YXIgRm9udFNvdXJjZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEZvbnRTb3VyY2Uoc3JjLCBmb250RmFtaWx5LCBmb250U3R5bGUsIGZvbnRXZWlnaHQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLnNyYyA9IHNyYztcbiAgICB0aGlzLmZvbnRGYW1pbHkgPSBmb250RmFtaWx5O1xuICAgIHRoaXMuZm9udFN0eWxlID0gZm9udFN0eWxlIHx8ICdub3JtYWwnO1xuICAgIHRoaXMuZm9udFdlaWdodCA9IGZvbnRXZWlnaHQgfHwgNDAwO1xuICAgIHRoaXMuZGF0YSA9IG51bGw7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLmxvYWRSZXN1bHRQcm9taXNlID0gbnVsbDtcbiAgfVxuICB2YXIgX3Byb3RvID0gRm9udFNvdXJjZS5wcm90b3R5cGU7XG4gIF9wcm90by5fbG9hZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9sb2FkMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7XG4gICAgICB2YXIgcG9zdHNjcmlwdE5hbWUsIHJhdywgdWludDhBcnJheSwgX3RoaXMkb3B0aW9ucywgaGVhZGVycywgYm9keSwgX3RoaXMkb3B0aW9ucyRtZXRob2QsIG1ldGhvZCwgZGF0YTtcbiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7XG4gICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHtcbiAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICBwb3N0c2NyaXB0TmFtZSA9IHRoaXMub3B0aW9ucy5wb3N0c2NyaXB0TmFtZTtcbiAgICAgICAgICAgIGlmICghaXNEYXRhVXJsKHRoaXMuc3JjKSkge1xuICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmF3ID0gdGhpcy5zcmMuc3BsaXQoJywnKVsxXTtcbiAgICAgICAgICAgIHVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheShhdG9iKHJhdykuc3BsaXQoJycpLm1hcChmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICByZXR1cm4gYy5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gZm9udGtpdC5jcmVhdGUodWludDhBcnJheSwgcG9zdHNjcmlwdE5hbWUpO1xuICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxOTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgIGlmICghKGlzVXJsKHRoaXMuc3JjKSkpIHtcbiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcyRvcHRpb25zID0gdGhpcy5vcHRpb25zLCBoZWFkZXJzID0gX3RoaXMkb3B0aW9ucy5oZWFkZXJzLCBib2R5ID0gX3RoaXMkb3B0aW9ucy5ib2R5LCBfdGhpcyRvcHRpb25zJG1ldGhvZCA9IF90aGlzJG9wdGlvbnMubWV0aG9kLCBtZXRob2QgPSBfdGhpcyRvcHRpb25zJG1ldGhvZCA9PT0gdm9pZCAwID8gJ0dFVCcgOiBfdGhpcyRvcHRpb25zJG1ldGhvZDtcbiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7XG4gICAgICAgICAgICByZXR1cm4gZmV0Y2hGb250KHRoaXMuc3JjLCB7XG4gICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50O1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gZm9udGtpdC5jcmVhdGUoZGF0YSwgcG9zdHNjcmlwdE5hbWUpO1xuICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxOTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMTU6XG4gICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE4O1xuICAgICAgICAgICAgcmV0dXJuIGZvbnRraXQub3Blbih0aGlzLnNyYywgcG9zdHNjcmlwdE5hbWUpO1xuICAgICAgICAgIGNhc2UgMTg6XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSBfY29udGV4dDIuc2VudDtcbiAgICAgICAgICBjYXNlIDE5OlxuICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgICB9XG4gICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7XG4gICAgfSkpO1xuICAgIGZ1bmN0aW9uIF9sb2FkKCkge1xuICAgICAgcmV0dXJuIF9sb2FkMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgICByZXR1cm4gX2xvYWQ7XG4gIH0oKTtcbiAgX3Byb3RvLmxvYWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgIHZhciBfbG9hZDMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkge1xuICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHtcbiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGlmICh0aGlzLmxvYWRSZXN1bHRQcm9taXNlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgIHRoaXMubG9hZFJlc3VsdFByb21pc2UgPSB0aGlzLl9sb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdChcInJldHVyblwiLCB0aGlzLmxvYWRSZXN1bHRQcm9taXNlKTtcbiAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTtcbiAgICB9KSk7XG4gICAgZnVuY3Rpb24gbG9hZCgpIHtcbiAgICAgIHJldHVybiBfbG9hZDMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gICAgcmV0dXJuIGxvYWQ7XG4gIH0oKTtcbiAgcmV0dXJuIEZvbnRTb3VyY2U7XG59KCk7XG52YXIgRm9udCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIEZvbnQuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGZhbWlseSkge1xuICAgIHJldHVybiBuZXcgRm9udChmYW1pbHkpO1xuICB9O1xuICBmdW5jdGlvbiBGb250KGZhbWlseSkge1xuICAgIHRoaXMuZmFtaWx5ID0gZmFtaWx5O1xuICAgIHRoaXMuc291cmNlcyA9IFtdO1xuICB9XG4gIHZhciBfcHJvdG8yID0gRm9udC5wcm90b3R5cGU7XG4gIF9wcm90bzIucmVnaXN0ZXIgPSBmdW5jdGlvbiByZWdpc3RlcihfcmVmMikge1xuICAgIHZhciBzcmMgPSBfcmVmMi5zcmMsXG4gICAgICBmb250V2VpZ2h0ID0gX3JlZjIuZm9udFdlaWdodCxcbiAgICAgIGZvbnRTdHlsZSA9IF9yZWYyLmZvbnRTdHlsZSxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgX2V4Y2x1ZGVkKTtcbiAgICB2YXIgbnVtZXJpY0ZvbnRXZWlnaHQgPSByZXNvbHZlRm9udFdlaWdodChmb250V2VpZ2h0KTtcbiAgICB0aGlzLnNvdXJjZXMucHVzaChuZXcgRm9udFNvdXJjZShzcmMsIHRoaXMuZmFtaWx5LCBmb250U3R5bGUsIG51bWVyaWNGb250V2VpZ2h0LCBvcHRpb25zKSk7XG4gIH07XG4gIF9wcm90bzIucmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUoZGVzY3JpcHRvcikge1xuICAgIHZhciBfZGVzY3JpcHRvciRmb250V2VpZ2ggPSBkZXNjcmlwdG9yLmZvbnRXZWlnaHQsXG4gICAgICBmb250V2VpZ2h0ID0gX2Rlc2NyaXB0b3IkZm9udFdlaWdoID09PSB2b2lkIDAgPyA0MDAgOiBfZGVzY3JpcHRvciRmb250V2VpZ2gsXG4gICAgICBfZGVzY3JpcHRvciRmb250U3R5bGUgPSBkZXNjcmlwdG9yLmZvbnRTdHlsZSxcbiAgICAgIGZvbnRTdHlsZSA9IF9kZXNjcmlwdG9yJGZvbnRTdHlsZSA9PT0gdm9pZCAwID8gJ25vcm1hbCcgOiBfZGVzY3JpcHRvciRmb250U3R5bGU7XG4gICAgdmFyIHN0eWxlU291cmNlcyA9IHRoaXMuc291cmNlcy5maWx0ZXIoZnVuY3Rpb24gKHMpIHtcbiAgICAgIHJldHVybiBzLmZvbnRTdHlsZSA9PT0gZm9udFN0eWxlO1xuICAgIH0pO1xuXG4gICAgLy8gV2VpZ2h0IHJlc29sdXRpb24uIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9mb250LXdlaWdodCNGYWxsYmFja193ZWlnaHRzXG4gICAgdmFyIGV4YWN0Rml0ID0gc3R5bGVTb3VyY2VzLmZpbmQoZnVuY3Rpb24gKHMpIHtcbiAgICAgIHJldHVybiBzLmZvbnRXZWlnaHQgPT09IGZvbnRXZWlnaHQ7XG4gICAgfSk7XG4gICAgaWYgKGV4YWN0Rml0KSByZXR1cm4gZXhhY3RGaXQ7XG4gICAgdmFyIHJlcztcbiAgICBpZiAoZm9udFdlaWdodCA+PSA0MDAgJiYgZm9udFdlaWdodCA8PSA1MDApIHtcbiAgICAgIHZhciBsZWZ0T2Zmc2V0ID0gc3R5bGVTb3VyY2VzLmZpbHRlcihmdW5jdGlvbiAocykge1xuICAgICAgICByZXR1cm4gcy5mb250V2VpZ2h0IDw9IGZvbnRXZWlnaHQ7XG4gICAgICB9KTtcbiAgICAgIHZhciByaWdodE9mZnNldCA9IHN0eWxlU291cmNlcy5maWx0ZXIoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgcmV0dXJuIHMuZm9udFdlaWdodCA+IDUwMDtcbiAgICAgIH0pO1xuICAgICAgdmFyIGZpdCA9IHN0eWxlU291cmNlcy5maWx0ZXIoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgcmV0dXJuIHMuZm9udFdlaWdodCA+PSBmb250V2VpZ2h0ICYmIHMuZm9udFdlaWdodCA8IDUwMDtcbiAgICAgIH0pO1xuICAgICAgcmVzID0gZml0WzBdIHx8IGxlZnRPZmZzZXRbbGVmdE9mZnNldC5sZW5ndGggLSAxXSB8fCByaWdodE9mZnNldFswXTtcbiAgICB9XG4gICAgdmFyIGx0ID0gc3R5bGVTb3VyY2VzLmZpbHRlcihmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuIHMuZm9udFdlaWdodCA8IGZvbnRXZWlnaHQ7XG4gICAgfSkuc29ydChzb3J0QnlGb250V2VpZ2h0KTtcbiAgICB2YXIgZ3QgPSBzdHlsZVNvdXJjZXMuZmlsdGVyKGZ1bmN0aW9uIChzKSB7XG4gICAgICByZXR1cm4gcy5mb250V2VpZ2h0ID4gZm9udFdlaWdodDtcbiAgICB9KS5zb3J0KHNvcnRCeUZvbnRXZWlnaHQpO1xuICAgIGlmIChmb250V2VpZ2h0IDwgNDAwKSB7XG4gICAgICByZXMgPSBsdFtsdC5sZW5ndGggLSAxXSB8fCBndFswXTtcbiAgICB9XG4gICAgaWYgKGZvbnRXZWlnaHQgPiA1MDApIHtcbiAgICAgIHJlcyA9IGd0WzBdIHx8IGx0W2x0Lmxlbmd0aCAtIDFdO1xuICAgIH1cbiAgICBpZiAoIXJlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IHJlc29sdmUgZm9udCBmb3IgXCIgKyB0aGlzLmZhbWlseSArIFwiLCBmb250V2VpZ2h0IFwiICsgZm9udFdlaWdodCk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH07XG4gIHJldHVybiBGb250O1xufSgpO1xuXG52YXIgc3RhbmRhcmQgPSBbJ0NvdXJpZXInLCAnQ291cmllci1Cb2xkJywgJ0NvdXJpZXItT2JsaXF1ZScsICdDb3VyaWVyLUJvbGRPYmxpcXVlJywgJ0hlbHZldGljYScsICdIZWx2ZXRpY2EtQm9sZCcsICdIZWx2ZXRpY2EtT2JsaXF1ZScsICdIZWx2ZXRpY2EtQm9sZE9ibGlxdWUnLCAnVGltZXMtUm9tYW4nLCAnVGltZXMtQm9sZCcsICdUaW1lcy1JdGFsaWMnLCAnVGltZXMtQm9sZEl0YWxpYyddO1xuXG5mdW5jdGlvbiBGb250U3RvcmUoKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG4gIHZhciBmb250cyA9IHt9O1xuICB2YXIgZW1vamlTb3VyY2UgPSBudWxsO1xuICB2YXIgaHlwaGVuYXRpb25DYWxsYmFjayA9IG51bGw7XG4gIHRoaXMucmVnaXN0ZXIgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIHZhciBmYW1pbHkgPSBkYXRhLmZhbWlseTtcbiAgICBpZiAoIWZvbnRzW2ZhbWlseV0pIHtcbiAgICAgIGZvbnRzW2ZhbWlseV0gPSBGb250LmNyZWF0ZShmYW1pbHkpO1xuICAgIH1cblxuICAgIC8vIEJ1bGsgbG9hZGluZ1xuICAgIGlmIChkYXRhLmZvbnRzKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEuZm9udHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgZm9udHNbZmFtaWx5XS5yZWdpc3RlcihfZXh0ZW5kcyh7XG4gICAgICAgICAgZmFtaWx5OiBmYW1pbHlcbiAgICAgICAgfSwgZGF0YS5mb250c1tpXSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb250c1tmYW1pbHldLnJlZ2lzdGVyKGRhdGEpO1xuICAgIH1cbiAgfTtcbiAgdGhpcy5yZWdpc3RlckVtb2ppU291cmNlID0gZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgdXJsID0gX3JlZi51cmwsXG4gICAgICBfcmVmJGZvcm1hdCA9IF9yZWYuZm9ybWF0LFxuICAgICAgZm9ybWF0ID0gX3JlZiRmb3JtYXQgPT09IHZvaWQgMCA/ICdwbmcnIDogX3JlZiRmb3JtYXQsXG4gICAgICBidWlsZGVyID0gX3JlZi5idWlsZGVyLFxuICAgICAgX3JlZiR3aXRoVmFyaWF0aW9uU2VsID0gX3JlZi53aXRoVmFyaWF0aW9uU2VsZWN0b3JzLFxuICAgICAgd2l0aFZhcmlhdGlvblNlbGVjdG9ycyA9IF9yZWYkd2l0aFZhcmlhdGlvblNlbCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHdpdGhWYXJpYXRpb25TZWw7XG4gICAgZW1vamlTb3VyY2UgPSB7XG4gICAgICB1cmw6IHVybCxcbiAgICAgIGZvcm1hdDogZm9ybWF0LFxuICAgICAgYnVpbGRlcjogYnVpbGRlcixcbiAgICAgIHdpdGhWYXJpYXRpb25TZWxlY3RvcnM6IHdpdGhWYXJpYXRpb25TZWxlY3RvcnNcbiAgICB9O1xuICB9O1xuICB0aGlzLnJlZ2lzdGVySHlwaGVuYXRpb25DYWxsYmFjayA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIGh5cGhlbmF0aW9uQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfTtcbiAgdGhpcy5nZXRGb250ID0gZnVuY3Rpb24gKGRlc2NyaXB0b3IpIHtcbiAgICB2YXIgZm9udEZhbWlseSA9IGRlc2NyaXB0b3IuZm9udEZhbWlseTtcbiAgICB2YXIgaXNTdGFuZGFyZCA9IHN0YW5kYXJkLmluY2x1ZGVzKGZvbnRGYW1pbHkpO1xuICAgIGlmIChpc1N0YW5kYXJkKSByZXR1cm4gbnVsbDtcbiAgICBpZiAoIWZvbnRzW2ZvbnRGYW1pbHldKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGb250IGZhbWlseSBub3QgcmVnaXN0ZXJlZDogXCIgKyBmb250RmFtaWx5ICsgXCIuIFBsZWFzZSByZWdpc3RlciBpdCBjYWxsaW5nIEZvbnQucmVnaXN0ZXIoKSBtZXRob2QuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gZm9udHNbZm9udEZhbWlseV0ucmVzb2x2ZShkZXNjcmlwdG9yKTtcbiAgfTtcbiAgdGhpcy5sb2FkID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZGVzY3JpcHRvcikge1xuICAgICAgdmFyIGZvbnRGYW1pbHksIGlzU3RhbmRhcmQsIGY7XG4gICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICBmb250RmFtaWx5ID0gZGVzY3JpcHRvci5mb250RmFtaWx5O1xuICAgICAgICAgICAgaXNTdGFuZGFyZCA9IHN0YW5kYXJkLmluY2x1ZGVzKGZvbnRGYW1pbHkpO1xuICAgICAgICAgICAgaWYgKCFpc1N0YW5kYXJkKSB7XG4gICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIik7XG4gICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgZiA9IF90aGlzLmdldEZvbnQoZGVzY3JpcHRvcik7IC8vIFdlIGNhY2hlIHRoZSBmb250IHRvIGF2b2lkIGZldGNoaW5nIGl0IG1hbnkgdGltZXNcbiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3O1xuICAgICAgICAgICAgcmV0dXJuIGYubG9hZCgpO1xuICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICB9XG4gICAgICB9LCBfY2FsbGVlKTtcbiAgICB9KSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkge1xuICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfSgpO1xuICB0aGlzLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZm9udHMpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICBmb250c1trZXldLmRhdGEgPSBudWxsO1xuICAgIH1cbiAgfTtcbiAgdGhpcy5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICBmb250cyA9IHt9O1xuICB9O1xuICB0aGlzLmdldFJlZ2lzdGVyZWRGb250cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZm9udHM7XG4gIH07XG4gIHRoaXMuZ2V0RW1vamlTb3VyY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGVtb2ppU291cmNlO1xuICB9O1xuICB0aGlzLmdldEh5cGhlbmF0aW9uQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGh5cGhlbmF0aW9uQ2FsbGJhY2s7XG4gIH07XG4gIHRoaXMuZ2V0UmVnaXN0ZXJlZEZvbnRGYW1pbGllcyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZm9udHMpO1xuICB9O1xufVxuXG5leHBvcnQgeyBGb250U3RvcmUgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9leHRlbmRzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJpc1VybCIsImZldGNoIiwiZm9udGtpdCIsIl9leGNsdWRlZCIsIkZPTlRfV0VJR0hUUyIsInRoaW4iLCJoYWlybGluZSIsInVsdHJhbGlnaHQiLCJleHRyYWxpZ2h0IiwibGlnaHQiLCJub3JtYWwiLCJtZWRpdW0iLCJzZW1pYm9sZCIsImRlbWlib2xkIiwiYm9sZCIsInVsdHJhYm9sZCIsImV4dHJhYm9sZCIsImhlYXZ5IiwiYmxhY2siLCJmZXRjaEZvbnQiLCJfcmVmIiwibWFyayIsIl9jYWxsZWUiLCJzcmMiLCJvcHRpb25zIiwicmVzcG9uc2UiLCJkYXRhIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInNlbnQiLCJhcnJheUJ1ZmZlciIsImFicnVwdCIsIlVpbnQ4QXJyYXkiLCJzdG9wIiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyIsImlzRGF0YVVybCIsImRhdGFVcmwiLCJoZWFkZXIiLCJzcGxpdCIsImhhc0RhdGFQcmVmaXgiLCJzdWJzdHJpbmciLCJoYXNCYXNlNjRQcmVmaXgiLCJyZXNvbHZlRm9udFdlaWdodCIsInZhbHVlIiwic29ydEJ5Rm9udFdlaWdodCIsImEiLCJiIiwiZm9udFdlaWdodCIsIkZvbnRTb3VyY2UiLCJmb250RmFtaWx5IiwiZm9udFN0eWxlIiwibG9hZFJlc3VsdFByb21pc2UiLCJfcHJvdG8iLCJwcm90b3R5cGUiLCJfbG9hZCIsIl9sb2FkMiIsIl9jYWxsZWUyIiwicG9zdHNjcmlwdE5hbWUiLCJyYXciLCJ1aW50OEFycmF5IiwiX3RoaXMkb3B0aW9ucyIsImhlYWRlcnMiLCJib2R5IiwiX3RoaXMkb3B0aW9ucyRtZXRob2QiLCJtZXRob2QiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJhdG9iIiwibWFwIiwiYyIsImNoYXJDb2RlQXQiLCJjcmVhdGUiLCJvcGVuIiwibG9hZCIsIl9sb2FkMyIsIl9jYWxsZWUzIiwiX2NhbGxlZTMkIiwiX2NvbnRleHQzIiwiRm9udCIsImZhbWlseSIsInNvdXJjZXMiLCJfcHJvdG8yIiwicmVnaXN0ZXIiLCJfcmVmMiIsIm51bWVyaWNGb250V2VpZ2h0IiwicHVzaCIsInJlc29sdmUiLCJkZXNjcmlwdG9yIiwiX2Rlc2NyaXB0b3IkZm9udFdlaWdoIiwiX2Rlc2NyaXB0b3IkZm9udFN0eWxlIiwic3R5bGVTb3VyY2VzIiwiZmlsdGVyIiwicyIsImV4YWN0Rml0IiwiZmluZCIsInJlcyIsImxlZnRPZmZzZXQiLCJyaWdodE9mZnNldCIsImZpdCIsImxlbmd0aCIsImx0Iiwic29ydCIsImd0IiwiRXJyb3IiLCJzdGFuZGFyZCIsIkZvbnRTdG9yZSIsIl90aGlzIiwiZm9udHMiLCJlbW9qaVNvdXJjZSIsImh5cGhlbmF0aW9uQ2FsbGJhY2siLCJpIiwicmVnaXN0ZXJFbW9qaVNvdXJjZSIsInVybCIsIl9yZWYkZm9ybWF0IiwiZm9ybWF0IiwiYnVpbGRlciIsIl9yZWYkd2l0aFZhcmlhdGlvblNlbCIsIndpdGhWYXJpYXRpb25TZWxlY3RvcnMiLCJyZWdpc3Rlckh5cGhlbmF0aW9uQ2FsbGJhY2siLCJjYWxsYmFjayIsImdldEZvbnQiLCJpc1N0YW5kYXJkIiwiaW5jbHVkZXMiLCJmIiwicmVzZXQiLCJrZXlzIiwiT2JqZWN0Iiwia2V5IiwiY2xlYXIiLCJnZXRSZWdpc3RlcmVkRm9udHMiLCJnZXRFbW9qaVNvdXJjZSIsImdldEh5cGhlbmF0aW9uQ2FsbGJhY2siLCJnZXRSZWdpc3RlcmVkRm9udEZhbWlsaWVzIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/font/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/image/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@react-pdf/image/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ resolveImage)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-pdf/png-js */ \"(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\");\n/* harmony import */ var jpeg_exif__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jpeg-exif */ \"(ssr)/./node_modules/jpeg-exif/lib/index.js\");\n\n\n\n\n\n\n\n\n_react_pdf_png_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isValid = function isValid(data) {\n    try {\n        return !!new _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](data);\n    } catch (e) {\n        return false;\n    }\n};\nvar MARKERS = [\n    0xffc0,\n    0xffc1,\n    0xffc2,\n    0xffc3,\n    0xffc5,\n    0xffc6,\n    0xffc7,\n    0xffc8,\n    0xffc9,\n    0xffca,\n    0xffcb,\n    0xffcc,\n    0xffcd,\n    0xffce,\n    0xffcf\n];\nvar JPEG = function JPEG(data) {\n    this.data = null;\n    this.width = null;\n    this.height = null;\n    this.data = data;\n    if (data.readUInt16BE(0) !== 0xffd8) {\n        throw new Error(\"SOI not found in JPEG\");\n    }\n    var marker;\n    var pos = 2;\n    // Parse the EXIF orientation\n    this.orientation = jpeg_exif__WEBPACK_IMPORTED_MODULE_7__.fromBuffer(this.data).Orientation || 1;\n    while(pos < data.length){\n        marker = data.readUInt16BE(pos);\n        pos += 2;\n        if (MARKERS.includes(marker)) {\n            break;\n        }\n        pos += data.readUInt16BE(pos);\n    }\n    if (!MARKERS.includes(marker)) {\n        throw new Error(\"Invalid JPEG.\");\n    }\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n    if (this.orientation > 4) {\n        var _ref = [\n            this.height,\n            this.width\n        ];\n        this.width = _ref[0];\n        this.height = _ref[1];\n    }\n};\nJPEG.isValid = function(data) {\n    if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n        return false;\n    }\n    var marker;\n    var pos = 2;\n    while(pos < data.length){\n        marker = data.readUInt16BE(pos);\n        pos += 2;\n        if (MARKERS.includes(marker)) {\n            break;\n        }\n        pos += data.readUInt16BE(pos);\n    }\n    if (!MARKERS.includes(marker)) {\n        return false;\n    }\n    return true;\n};\nvar createCache = function createCache(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? 100 : _ref$limit;\n    var cache = {};\n    var keys = [];\n    return {\n        get: function get(key) {\n            return cache[key];\n        },\n        set: function set(key, value) {\n            keys.push(key);\n            if (keys.length > limit) {\n                delete cache[keys.shift()];\n            }\n            cache[key] = value;\n        },\n        reset: function reset() {\n            cache = {};\n            keys = [];\n        },\n        length: function length() {\n            return keys.length;\n        }\n    };\n};\nvar IMAGE_CACHE = createCache({\n    limit: 30\n});\nvar getAbsoluteLocalPath = function getAbsoluteLocalPath(src) {\n    var _url$parse = url__WEBPACK_IMPORTED_MODULE_3__.parse(src), protocol = _url$parse.protocol, auth = _url$parse.auth, host = _url$parse.host, port = _url$parse.port, hostname = _url$parse.hostname, pathname = _url$parse.path;\n    var absolutePath = path__WEBPACK_IMPORTED_MODULE_4__.resolve(pathname);\n    if (protocol && protocol !== \"file:\" || auth || host || port || hostname) {\n        return undefined;\n    }\n    return absolutePath;\n};\nvar fetchLocalFile = function fetchLocalFile(src) {\n    return new Promise(function(resolve, reject) {\n        try {\n            if (false) {}\n            var absolutePath = getAbsoluteLocalPath(src);\n            if (!absolutePath) {\n                reject(new Error(\"Cannot fetch non-local path: \" + src));\n                return;\n            }\n            fs__WEBPACK_IMPORTED_MODULE_2__.readFile(absolutePath, function(err, data) {\n                return err ? reject(err) : resolve(data);\n            });\n        } catch (err) {\n            reject(err);\n        }\n    });\n};\nvar fetchRemoteFile = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee(uri, options) {\n        var response, buffer;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    _context.next = 2;\n                    return cross_fetch__WEBPACK_IMPORTED_MODULE_5__(uri, options);\n                case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.buffer ? response.buffer() : response.arrayBuffer();\n                case 5:\n                    buffer = _context.sent;\n                    return _context.abrupt(\"return\", buffer.constructor.name === \"Buffer\" ? buffer : Buffer.from(buffer));\n                case 7:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function fetchRemoteFile(_x, _x2) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar isValidFormat = function isValidFormat(format) {\n    var lower = format.toLowerCase();\n    return lower === \"jpg\" || lower === \"jpeg\" || lower === \"png\";\n};\nvar guessFormat = function guessFormat(buffer) {\n    var format;\n    if (JPEG.isValid(buffer)) {\n        format = \"jpg\";\n    } else if (_react_pdf_png_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isValid(buffer)) {\n        format = \"png\";\n    }\n    return format;\n};\nvar isCompatibleBase64 = function isCompatibleBase64(_ref2) {\n    var uri = _ref2.uri;\n    return /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n};\nfunction getImage(body, extension) {\n    switch(extension.toLowerCase()){\n        case \"jpg\":\n        case \"jpeg\":\n            return new JPEG(body);\n        case \"png\":\n            return new _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](body);\n        default:\n            return null;\n    }\n}\nvar resolveBase64Image = function resolveBase64Image(_ref3) {\n    var uri = _ref3.uri;\n    var match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n    var format = match[1];\n    var data = match[2];\n    if (!isValidFormat(format)) {\n        throw new Error(\"Base64 image invalid format: \" + format);\n    }\n    return new Promise(function(resolve) {\n        return resolve(getImage(Buffer.from(data, \"base64\"), format));\n    });\n};\nvar resolveImageFromData = function resolveImageFromData(src) {\n    if (src.data && src.format) {\n        return new Promise(function(resolve) {\n            return resolve(getImage(src.data, src.format));\n        });\n    }\n    throw new Error(\"Invalid data given for local file: \" + JSON.stringify(src));\n};\nvar resolveBufferImage = function resolveBufferImage(buffer) {\n    var format = guessFormat(buffer);\n    if (format) {\n        return new Promise(function(resolve) {\n            return resolve(getImage(buffer, format));\n        });\n    }\n    return Promise.resolve();\n};\nvar getImageFormat = function getImageFormat(body) {\n    var isPng = body[0] === 137 && body[1] === 80 && body[2] === 78 && body[3] === 71 && body[4] === 13 && body[5] === 10 && body[6] === 26 && body[7] === 10;\n    var isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n    var extension = \"\";\n    if (isPng) {\n        extension = \"png\";\n    } else if (isJpg) {\n        extension = \"jpg\";\n    } else {\n        throw new Error(\"Not valid image extension\");\n    }\n    return extension;\n};\nvar resolveImageFromUrl = /*#__PURE__*/ function() {\n    var _ref4 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().mark(function _callee2(src) {\n        var uri, body, headers, _src$method, method, credentials, data, extension;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_0__().wrap(function _callee2$(_context2) {\n            while(1)switch(_context2.prev = _context2.next){\n                case 0:\n                    uri = src.uri, body = src.body, headers = src.headers, _src$method = src.method, method = _src$method === void 0 ? \"GET\" : _src$method, credentials = src.credentials;\n                    if (!getAbsoluteLocalPath(uri)) {\n                        _context2.next = 7;\n                        break;\n                    }\n                    _context2.next = 4;\n                    return fetchLocalFile(uri);\n                case 4:\n                    _context2.t0 = _context2.sent;\n                    _context2.next = 10;\n                    break;\n                case 7:\n                    _context2.next = 9;\n                    return fetchRemoteFile(uri, {\n                        body: body,\n                        headers: headers,\n                        method: method,\n                        credentials: credentials\n                    });\n                case 9:\n                    _context2.t0 = _context2.sent;\n                case 10:\n                    data = _context2.t0;\n                    extension = getImageFormat(data);\n                    return _context2.abrupt(\"return\", getImage(data, extension));\n                case 13:\n                case \"end\":\n                    return _context2.stop();\n            }\n        }, _callee2);\n    }));\n    return function resolveImageFromUrl(_x3) {\n        return _ref4.apply(this, arguments);\n    };\n}();\nvar resolveImage = function resolveImage(src, _temp) {\n    var _ref5 = _temp === void 0 ? {} : _temp, _ref5$cache = _ref5.cache, cache = _ref5$cache === void 0 ? true : _ref5$cache;\n    var image;\n    var cacheKey = src.data ? src.data.toString() : src.uri;\n    if (Buffer.isBuffer(src)) {\n        image = resolveBufferImage(src);\n    } else if (cache && IMAGE_CACHE.get(cacheKey)) {\n        return IMAGE_CACHE.get(cacheKey);\n    } else if (isCompatibleBase64(src)) {\n        image = resolveBase64Image(src);\n    } else if (typeof src === \"object\" && src.data) {\n        image = resolveImageFromData(src);\n    } else {\n        image = resolveImageFromUrl(src);\n    }\n    if (!image) {\n        throw new Error(\"Cannot resolve image\");\n    }\n    if (cache) {\n        IMAGE_CACHE.set(cacheKey, image);\n    }\n    return image;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/image/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/layout/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@react-pdf/layout/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ layout)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/src/index.js\");\n/* harmony import */ var _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-pdf/stylesheet */ \"(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js\");\n/* harmony import */ var _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-pdf/textkit */ \"(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-pdf/pdfkit */ \"(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\");\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var yoga_layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! yoga-layout */ \"(ssr)/./node_modules/yoga-layout/src/entrypoint/wasm-async-node.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var emoji_regex__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! emoji-regex */ \"(ssr)/./node_modules/@react-pdf/layout/node_modules/emoji-regex/index.mjs\");\n/* harmony import */ var _react_pdf_image__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @react-pdf/image */ \"(ssr)/./node_modules/@react-pdf/image/lib/index.js\");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create attributed string from text fragments\n *\n * @param {Object[]} fragments fragments\n * @returns {Object} attributed string\n */ var fromFragments = function fromFragments(fragments) {\n    var offset = 0;\n    var string = \"\";\n    var runs = [];\n    fragments.forEach(function(fragment) {\n        string += fragment.string;\n        runs.push({\n            start: offset,\n            end: offset + fragment.string.length,\n            attributes: fragment.attributes || {}\n        });\n        offset += fragment.string.length;\n    });\n    return {\n        string: string,\n        runs: runs\n    };\n};\n/**\n * Apply transformation to text string\n *\n * @param {string} text\n * @param {string} transformation type\n * @returns {string} transformed text\n */ var transformText = function transformText(text, transformation) {\n    switch(transformation){\n        case \"uppercase\":\n            return text.toUpperCase();\n        case \"lowercase\":\n            return text.toLowerCase();\n        case \"capitalize\":\n            return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.capitalize)(text);\n        case \"upperfirst\":\n            return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(text);\n        default:\n            return text;\n    }\n};\nvar StandardFont = /*#__PURE__*/ function() {\n    function StandardFont(src) {\n        this.name = src;\n        this.src = _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_5__.PDFFont.open(null, src);\n    }\n    var _proto = StandardFont.prototype;\n    _proto.encode = function encode(str) {\n        return this.src.encode(str);\n    };\n    _proto.layout = function layout(str) {\n        var _this = this;\n        var _this$encode = this.encode(str), encoded = _this$encode[0], positions = _this$encode[1];\n        return {\n            positions: positions,\n            stringIndices: positions.map(function(_, i) {\n                return i;\n            }),\n            glyphs: encoded.map(function(g, i) {\n                var glyph = _this.getGlyph(parseInt(g, 16));\n                glyph.advanceWidth = positions[i].advanceWidth;\n                return glyph;\n            })\n        };\n    };\n    _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n        var glyph = this.getGlyph(codePoint);\n        glyph.advanceWidth = 400;\n        return glyph;\n    };\n    _proto.getGlyph = function getGlyph(id) {\n        return {\n            id: id,\n            _font: this.src,\n            codePoints: [\n                id\n            ],\n            isLigature: false,\n            name: this.src.font.characterToGlyph(id)\n        };\n    };\n    _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n        return this.src.font.characterToGlyph(codePoint) !== \".notdef\";\n    };\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__(StandardFont, [\n        {\n            key: \"ascent\",\n            get: function get() {\n                return 900;\n            }\n        },\n        {\n            key: \"capHeight\",\n            get: function get() {\n                switch(this.name){\n                    case \"Times-Roman\":\n                    case \"Times-Bold\":\n                    case \"Times-Italic\":\n                    case \"Times-BoldItalic\":\n                        return 650;\n                    case \"Courier\":\n                    case \"Courier-Bold\":\n                    case \"Courier-Oblique\":\n                    case \"Courier-BoldOblique\":\n                        return 550;\n                    default:\n                        return 690;\n                }\n            }\n        },\n        {\n            key: \"xHeight\",\n            get: function get() {\n                switch(this.name){\n                    case \"Times-Roman\":\n                    case \"Times-Bold\":\n                    case \"Times-Italic\":\n                    case \"Times-BoldItalic\":\n                        return 440;\n                    case \"Courier\":\n                    case \"Courier-Bold\":\n                    case \"Courier-Oblique\":\n                    case \"Courier-BoldOblique\":\n                        return 390;\n                    default:\n                        return 490;\n                }\n            }\n        },\n        {\n            key: \"descent\",\n            get: function get() {\n                switch(this.name){\n                    case \"Times-Roman\":\n                    case \"Times-Bold\":\n                    case \"Times-Italic\":\n                    case \"Times-BoldItalic\":\n                        return -220;\n                    case \"Courier\":\n                    case \"Courier-Bold\":\n                    case \"Courier-Oblique\":\n                    case \"Courier-BoldOblique\":\n                        return -230;\n                    default:\n                        return -200;\n                }\n            }\n        },\n        {\n            key: \"lineGap\",\n            get: function get() {\n                return 0;\n            }\n        },\n        {\n            key: \"unitsPerEm\",\n            get: function get() {\n                return 1000;\n            }\n        }\n    ]);\n    return StandardFont;\n}();\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [\n    173\n];\nvar getFontSize = function getFontSize(node) {\n    return node.attributes.fontSize || 12;\n};\nvar getOrCreateFont = function getOrCreateFont(name) {\n    if (fontCache[name]) return fontCache[name];\n    var font = new StandardFont(name);\n    fontCache[name] = font;\n    return font;\n};\nvar getFallbackFont = function getFallbackFont() {\n    return getOrCreateFont(\"Helvetica\");\n};\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n    return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\nvar fontSubstitution = function fontSubstitution() {\n    return function(_ref) {\n        var string = _ref.string, runs = _ref.runs;\n        var lastFont = null;\n        var lastFontSize = null;\n        var lastIndex = 0;\n        var index = 0;\n        var res = [];\n        for(var i = 0; i < runs.length; i += 1){\n            var run = runs[i];\n            var defaultFont = typeof run.attributes.font === \"string\" ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n            if (string.length === 0) {\n                res.push({\n                    start: 0,\n                    end: 0,\n                    attributes: {\n                        font: defaultFont\n                    }\n                });\n                break;\n            }\n            var chars = string.slice(run.start, run.end);\n            for(var j = 0; j < chars.length; j += 1){\n                var char = chars[j];\n                var codePoint = char.codePointAt();\n                var shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n                // If the default font does not have a glyph and the fallback font does, we use it\n                var font = shouldFallback ? getFallbackFont() : defaultFont;\n                var fontSize = getFontSize(run);\n                // If anything that would impact res has changed, update it\n                if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n                    if (lastFont) {\n                        res.push({\n                            start: lastIndex,\n                            end: index,\n                            attributes: {\n                                font: lastFont,\n                                scale: lastFontSize / lastFont.unitsPerEm\n                            }\n                        });\n                    }\n                    lastFont = font;\n                    lastFontSize = fontSize;\n                    lastIndex = index;\n                }\n                index += char.length;\n            }\n        }\n        if (lastIndex < string.length) {\n            var _fontSize = getFontSize((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs));\n            res.push({\n                start: lastIndex,\n                end: string.length,\n                attributes: {\n                    font: lastFont,\n                    scale: _fontSize / lastFont.unitsPerEm\n                }\n            });\n        }\n        return {\n            string: string,\n            runs: res\n        };\n    };\n};\nvar isTextInstance$4 = function isTextInstance(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance;\n};\nvar engines$1 = {\n    linebreaker: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.linebreaker,\n    justification: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.justification,\n    textDecoration: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.textDecoration,\n    scriptItemizer: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.scriptItemizer,\n    wordHyphenation: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.wordHyphenation,\n    fontSubstitution: fontSubstitution\n};\nvar engine$1 = (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(engines$1);\nvar getFragments$1 = function getFragments(fontStore, instance) {\n    if (!instance) return [\n        {\n            string: \"\"\n        }\n    ];\n    var fragments = [];\n    var _instance$props = instance.props, _instance$props$fill = _instance$props.fill, fill = _instance$props$fill === void 0 ? \"black\" : _instance$props$fill, _instance$props$fontF = _instance$props.fontFamily, fontFamily = _instance$props$fontF === void 0 ? \"Helvetica\" : _instance$props$fontF, fontWeight = _instance$props.fontWeight, fontStyle = _instance$props.fontStyle, _instance$props$fontS = _instance$props.fontSize, fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS, textDecorationColor = _instance$props.textDecorationColor, textDecorationStyle = _instance$props.textDecorationStyle, textTransform = _instance$props.textTransform, opacity = _instance$props.opacity;\n    var _textDecoration = instance.props.textDecoration;\n    var obj = fontStore ? fontStore.getFont({\n        fontFamily: fontFamily,\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n    }) : null;\n    var font = obj ? obj.data : fontFamily;\n    var attributes = {\n        font: font,\n        opacity: opacity,\n        fontSize: fontSize,\n        color: fill,\n        underlineStyle: textDecorationStyle,\n        underline: _textDecoration === \"underline\" || _textDecoration === \"underline line-through\" || _textDecoration === \"line-through underline\",\n        underlineColor: textDecorationColor || fill,\n        strike: _textDecoration === \"line-through\" || _textDecoration === \"underline line-through\" || _textDecoration === \"line-through underline\",\n        strikeStyle: textDecorationStyle,\n        strikeColor: textDecorationColor || fill\n    };\n    for(var i = 0; i < instance.children.length; i += 1){\n        var child = instance.children[i];\n        if (isTextInstance$4(child)) {\n            fragments.push({\n                string: transformText(child.value, textTransform),\n                attributes: attributes\n            });\n        } else if (child) {\n            fragments.push.apply(fragments, getFragments(child));\n        }\n    }\n    return fragments;\n};\nvar getAttributedString$1 = function getAttributedString(fontStore, instance) {\n    return fromFragments(getFragments$1(fontStore, instance));\n};\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n    before: -0.5,\n    after: -0.5\n};\nvar layoutTspan = function layoutTspan(fontStore) {\n    return function(node) {\n        var _node$props, _node$props2;\n        var attributedString = getAttributedString$1(fontStore, node);\n        var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n        var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n        var container = {\n            x: x,\n            y: y,\n            width: AlmostInfinity,\n            height: AlmostInfinity\n        };\n        var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n        var layoutOptions = {\n            hyphenationCallback: hyphenationCallback,\n            shrinkWhitespaceFactor: shrinkWhitespaceFactor\n        };\n        var lines = engine$1(attributedString, container, layoutOptions).flat();\n        return Object.assign({}, node, {\n            lines: lines\n        });\n    };\n};\nvar layoutText$1 = function layoutText(fontStore, node) {\n    if (!node.children) return node;\n    var children = node.children.map(layoutTspan(fontStore));\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar isDefs = function isDefs(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Defs;\n};\nvar getDefs = function getDefs(node) {\n    var children = node.children || [];\n    var defs = children.find(isDefs) || {};\n    var values = defs.children || [];\n    return values.reduce(function(acc, value) {\n        var _value$props;\n        var id = (_value$props = value.props) === null || _value$props === void 0 ? void 0 : _value$props.id;\n        if (id) acc[id] = value;\n        return acc;\n    }, {});\n};\nvar isNotDefs = function isNotDefs(node) {\n    return node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Defs;\n};\nvar detachDefs = function detachDefs(node) {\n    if (!node.children) return node;\n    var children = node.children.filter(isNotDefs);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\nvar replaceDef = function replaceDef(defs, value) {\n    if (!value) return undefined;\n    if (!URL_REGEX.test(value)) return value;\n    var match = value.match(URL_REGEX);\n    return defs[match[1]];\n};\nvar parseNodeDefs = function parseNodeDefs(defs) {\n    return function(node) {\n        var _node$props, _node$props2;\n        var fill = replaceDef(defs, (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fill);\n        var clipPath = replaceDef(defs, (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.clipPath);\n        var props = Object.assign({}, node.props, {\n            fill: fill,\n            clipPath: clipPath\n        });\n        var children = node.children ? node.children.map(parseNodeDefs(defs)) : undefined;\n        return Object.assign({}, node, {\n            props: props,\n            children: children\n        });\n    };\n};\nvar parseDefs = function parseDefs(root) {\n    if (!root.children) return root;\n    var defs = getDefs(root);\n    var children = root.children.map(parseNodeDefs(defs));\n    return Object.assign({}, root, {\n        children: children\n    });\n};\nvar replaceDefs = function replaceDefs(node) {\n    return detachDefs(parseDefs(node));\n};\nvar parseViewbox = function parseViewbox(value) {\n    if (!value) return null;\n    var values = value.split(/[,\\s]+/).map(parseFloat);\n    if (values.length !== 4) return null;\n    return {\n        minX: values[0],\n        minY: values[1],\n        maxX: values[2],\n        maxY: values[3]\n    };\n};\nvar getContainer$1 = function getContainer(node) {\n    var viewbox = parseViewbox(node.props.viewBox);\n    if (viewbox) {\n        return {\n            width: viewbox.maxX,\n            height: viewbox.maxY\n        };\n    }\n    if (node.props.width && node.props.height) {\n        return {\n            width: parseFloat(node.props.width),\n            height: parseFloat(node.props.height)\n        };\n    }\n    return {\n        width: 0,\n        height: 0\n    };\n};\nvar SVG_INHERITED_PROPS = [\n    \"x\",\n    \"y\",\n    \"clipPath\",\n    \"clipRule\",\n    \"opacity\",\n    \"fill\",\n    \"fillOpacity\",\n    \"fillRule\",\n    \"stroke\",\n    \"strokeLinecap\",\n    \"strokeLinejoin\",\n    \"strokeOpacity\",\n    \"strokeWidth\",\n    \"textAnchor\",\n    \"dominantBaseline\",\n    \"color\",\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontStyle\",\n    \"fontWeight\",\n    \"letterSpacing\",\n    \"opacity\",\n    \"textDecoration\",\n    \"lineHeight\",\n    \"textAlign\",\n    \"visibility\",\n    \"wordSpacing\"\n];\nvar getInheritProps = function getInheritProps(node) {\n    var props = node.props || {};\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(SVG_INHERITED_PROPS, props);\n};\nvar inheritProps = function inheritProps(node) {\n    if (!node.children) return node;\n    var inheritedProps = getInheritProps(node);\n    var children = node.children.map(function(child) {\n        var props = Object.assign({}, inheritedProps, child.props || {});\n        var newChild = Object.assign({}, child, {\n            props: props\n        });\n        return inheritProps(newChild);\n    });\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar parseAspectRatio = function parseAspectRatio(value) {\n    var match = value.replace(/[\\s\\r\\t\\n]+/gm, \" \").replace(/^defer\\s/, \"\").split(\" \");\n    var align = match[0] || \"xMidYMid\";\n    var meetOrSlice = match[1] || \"meet\";\n    return {\n        align: align,\n        meetOrSlice: meetOrSlice\n    };\n};\nvar STYLE_PROPS = [\n    \"width\",\n    \"height\",\n    \"color\",\n    \"stroke\",\n    \"strokeWidth\",\n    \"opacity\",\n    \"fillOpacity\",\n    \"strokeOpacity\",\n    \"fill\",\n    \"fillRule\",\n    \"clipPath\",\n    \"offset\",\n    \"transform\",\n    \"strokeLinejoin\",\n    \"strokeLinecap\",\n    \"strokeDasharray\"\n];\nvar VERTICAL_PROPS = [\n    \"y\",\n    \"y1\",\n    \"y2\",\n    \"height\",\n    \"cy\",\n    \"ry\"\n];\nvar HORIZONTAL_PROPS = [\n    \"x\",\n    \"x1\",\n    \"x2\",\n    \"width\",\n    \"cx\",\n    \"rx\"\n];\nvar isType$3 = function isType(type) {\n    return function(node) {\n        return node.type === type;\n    };\n};\nvar isSvg$3 = isType$3(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg);\nvar isText$5 = isType$3(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nvar isTextInstance$3 = isType$3(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance);\nvar transformPercent = function transformPercent(container) {\n    return function(props) {\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.mapValues)(props, function(value, key) {\n            var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n            if (match && VERTICAL_PROPS.includes(key)) {\n                return match.percent * container.height;\n            }\n            if (match && HORIZONTAL_PROPS.includes(key)) {\n                return match.percent * container.width;\n            }\n            return value;\n        });\n    };\n};\nvar parsePercent = function parsePercent(value) {\n    var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    return match ? match.percent : parseFloat(value);\n};\nvar parseProps = function parseProps(container) {\n    return function(node) {\n        var props = transformPercent(container)(node.props);\n        props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n            x: parseFloat,\n            x1: parseFloat,\n            x2: parseFloat,\n            y: parseFloat,\n            y1: parseFloat,\n            y2: parseFloat,\n            r: parseFloat,\n            rx: parseFloat,\n            ry: parseFloat,\n            cx: parseFloat,\n            cy: parseFloat,\n            width: parseFloat,\n            height: parseFloat,\n            offset: parsePercent,\n            fill: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n            opacity: parsePercent,\n            stroke: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n            stopOpacity: parsePercent,\n            stopColor: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.transformColor,\n            transform: _react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.processTransform\n        }, props);\n        return Object.assign({}, node, {\n            props: props\n        });\n    };\n};\nvar mergeStyles$1 = function mergeStyles(node) {\n    var style = node.style || {};\n    var props = Object.assign({}, style, node.props);\n    return Object.assign({}, node, {\n        props: props\n    });\n};\nvar removeNoneValues = function removeNoneValues(node) {\n    var removeNone = function removeNone(value) {\n        return value === \"none\" ? null : value;\n    };\n    var props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.mapValues)(node.props, removeNone);\n    return Object.assign({}, node, {\n        props: props\n    });\n};\nvar pickStyleProps = function pickStyleProps(node) {\n    var props = node.props || {};\n    var styleProps = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(STYLE_PROPS, props);\n    var style = Object.assign({}, styleProps, node.style || {});\n    return Object.assign({}, node, {\n        style: style\n    });\n};\nvar parseSvgProps = function parseSvgProps(node) {\n    var props = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        width: parseFloat,\n        height: parseFloat,\n        viewBox: parseViewbox,\n        preserveAspectRatio: parseAspectRatio\n    }, node.props);\n    return Object.assign({}, node, {\n        props: props\n    });\n};\nvar wrapBetweenTspan = function wrapBetweenTspan(node) {\n    return {\n        type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Tspan,\n        props: {},\n        children: [\n            node\n        ]\n    };\n};\nvar addMissingTspan = function addMissingTspan(node) {\n    if (!isText$5(node)) return node;\n    if (!node.children) return node;\n    var resolveChild = function resolveChild(child) {\n        return isTextInstance$3(child) ? wrapBetweenTspan(child) : child;\n    };\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar parseText = function parseText(fontStore) {\n    return function(node) {\n        if (isText$5(node)) return layoutText$1(fontStore, node);\n        if (!node.children) return node;\n        var children = node.children.map(parseText(fontStore));\n        return Object.assign({}, node, {\n            children: children\n        });\n    };\n};\nvar resolveSvgNode = function resolveSvgNode(container) {\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles$1);\n};\nvar resolveChildren = function resolveChildren(container) {\n    return function(node) {\n        if (!node.children) return node;\n        var resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveChildren(container), resolveSvgNode(container));\n        var children = node.children.map(resolveChild);\n        return Object.assign({}, node, {\n            children: children\n        });\n    };\n};\nvar resolveSvgRoot = function resolveSvgRoot(node, fontStore) {\n    var container = getContainer$1(node);\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(replaceDefs, parseText(fontStore), parseSvgProps, pickStyleProps, inheritProps, resolveChildren(container))(node);\n};\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param {Object} node root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */ var resolveSvg = function resolveSvg(node, fontStore) {\n    if (!node.children) return node;\n    var resolveChild = function resolveChild(child) {\n        return resolveSvg(child, fontStore);\n    };\n    var root = isSvg$3(node) ? resolveSvgRoot(node, fontStore) : node;\n    var children = root.children.map(resolveChild);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\nvar loadYoga = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().mark(function _callee() {\n        var instance, config, node;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    _context.next = 2;\n                    return yoga_layout__WEBPACK_IMPORTED_MODULE_8__.loadYoga();\n                case 2:\n                    instance = _context.sent;\n                    config = instance.Config.create();\n                    config.setPointScaleFactor(0);\n                    node = {\n                        create: function create() {\n                            return instance.Node.createWithConfig(config);\n                        }\n                    };\n                    return _context.abrupt(\"return\", {\n                        node: node\n                    });\n                case 7:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function loadYoga() {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar resolveYoga = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().mark(function _callee(root) {\n        var yoga;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    _context.next = 2;\n                    return loadYoga();\n                case 2:\n                    yoga = _context.sent;\n                    return _context.abrupt(\"return\", Object.assign({}, root, {\n                        yoga: yoga\n                    }));\n                case 4:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function resolveYoga(_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getZIndex = function getZIndex(node) {\n    return node.style.zIndex;\n};\nvar shouldSort = function shouldSort(node) {\n    return node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Document && node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg;\n};\nvar sortZIndex = function sortZIndex(a, b) {\n    var za = getZIndex(a);\n    var zb = getZIndex(b);\n    if (!za && !zb) return 0;\n    if (!za) return 1;\n    if (!zb) return -1;\n    return zb - za;\n};\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */ var resolveZIndex = function resolveZIndex(node) {\n    if (!node.children) return node;\n    var sortedChildren = shouldSort(node) ? node.children.sort(sortZIndex) : node.children;\n    var children = sortedChildren.map(resolveZIndex);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\n// Caches emoji images data\nvar emojis = {};\nvar regex = (0,emoji_regex__WEBPACK_IMPORTED_MODULE_10__[\"default\"])();\nvar reflect = function reflect(promise) {\n    return function() {\n        return promise.apply(void 0, arguments).then(function(v) {\n            return v;\n        }, function(e) {\n            return e;\n        });\n    };\n};\n// Returns a function to be able to mock resolveImage.\nvar makeFetchEmojiImage = function makeFetchEmojiImage() {\n    return reflect(_react_pdf_image__WEBPACK_IMPORTED_MODULE_11__[\"default\"]);\n};\n/**\n * When an emoji as no variations, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */ var _removeVariationSelectors = function _removeVariationSelectors(x) {\n    return x !== \"️\";\n};\nvar getCodePoints = function getCodePoints(string, withVariationSelectors) {\n    return Array.from(string).filter(withVariationSelectors ? function() {\n        return true;\n    } : _removeVariationSelectors).map(function(char) {\n        return char.codePointAt(0).toString(16);\n    }).join(\"-\");\n};\nvar buildEmojiUrl = function buildEmojiUrl(emoji, source) {\n    var url = source.url, format = source.format, builder = source.builder, withVariationSelectors = source.withVariationSelectors;\n    if (typeof builder === \"function\") {\n        return builder(getCodePoints(emoji, withVariationSelectors));\n    }\n    return \"\" + url + getCodePoints(emoji, withVariationSelectors) + \".\" + format;\n};\nvar fetchEmojis = function fetchEmojis(string, source) {\n    if (!source || !source.url && !source.builder) return [];\n    var promises = [];\n    Array.from(string.matchAll(regex)).forEach(function(match) {\n        var emoji = match[0];\n        if (!emojis[emoji] || emojis[emoji].loading) {\n            var emojiUrl = buildEmojiUrl(emoji, source);\n            emojis[emoji] = {\n                loading: true\n            };\n            var fetchEmojiImage = makeFetchEmojiImage();\n            promises.push(fetchEmojiImage({\n                uri: emojiUrl\n            }).then(function(image) {\n                emojis[emoji].loading = false;\n                emojis[emoji].data = image.data;\n            }));\n        }\n    });\n    return promises;\n};\nvar specialCases = [\n    \"\\xa9️\",\n    \"\\xae\",\n    \"™\"\n]; // Do not treat these as emojis if emoji not present\nvar embedEmojis = function embedEmojis(fragments) {\n    var result = [];\n    var _loop = function _loop() {\n        var fragment = fragments[i];\n        var lastIndex = 0;\n        Array.from(fragment.string.matchAll(regex)).forEach(function(match) {\n            var index = match.index;\n            var emoji = match[0];\n            var isSpecialCase = specialCases.includes(emoji);\n            var emojiSize = fragment.attributes.fontSize;\n            var chunk = fragment.string.slice(lastIndex, index + match[0].length);\n            // If emoji image was found, we create a new fragment with the\n            // correct attachment and object substitution character;\n            if (emojis[emoji] && emojis[emoji].data) {\n                result.push({\n                    string: chunk.replace(match, String.fromCharCode(0xfffc)),\n                    attributes: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, fragment.attributes, {\n                        attachment: {\n                            width: emojiSize,\n                            height: emojiSize,\n                            yOffset: Math.floor(emojiSize * 0.1),\n                            image: emojis[emoji].data\n                        }\n                    })\n                });\n            } else if (isSpecialCase) {\n                result.push({\n                    string: chunk,\n                    attributes: fragment.attributes\n                });\n            } else {\n                // If no emoji data, we just replace the emoji with a nodef char\n                result.push({\n                    string: chunk.replace(match, String.fromCharCode(0)),\n                    attributes: fragment.attributes\n                });\n            }\n            lastIndex = index + emoji.length;\n        });\n        if (lastIndex < fragment.string.length) {\n            result.push({\n                string: fragment.string.slice(lastIndex),\n                attributes: fragment.attributes\n            });\n        }\n    };\n    for(var i = 0; i < fragments.length; i += 1){\n        _loop();\n    }\n    return result;\n};\n/**\n * Get image source\n *\n * @param {Object} node image node\n * @returns {string | Object} image src\n */ var getSource = function getSource(node) {\n    var _node$props, _node$props2, _node$props3;\n    return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.src) || ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.source) || ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.href);\n};\n/**\n * Resolves `src` to `@react-pdf/image` interface.\n *\n * Also it handles factories and async sources.\n *\n * @param {string | Object | Function} src\n * @returns {Promise<Object>} resolved src\n */ var resolveSource = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().mark(function _callee(src) {\n        var source;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    if (!(typeof src === \"function\")) {\n                        _context.next = 6;\n                        break;\n                    }\n                    _context.next = 3;\n                    return src();\n                case 3:\n                    _context.t0 = _context.sent;\n                    _context.next = 9;\n                    break;\n                case 6:\n                    _context.next = 8;\n                    return src;\n                case 8:\n                    _context.t0 = _context.sent;\n                case 9:\n                    source = _context.t0;\n                    return _context.abrupt(\"return\", typeof source === \"string\" ? {\n                        uri: source\n                    } : source);\n                case 11:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function resolveSource(_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */ var fetchImage = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().mark(function _callee(node) {\n        var src, cache, source;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    src = getSource(node);\n                    cache = node.props.cache;\n                    if (src) {\n                        _context.next = 5;\n                        break;\n                    }\n                    console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n                    return _context.abrupt(\"return\");\n                case 5:\n                    _context.prev = 5;\n                    _context.next = 8;\n                    return resolveSource(src);\n                case 8:\n                    source = _context.sent;\n                    if (source) {\n                        _context.next = 11;\n                        break;\n                    }\n                    throw new Error('Image\\'s \"src\" or \"source\" prop returned ' + source);\n                case 11:\n                    _context.next = 13;\n                    return (0,_react_pdf_image__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(source, {\n                        cache: cache\n                    });\n                case 13:\n                    node.image = _context.sent;\n                    node.image.key = source.data ? source.data.toString() : source.uri;\n                    _context.next = 21;\n                    break;\n                case 17:\n                    _context.prev = 17;\n                    _context.t0 = _context[\"catch\"](5);\n                    node.image = {\n                        width: 0,\n                        height: 0,\n                        key: null\n                    };\n                    console.warn(_context.t0.message);\n                case 21:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee, null, [\n            [\n                5,\n                17\n            ]\n        ]);\n    }));\n    return function fetchImage(_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar isImage$2 = function isImage(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image;\n};\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} fontStore font store\n * @param {Object} node root node\n * @returns {Promise<void>[]} asset promises\n */ var fetchAssets = function fetchAssets(fontStore, node) {\n    var _node$children;\n    var promises = [];\n    var listToExplore = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.slice(0)) || [];\n    var emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n    while(listToExplore.length > 0){\n        var _n$style;\n        var n = listToExplore.shift();\n        if (isImage$2(n)) {\n            promises.push(fetchImage(n));\n        }\n        if (fontStore && (_n$style = n.style) !== null && _n$style !== void 0 && _n$style.fontFamily) {\n            promises.push(fontStore.load(n.style));\n        }\n        if (typeof n === \"string\") {\n            promises.push.apply(promises, fetchEmojis(n, emojiSource));\n        }\n        if (typeof n.value === \"string\") {\n            promises.push.apply(promises, fetchEmojis(n.value, emojiSource));\n        }\n        if (n.children) {\n            n.children.forEach(function(childNode) {\n                listToExplore.push(childNode);\n            });\n        }\n    }\n    return promises;\n};\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} node root node\n * @param {Object} fontStore font store\n * @returns {Promise<Object>} root node\n */ var resolveAssets = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().mark(function _callee(node, fontStore) {\n        var promises;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_6__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    promises = fetchAssets(fontStore, node);\n                    _context.next = 3;\n                    return Promise.all(promises);\n                case 3:\n                    return _context.abrupt(\"return\", node);\n                case 4:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function resolveAssets(_x, _x2) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar isLink$1 = function isLink(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Link;\n};\nvar DEFAULT_LINK_STYLES = {\n    color: \"blue\",\n    textDecoration: \"underline\"\n};\n/**\n * Computes styles using stylesheet\n *\n * @param {Object} container\n * @param {Object} node document node\n * @returns {Object} computed styles\n */ var computeStyle = function computeStyle(container, node) {\n    var baseStyle = node.style;\n    if (isLink$1(node)) {\n        baseStyle = Array.isArray(node.style) ? [\n            DEFAULT_LINK_STYLES\n        ].concat(node.style) : [\n            DEFAULT_LINK_STYLES,\n            node.style\n        ];\n    }\n    return (0,_react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(container, baseStyle);\n};\n/**\n * @typedef {Function} ResolveNodeStyles\n * @param {Object} node document node\n * @returns {Object} node (and subnodes) with resolved styles\n */ /**\n * Resolves node styles\n *\n * @param {Object} container\n * @returns {ResolveNodeStyles} resolve node styles\n */ var resolveNodeStyles = function resolveNodeStyles(container) {\n    return function(node) {\n        var style = computeStyle(container, node);\n        if (!node.children) return Object.assign({}, node, {\n            style: style\n        });\n        var children = node.children.map(resolveNodeStyles(container));\n        return Object.assign({}, node, {\n            style: style,\n            children: children\n        });\n    };\n};\n/**\n * Resolves page styles\n *\n * @param {Object} page document page\n * @returns {Object} document page with resolved styles\n */ var resolvePageStyles = function resolvePageStyles(page) {\n    var _page$props, _page$box, _page$box2, _page$props2;\n    var dpi = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.dpi) || 72;\n    var width = ((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.width) || page.style.width;\n    var height = ((_page$box2 = page.box) === null || _page$box2 === void 0 ? void 0 : _page$box2.height) || page.style.height;\n    var orientation = ((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.orientation) || \"portrait\";\n    var container = {\n        width: width,\n        height: height,\n        orientation: orientation,\n        dpi: dpi\n    };\n    return resolveNodeStyles(container)(page);\n};\n/**\n * Resolves document styles\n *\n * @param {Object} root document root\n * @returns {Object} document root with resolved styles\n */ var resolveStyles = function resolveStyles(root) {\n    if (!root.children) return root;\n    var children = root.children.map(resolvePageStyles);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\nvar getTransformStyle = function getTransformStyle(s) {\n    return function(node) {\n        var _node$style, _node$style2;\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style[s]) ? \"50%\" : (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2[s];\n    };\n};\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {{ left?: number, top?: number }} node origin\n */ var getOrigin = function getOrigin(node) {\n    if (!node.box) return {};\n    var _node$box = node.box, left = _node$box.left, top = _node$box.top, width = _node$box.width, height = _node$box.height;\n    var transformOriginX = getTransformStyle(\"transformOriginX\")(node);\n    var transformOriginY = getTransformStyle(\"transformOriginY\")(node);\n    var percentX = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(transformOriginX);\n    var percentY = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(transformOriginY);\n    var offsetX = percentX ? width * percentX.percent : transformOriginX;\n    var offsetY = percentY ? height * percentY.percent : transformOriginY;\n    return {\n        left: left + offsetX,\n        top: top + offsetY\n    };\n};\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */ var resolveNodeOrigin = function resolveNodeOrigin(node) {\n    var origin = getOrigin(node);\n    var newNode = Object.assign({}, node, {\n        origin: origin\n    });\n    if (!node.children) return newNode;\n    var children = node.children.map(resolveNodeOrigin);\n    return Object.assign({}, newNode, {\n        children: children\n    });\n};\n/**\n * Resolve document origins\n *\n * @param {Object} root document root\n * @returns {Object} document root\n */ var resolveOrigin = function resolveOrigin(root) {\n    if (!root.children) return root;\n    var children = root.children.map(resolveNodeOrigin);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\n/* eslint-disable no-plusplus */ /* eslint-disable prefer-const */ /* eslint-disable prefer-destructuring */ var getBookmarkValue = function getBookmarkValue(title) {\n    return typeof title === \"string\" ? {\n        title: title,\n        fit: false,\n        expanded: false\n    } : title;\n};\nvar resolveBookmarks = function resolveBookmarks(node) {\n    var refs = 0;\n    var children = (node.children || []).slice(0);\n    var listToExplore = children.map(function(value) {\n        return {\n            value: value,\n            parent: null\n        };\n    });\n    var _loop = function _loop() {\n        var _child$props;\n        var element = listToExplore.shift();\n        var child = element.value;\n        var parent = element.parent;\n        if ((_child$props = child.props) !== null && _child$props !== void 0 && _child$props.bookmark) {\n            var _parent;\n            var bookmark = getBookmarkValue(child.props.bookmark);\n            var ref = refs++;\n            var newHierarchy = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({\n                ref: ref,\n                parent: (_parent = parent) === null || _parent === void 0 ? void 0 : _parent.ref\n            }, bookmark);\n            child.props.bookmark = newHierarchy;\n            parent = newHierarchy;\n        }\n        if (child.children) {\n            child.children.forEach(function(childNode) {\n                listToExplore.push({\n                    value: childNode,\n                    parent: parent\n                });\n            });\n        }\n    };\n    while(listToExplore.length > 0){\n        _loop();\n    }\n    return node;\n};\nvar VALID_ORIENTATIONS = [\n    \"portrait\",\n    \"landscape\"\n];\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param {Object} page object\n * @returns {string} page orientation\n */ var getOrientation = function getOrientation(page) {\n    var _page$props;\n    var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.orientation) || \"portrait\";\n    return VALID_ORIENTATIONS.includes(value) ? value : \"portrait\";\n};\n/**\n * Return true if page is landscape\n *\n * @param {Object} page instance\n * @returns {boolean} is page landscape\n */ var isLandscape = function isLandscape(page) {\n    return getOrientation(page) === \"landscape\";\n};\nvar PAGE_SIZES = {\n    \"4A0\": [\n        4767.87,\n        6740.79\n    ],\n    \"2A0\": [\n        3370.39,\n        4767.87\n    ],\n    A0: [\n        2383.94,\n        3370.39\n    ],\n    A1: [\n        1683.78,\n        2383.94\n    ],\n    A2: [\n        1190.55,\n        1683.78\n    ],\n    A3: [\n        841.89,\n        1190.55\n    ],\n    A4: [\n        595.28,\n        841.89\n    ],\n    A5: [\n        419.53,\n        595.28\n    ],\n    A6: [\n        297.64,\n        419.53\n    ],\n    A7: [\n        209.76,\n        297.64\n    ],\n    A8: [\n        147.4,\n        209.76\n    ],\n    A9: [\n        104.88,\n        147.4\n    ],\n    A10: [\n        73.7,\n        104.88\n    ],\n    B0: [\n        2834.65,\n        4008.19\n    ],\n    B1: [\n        2004.09,\n        2834.65\n    ],\n    B2: [\n        1417.32,\n        2004.09\n    ],\n    B3: [\n        1000.63,\n        1417.32\n    ],\n    B4: [\n        708.66,\n        1000.63\n    ],\n    B5: [\n        498.9,\n        708.66\n    ],\n    B6: [\n        354.33,\n        498.9\n    ],\n    B7: [\n        249.45,\n        354.33\n    ],\n    B8: [\n        175.75,\n        249.45\n    ],\n    B9: [\n        124.72,\n        175.75\n    ],\n    B10: [\n        87.87,\n        124.72\n    ],\n    C0: [\n        2599.37,\n        3676.54\n    ],\n    C1: [\n        1836.85,\n        2599.37\n    ],\n    C2: [\n        1298.27,\n        1836.85\n    ],\n    C3: [\n        918.43,\n        1298.27\n    ],\n    C4: [\n        649.13,\n        918.43\n    ],\n    C5: [\n        459.21,\n        649.13\n    ],\n    C6: [\n        323.15,\n        459.21\n    ],\n    C7: [\n        229.61,\n        323.15\n    ],\n    C8: [\n        161.57,\n        229.61\n    ],\n    C9: [\n        113.39,\n        161.57\n    ],\n    C10: [\n        79.37,\n        113.39\n    ],\n    RA0: [\n        2437.8,\n        3458.27\n    ],\n    RA1: [\n        1729.13,\n        2437.8\n    ],\n    RA2: [\n        1218.9,\n        1729.13\n    ],\n    RA3: [\n        864.57,\n        1218.9\n    ],\n    RA4: [\n        609.45,\n        864.57\n    ],\n    SRA0: [\n        2551.18,\n        3628.35\n    ],\n    SRA1: [\n        1814.17,\n        2551.18\n    ],\n    SRA2: [\n        1275.59,\n        1814.17\n    ],\n    SRA3: [\n        907.09,\n        1275.59\n    ],\n    SRA4: [\n        637.8,\n        907.09\n    ],\n    EXECUTIVE: [\n        521.86,\n        756.0\n    ],\n    FOLIO: [\n        612.0,\n        936.0\n    ],\n    LEGAL: [\n        612.0,\n        1008.0\n    ],\n    LETTER: [\n        612.0,\n        792.0\n    ],\n    TABLOID: [\n        792.0,\n        1224.0\n    ],\n    ID1: [\n        153,\n        243\n    ]\n};\n/**\n * Transforms array into size object\n *\n * @param {number[]} v array\n * @returns {{ width: number, height: number }} size object with width and height\n */ var toSizeObject = function toSizeObject(v) {\n    return {\n        width: v[0],\n        height: v[1]\n    };\n};\n/**\n * Flip size object\n *\n * @param {{ width: number, height: number }} v size object\n * @returns {{ width: number, height: number }} flipped size object\n */ var flipSizeObject = function flipSizeObject(v) {\n    return {\n        width: v.height,\n        height: v.width\n    };\n};\n/**\n * Adjust page size to passed DPI\n *\n * @param {{ width: number, height: number }} v size object\n * @param {number} dpi DPI\n * @returns {{ width: number, height: number }} adjusted size object\n */ var adjustDpi = function adjustDpi(v, dpi) {\n    return {\n        width: v.width ? v.width * dpi : v.width,\n        height: v.height ? v.height * dpi : v.height\n    };\n};\n/**\n * Returns size object from a given string\n *\n * @param {string} v page size string\n * @returns {{ width: number, height: number }} size object with width and height\n */ var getStringSize = function getStringSize(v) {\n    return toSizeObject(PAGE_SIZES[v.toUpperCase()]);\n};\n/**\n * Returns size object from a single number\n *\n * @param {number} n page size number\n * @returns {{ width: number, height: number }} size object with width and height\n */ var getNumberSize = function getNumberSize(n) {\n    return toSizeObject([\n        n\n    ]);\n};\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {{ width: number, height: number }} size object with width and height\n */ var getSize = function getSize(page) {\n    var _page$props, _page$props2;\n    var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.size) || \"A4\";\n    var dpi = parseFloat(((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.dpi) || 72);\n    var type = typeof value;\n    /**\n   * @type {{ width: number, height: number }}\n   */ var size;\n    if (type === \"string\") {\n        size = getStringSize(value);\n    } else if (Array.isArray(value)) {\n        size = toSizeObject(value);\n    } else if (type === \"number\") {\n        size = getNumberSize(value);\n    } else {\n        size = value;\n    }\n    size = adjustDpi(size, dpi / 72);\n    return isLandscape(page) ? flipSizeObject(size) : size;\n};\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */ var resolvePageSize = function resolvePageSize(page) {\n    var size = getSize(page);\n    var style = (0,_react_pdf_stylesheet__WEBPACK_IMPORTED_MODULE_2__.flatten)(page.style || {});\n    return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, page, {\n        style: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, style, size)\n    });\n};\n/**\n * Resolves page sizes\n *\n * @param {Object} root document root\n * @returns {Object} document root with resolved page sizes\n */ var resolvePageSizes = function resolvePageSizes(root) {\n    if (!root.children) return root;\n    var children = root.children.map(resolvePageSize);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\nvar isFixed = function isFixed(node) {\n    var _node$props;\n    return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fixed) === true;\n};\n/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {number} height\n */ var lineIndexAtHeight = function lineIndexAtHeight(node, height) {\n    var y = 0;\n    if (!node.lines) return 0;\n    for(var i = 0; i < node.lines.length; i += 1){\n        var line = node.lines[i];\n        if (y + line.box.height > height) return i;\n        y += line.box.height;\n    }\n    return node.lines.length;\n};\n/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {number} index\n */ var heightAtLineIndex = function heightAtLineIndex(node, index) {\n    var counter = 0;\n    if (!node.lines) return counter;\n    for(var i = 0; i < index; i += 1){\n        var line = node.lines[i];\n        if (!line) break;\n        counter += line.box.height;\n    }\n    return counter;\n};\nvar getLineBreak = function getLineBreak(node, height) {\n    var top = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.get)(node, [\n        \"box\",\n        \"top\"\n    ], 0);\n    var widows = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.get)(node, [\n        \"props\",\n        \"widows\"\n    ], 2);\n    var orphans = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.get)(node, [\n        \"props\",\n        \"orphans\"\n    ], 2);\n    var linesQuantity = node.lines.length;\n    var slicedLine = lineIndexAtHeight(node, height - top);\n    if (slicedLine === 0) {\n        return 0;\n    }\n    if (linesQuantity < orphans) {\n        return linesQuantity;\n    }\n    if (slicedLine < orphans || linesQuantity < orphans + widows) {\n        return 0;\n    }\n    if (linesQuantity === orphans + widows) {\n        return orphans;\n    }\n    if (linesQuantity - slicedLine < widows) {\n        return linesQuantity - widows;\n    }\n    return slicedLine;\n};\n// Also receives contentArea in case it's needed\nvar splitText = function splitText(node, height) {\n    var slicedLineIndex = getLineBreak(node, height);\n    var currentHeight = heightAtLineIndex(node, slicedLineIndex);\n    var nextHeight = node.box.height - currentHeight;\n    var current = Object.assign({}, node, {\n        box: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.box, {\n            height: currentHeight,\n            borderBottomWidth: 0\n        }),\n        style: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.style, {\n            marginBottom: 0,\n            paddingBottom: 0,\n            borderBottomWidth: 0,\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0\n        }),\n        lines: node.lines.slice(0, slicedLineIndex)\n    });\n    var next = Object.assign({}, node, {\n        box: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.box, {\n            top: 0,\n            height: nextHeight,\n            borderTopWidth: 0\n        }),\n        style: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.style, {\n            marginTop: 0,\n            paddingTop: 0,\n            borderTopWidth: 0,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0\n        }),\n        lines: node.lines.slice(slicedLineIndex)\n    });\n    return [\n        current,\n        next\n    ];\n};\nvar getTop$1 = function getTop(node) {\n    var _node$box;\n    return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\nvar hasFixedHeight = function hasFixedHeight(node) {\n    var _node$style;\n    return !(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height);\n};\nvar splitNode = function splitNode(node, height) {\n    if (!node) return [\n        null,\n        null\n    ];\n    var nodeTop = getTop$1(node);\n    var current = Object.assign({}, node, {\n        box: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.box, {\n            borderBottomWidth: 0\n        }),\n        style: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.style, {\n            marginBottom: 0,\n            paddingBottom: 0,\n            borderBottomWidth: 0,\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0\n        })\n    });\n    current.style.height = height - nodeTop;\n    var nextHeight = hasFixedHeight(node) ? node.box.height - (height - nodeTop) : null;\n    var next = Object.assign({}, node, {\n        box: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.box, {\n            top: 0,\n            borderTopWidth: 0\n        }),\n        style: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.style, {\n            marginTop: 0,\n            paddingTop: 0,\n            borderTopWidth: 0,\n            borderTopLeftRadius: 0,\n            borderTopRightRadius: 0\n        })\n    });\n    if (nextHeight) {\n        next.style.height = nextHeight;\n    }\n    return [\n        current,\n        next\n    ];\n};\nvar NON_WRAP_TYPES = [\n    _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg,\n    _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Note,\n    _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image,\n    _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Canvas\n];\nvar getWrap = function getWrap(node) {\n    var _node$props;\n    if (NON_WRAP_TYPES.includes(node.type)) return false;\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.wrap) ? true : node.props.wrap;\n};\nvar getComputedPadding = function getComputedPadding(node, edge) {\n    var yogaNode = node.yogaNode;\n    return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @returns {{ paddingTop: number, paddingRight: number, paddingBottom: number, paddingLeft: number }} paddings\n */ var getPadding = function getPadding(node) {\n    var style = node.style, box = node.box;\n    var paddingTop = getComputedPadding(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top) || (box === null || box === void 0 ? void 0 : box.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n    var paddingRight = getComputedPadding(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right) || (box === null || box === void 0 ? void 0 : box.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n    var paddingBottom = getComputedPadding(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom) || (box === null || box === void 0 ? void 0 : box.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n    var paddingLeft = getComputedPadding(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left) || (box === null || box === void 0 ? void 0 : box.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n    return {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        paddingBottom: paddingBottom,\n        paddingLeft: paddingLeft\n    };\n};\nvar getWrapArea = function getWrapArea(page) {\n    var _page$style;\n    var _getPadding = getPadding(page), paddingBottom = _getPadding.paddingBottom;\n    var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n    return height - paddingBottom;\n};\nvar getContentArea = function getContentArea(page) {\n    var _page$style;\n    var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n    var _getPadding = getPadding(page), paddingTop = _getPadding.paddingTop, paddingBottom = _getPadding.paddingBottom;\n    return height - paddingBottom - paddingTop;\n};\nvar _excluded = [\n    \"style\",\n    \"children\"\n];\nvar isString = function isString(value) {\n    return typeof value === \"string\";\n};\nvar isNumber = function isNumber(value) {\n    return typeof value === \"number\";\n};\nvar isFragment = function isFragment(value) {\n    return value && value.type === Symbol.for(\"react.fragment\");\n};\n/**\n * Transforms a react element instance to internal element format.\n *\n * Can return multiple instances in the case of arrays or fragments.\n *\n * @param {Object} element React element\n * @returns {Object[]} parsed React elements\n */ var createInstances = function createInstances(element) {\n    if (!element) return [];\n    if (isString(element) || isNumber(element)) {\n        return [\n            {\n                type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance,\n                value: \"\" + element\n            }\n        ];\n    }\n    if (isFragment(element)) {\n        return createInstances(element.props.children);\n    }\n    if (Array.isArray(element)) {\n        return element.reduce(function(acc, el) {\n            return acc.concat(createInstances(el));\n        }, []);\n    }\n    if (!isString(element.type)) {\n        return createInstances(element.type(element.props));\n    }\n    var type = element.type, _element$props = element.props, _element$props$style = _element$props.style, style = _element$props$style === void 0 ? {} : _element$props$style, _element$props$childr = _element$props.children, children = _element$props$childr === void 0 ? [] : _element$props$childr, props = _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_12__(_element$props, _excluded);\n    var nextChildren = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.castArray)(children).reduce(function(acc, child) {\n        return acc.concat(createInstances(child));\n    }, []);\n    return [\n        {\n            type: type,\n            style: style,\n            props: props,\n            box: {},\n            children: nextChildren\n        }\n    ];\n};\n/* eslint-disable no-continue */ var getBreak = function getBreak(node) {\n    var _node$props;\n    return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.break) || false;\n};\nvar getMinPresenceAhead = function getMinPresenceAhead(node) {\n    var _node$props2;\n    return ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.minPresenceAhead) || 0;\n};\nvar getFurthestEnd = function getFurthestEnd(elements) {\n    return Math.max.apply(Math, elements.map(function(node) {\n        return node.box.top + node.box.height;\n    }));\n};\nvar getEndOfMinPresenceAhead = function getEndOfMinPresenceAhead(child) {\n    return child.box.top + child.box.height + child.box.marginBottom + getMinPresenceAhead(child);\n};\nvar getEndOfPresence = function getEndOfPresence(child, futureElements) {\n    var afterMinPresenceAhead = getEndOfMinPresenceAhead(child);\n    var endOfFurthestFutureElement = getFurthestEnd(futureElements.filter(function(node) {\n        var _node$props3;\n        return !((_node$props3 = node.props) !== null && _node$props3 !== void 0 && _node$props3.fixed);\n    }));\n    return Math.min(afterMinPresenceAhead, endOfFurthestFutureElement);\n};\nvar shouldBreak = function shouldBreak(child, futureElements, height) {\n    var _child$props;\n    if ((_child$props = child.props) !== null && _child$props !== void 0 && _child$props.fixed) return false;\n    var shouldSplit = height < child.box.top + child.box.height;\n    var canWrap = getWrap(child);\n    // Calculate the y coordinate where the desired presence of the child ends\n    var endOfPresence = getEndOfPresence(child, futureElements);\n    // If the child is already at the top of the page, breaking won't improve its presence\n    // (as long as react-pdf does not support breaking into differently sized containers)\n    var breakingImprovesPresence = child.box.top > child.box.marginTop;\n    return getBreak(child) || shouldSplit && !canWrap || !shouldSplit && endOfPresence > height && breakingImprovesPresence;\n};\nvar IGNORABLE_CODEPOINTS = [\n    8232,\n    // LINE_SEPARATOR\n    8233 // PARAGRAPH_SEPARATOR\n];\nvar buildSubsetForFont = function buildSubsetForFont(font) {\n    return IGNORABLE_CODEPOINTS.reduce(function(acc, codePoint) {\n        if (font && font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n            return acc;\n        }\n        return [].concat(acc, [\n            String.fromCharCode(codePoint)\n        ]);\n    }, []);\n};\nvar ignoreChars = function ignoreChars(fragments) {\n    return fragments.map(function(fragment) {\n        var charSubset = buildSubsetForFont(fragment.attributes.font);\n        var subsetRegex = new RegExp(charSubset.join(\"|\"));\n        return {\n            string: fragment.string.replace(subsetRegex, \"\"),\n            attributes: fragment.attributes\n        };\n    });\n};\nvar PREPROCESSORS = [\n    ignoreChars,\n    embedEmojis\n];\nvar isImage$1 = function isImage(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image;\n};\nvar isTextInstance$2 = function isTextInstance(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance;\n};\n/**\n * Get textkit fragments of given node object\n *\n * @param {Object} fontStore font store\n * @param {Object} instance node\n * @param {string} [parentLink] parent link\n * @param {number} [level] fragment level\n * @returns {Object[]} text fragments\n */ var getFragments = function getFragments(fontStore, instance, parentLink, level) {\n    var _instance$props, _instance$props2;\n    if (level === void 0) {\n        level = 0;\n    }\n    if (!instance) return [\n        {\n            string: \"\"\n        }\n    ];\n    var fragments = [];\n    var _instance$style = instance.style, _instance$style$color = _instance$style.color, color = _instance$style$color === void 0 ? \"black\" : _instance$style$color, _instance$style$fontF = _instance$style.fontFamily, fontFamily = _instance$style$fontF === void 0 ? \"Helvetica\" : _instance$style$fontF, fontWeight = _instance$style.fontWeight, fontStyle = _instance$style.fontStyle, _instance$style$fontS = _instance$style.fontSize, fontSize = _instance$style$fontS === void 0 ? 18 : _instance$style$fontS, _instance$style$textA = _instance$style.textAlign, textAlign = _instance$style$textA === void 0 ? \"left\" : _instance$style$textA, lineHeight = _instance$style.lineHeight, textDecoration = _instance$style.textDecoration, textDecorationColor = _instance$style.textDecorationColor, textDecorationStyle = _instance$style.textDecorationStyle, textTransform = _instance$style.textTransform, letterSpacing = _instance$style.letterSpacing, textIndent = _instance$style.textIndent, opacity = _instance$style.opacity, verticalAlign = _instance$style.verticalAlign;\n    var opts = {\n        fontFamily: fontFamily,\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n    };\n    var obj = fontStore ? fontStore.getFont(opts) : null;\n    var font = obj ? obj.data : fontFamily;\n    // Don't pass main background color to textkit. Will be rendered by the render package instead\n    var backgroundColor = level === 0 ? null : instance.style.backgroundColor;\n    var attributes = {\n        font: font,\n        color: color,\n        opacity: opacity,\n        fontSize: fontSize,\n        backgroundColor: backgroundColor,\n        align: textAlign,\n        indent: textIndent,\n        characterSpacing: letterSpacing,\n        strikeStyle: textDecorationStyle,\n        underlineStyle: textDecorationStyle,\n        underline: textDecoration === \"underline\" || textDecoration === \"underline line-through\" || textDecoration === \"line-through underline\",\n        strike: textDecoration === \"line-through\" || textDecoration === \"underline line-through\" || textDecoration === \"line-through underline\",\n        strikeColor: textDecorationColor || color,\n        underlineColor: textDecorationColor || color,\n        link: parentLink || ((_instance$props = instance.props) === null || _instance$props === void 0 ? void 0 : _instance$props.src) || ((_instance$props2 = instance.props) === null || _instance$props2 === void 0 ? void 0 : _instance$props2.href),\n        lineHeight: lineHeight ? lineHeight * fontSize : null,\n        verticalAlign: verticalAlign\n    };\n    for(var i = 0; i < instance.children.length; i += 1){\n        var child = instance.children[i];\n        if (isImage$1(child)) {\n            fragments.push({\n                string: String.fromCharCode(0xfffc),\n                attributes: _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, attributes, {\n                    attachment: {\n                        width: child.style.width || fontSize,\n                        height: child.style.height || fontSize,\n                        image: child.image.data\n                    }\n                })\n            });\n        } else if (isTextInstance$2(child)) {\n            fragments.push({\n                string: transformText(child.value, textTransform),\n                attributes: attributes\n            });\n        } else if (child) {\n            var _fragments;\n            (_fragments = fragments).push.apply(_fragments, getFragments(fontStore, child, attributes.link, level + 1));\n        }\n    }\n    for(var _i = 0; _i < PREPROCESSORS.length; _i += 1){\n        var preprocessor = PREPROCESSORS[_i];\n        fragments = preprocessor(fragments);\n    }\n    return fragments;\n};\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} fontStore font store\n * @param {Object} instance node\n * @returns {Object} attributed string\n */ var getAttributedString = function getAttributedString(fontStore, instance) {\n    var fragments = getFragments(fontStore, instance);\n    return fromFragments(fragments);\n};\nvar engines = {\n    linebreaker: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.linebreaker,\n    justification: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.justification,\n    textDecoration: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.textDecoration,\n    scriptItemizer: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.scriptItemizer,\n    wordHyphenation: _react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__.wordHyphenation,\n    fontSubstitution: fontSubstitution\n};\nvar engine = (0,_react_pdf_textkit__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(engines);\nvar getMaxLines = function getMaxLines(node) {\n    var _node$style;\n    return (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.maxLines;\n};\nvar getTextOverflow = function getTextOverflow(node) {\n    var _node$style2;\n    return (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.textOverflow;\n};\n/**\n * Get layout container for specific text node\n *\n * @param {number} width\n * @param {number} height\n * @param {Object} node\n * @returns {Object} layout container\n */ var getContainer = function getContainer(width, height, node) {\n    var maxLines = getMaxLines(node);\n    var textOverflow = getTextOverflow(node);\n    return {\n        x: 0,\n        y: 0,\n        width: width,\n        maxLines: maxLines,\n        height: height || Infinity,\n        truncateMode: textOverflow\n    };\n};\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */ var getLayoutOptions = function getLayoutOptions(fontStore, node) {\n    return {\n        hyphenationPenalty: node.props.hyphenationPenalty,\n        shrinkWhitespaceFactor: {\n            before: -0.5,\n            after: -0.5\n        },\n        hyphenationCallback: node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null\n    };\n};\n/**\n * Get text lines for given node\n *\n * @param {Object} node node\n * @param {number} width container width\n * @param {number} height container height\n * @param {number} fontStore font store\n * @returns {Object[]} layout lines\n */ var layoutText = function layoutText(node, width, height, fontStore) {\n    var attributedString = getAttributedString(fontStore, node);\n    var container = getContainer(width, height, node);\n    var options = getLayoutOptions(fontStore, node);\n    var lines = engine(attributedString, container, options);\n    return lines.reduce(function(acc, line) {\n        return [].concat(acc, line);\n    }, []);\n};\nvar isType$2 = function isType(type) {\n    return function(node) {\n        return node.type === type;\n    };\n};\nvar isSvg$2 = isType$2(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg);\nvar isText$4 = isType$2(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nvar shouldIterate = function shouldIterate(node) {\n    return !isSvg$2(node) && !isText$4(node);\n};\nvar shouldLayoutText = function shouldLayoutText(node) {\n    return isText$4(node) && !node.lines;\n};\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layout node\n */ var resolveTextLayout = function resolveTextLayout(node, fontStore) {\n    if (shouldLayoutText(node)) {\n        var width = node.box.width - (node.box.paddingRight + node.box.paddingLeft);\n        var height = node.box.height - (node.box.paddingTop + node.box.paddingBottom);\n        // eslint-disable-next-line no-param-reassign\n        node.lines = layoutText(node, width, height, fontStore);\n    }\n    if (shouldIterate(node)) {\n        if (!node.children) return node;\n        var mapChild = function mapChild(child) {\n            return resolveTextLayout(child, fontStore);\n        };\n        var children = node.children.map(mapChild);\n        return Object.assign({}, node, {\n            children: children\n        });\n    }\n    return node;\n};\nvar BASE_INHERITABLE_PROPERTIES = [\n    \"color\",\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontStyle\",\n    \"fontWeight\",\n    \"letterSpacing\",\n    \"opacity\",\n    \"textDecoration\",\n    \"textTransform\",\n    \"lineHeight\",\n    \"textAlign\",\n    \"visibility\",\n    \"wordSpacing\"\n];\nvar TEXT_INHERITABLE_PROPERTIES = [].concat(BASE_INHERITABLE_PROPERTIES, [\n    \"backgroundColor\"\n]);\nvar isSvg$1 = function isSvg(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg;\n};\nvar isText$3 = function isText(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text;\n};\n// Merge style values\nvar mergeValues = function mergeValues(styleName, value, inheritedValue) {\n    switch(styleName){\n        case \"textDecoration\":\n            {\n                // merge not none and not false textDecoration values to one rule\n                return [\n                    inheritedValue,\n                    value\n                ].filter(function(v) {\n                    return v && v !== \"none\";\n                }).join(\" \");\n            }\n        default:\n            return value;\n    }\n};\n// Merge inherited and node styles\nvar merge = function merge(inheritedStyles, style) {\n    var mergedStyles = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, inheritedStyles);\n    Object.entries(style).forEach(function(_ref) {\n        var styleName = _ref[0], value = _ref[1];\n        mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n    });\n    return mergedStyles;\n};\n/**\n * @typedef {Function} MergeStyles\n * @param {Object} node\n * @returns {Object} node with styles merged\n */ /**\n * Merges styles with node\n *\n * @param {Object} inheritedStyles style object\n * @returns {MergeStyles} merge styles function\n */ var mergeStyles = function mergeStyles(inheritedStyles) {\n    return function(node) {\n        var style = merge(inheritedStyles, node.style || {});\n        return Object.assign({}, node, {\n            style: style\n        });\n    };\n};\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} node document root\n * @returns {Object} document root with inheritance\n *\n */ var resolveInheritance = function resolveInheritance(node) {\n    if (isSvg$1(node)) return node;\n    if (!node.children) return node;\n    var inheritableProperties = isText$3(node) ? TEXT_INHERITABLE_PROPERTIES : BASE_INHERITABLE_PROPERTIES;\n    var inheritStyles = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.pick)(inheritableProperties, node.style || {});\n    var resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveInheritance, mergeStyles(inheritStyles));\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar getComputedMargin = function getComputedMargin(node, edge) {\n    var yogaNode = node.yogaNode;\n    return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @returns {{ marginTop: number, marginRight: number, marginBottom: number, marginLeft: number }} margins\n */ var getMargin = function getMargin(node) {\n    var style = node.style, box = node.box;\n    var marginTop = getComputedMargin(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top) || (box === null || box === void 0 ? void 0 : box.marginTop) || (style === null || style === void 0 ? void 0 : style.marginTop) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n    var marginRight = getComputedMargin(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right) || (box === null || box === void 0 ? void 0 : box.marginRight) || (style === null || style === void 0 ? void 0 : style.marginRight) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n    var marginBottom = getComputedMargin(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom) || (box === null || box === void 0 ? void 0 : box.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n    var marginLeft = getComputedMargin(node, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left) || (box === null || box === void 0 ? void 0 : box.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n    return {\n        marginTop: marginTop,\n        marginRight: marginRight,\n        marginBottom: marginBottom,\n        marginLeft: marginLeft\n    };\n};\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @returns {{ top: number, right: number, bottom: number, left: number }} position\n */ var getPosition = function getPosition(node) {\n    var yogaNode = node.yogaNode;\n    return {\n        top: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedTop()) || 0,\n        right: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedRight()) || 0,\n        bottom: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedBottom()) || 0,\n        left: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedLeft()) || 0\n    };\n};\nvar DEFAULT_DIMENSION = {\n    width: 0,\n    height: 0\n};\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @returns {{ width: number, height: number }} dimensions\n */ var getDimension = function getDimension(node) {\n    var yogaNode = node.yogaNode;\n    if (!yogaNode) return DEFAULT_DIMENSION;\n    return {\n        width: yogaNode.getComputedWidth(),\n        height: yogaNode.getComputedHeight()\n    };\n};\nvar getComputedBorder = function getComputedBorder(yogaNode, edge) {\n    return yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n};\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @returns {{ borderTopWidth: number, borderRightWidth: number, borderBottomWidth: number, borderLeftWidth: number }} border widths\n */ var getBorderWidth = function getBorderWidth(node) {\n    var yogaNode = node.yogaNode;\n    return {\n        borderTopWidth: getComputedBorder(yogaNode, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top),\n        borderRightWidth: getComputedBorder(yogaNode, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right),\n        borderBottomWidth: getComputedBorder(yogaNode, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom),\n        borderLeftWidth: getComputedBorder(yogaNode, yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left)\n    };\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set display attribute to node's Yoga instance\n *\n * @param {string} value display\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setDisplay = function setDisplay(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (yogaNode) {\n            yogaNode.setDisplay(value === \"none\" ? yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Display.None : yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Display.Flex);\n        }\n        return node;\n    };\n};\nvar OVERFLOW = {\n    hidden: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Overflow.Hidden,\n    scroll: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Overflow.Scroll\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {string} value overflow value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setOverflow = function setOverflow(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            var overflow = OVERFLOW[value] || yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Overflow.Visible;\n            yogaNode.setOverflow(overflow);\n        }\n        return node;\n    };\n};\nvar FLEX_WRAP = {\n    wrap: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Wrap.Wrap,\n    \"wrap-reverse\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Wrap.WrapReverse\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {string} value flex wrap value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setFlexWrap = function setFlexWrap(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (yogaNode) {\n            var flexWrap = FLEX_WRAP[value] || yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Wrap.NoWrap;\n            yogaNode.setFlexWrap(flexWrap);\n        }\n        return node;\n    };\n};\n/* eslint-disable no-unused-expressions */ /**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * @typedef {Function} YogaValueSetter\n * @param {any} value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ /**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {string} attr property\n * @param {number} [edge] edge\n * @returns {YogaValueSetter} node instance wrapper\n */ var setYogaValue = function setYogaValue(attr, edge) {\n    return function(value) {\n        return function(node) {\n            var yogaNode = node.yogaNode;\n            if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n                var hasEdge = !(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(edge);\n                var fixedMethod = \"set\" + (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(attr);\n                var autoMethod = fixedMethod + \"Auto\";\n                var percentMethod = fixedMethod + \"Percent\";\n                var percent = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n                if (percent && !yogaNode[percentMethod]) {\n                    throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n                }\n                if (percent) {\n                    if (hasEdge) {\n                        var _yogaNode$percentMeth;\n                        (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n                    } else {\n                        var _yogaNode$percentMeth2;\n                        (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n                    }\n                } else if (value === \"auto\") {\n                    if (hasEdge) {\n                        var _yogaNode$autoMethod;\n                        (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n                    } else {\n                        var _yogaNode$autoMethod2;\n                        (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n                    }\n                } else if (hasEdge) {\n                    var _yogaNode$fixedMethod;\n                    (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n                } else {\n                    var _yogaNode$fixedMethod2;\n                    (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n                }\n            }\n            return node;\n        };\n    };\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {number} value flex grow value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setFlexGrow = function setFlexGrow(value) {\n    return function(node) {\n        return setYogaValue(\"flexGrow\")(value || 0)(node);\n    };\n};\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {number} flex basis value\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setFlexBasis = setYogaValue(\"flexBasis\");\nvar ALIGN = {\n    \"flex-start\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.FlexStart,\n    center: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.Center,\n    \"flex-end\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.FlexEnd,\n    stretch: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.Stretch,\n    baseline: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.Baseline,\n    \"space-between\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.SpaceBetween,\n    \"space-around\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.SpaceAround\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * @typedef {Function} AlignSetter\n * @param {string} value align value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ /**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {string} attr specific align property\n * @returns {AlignSetter} align setter\n */ var setAlign = function setAlign(attr) {\n    return function(value) {\n        return function(node) {\n            var yogaNode = node.yogaNode;\n            var defaultValue = attr === \"items\" ? yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.Stretch : yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Align.Auto;\n            if (yogaNode) {\n                var align = ALIGN[value] || defaultValue;\n                yogaNode[\"setAlign\" + (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.upperFirst)(attr)](align);\n            }\n            return node;\n        };\n    };\n};\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {string} align value\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setAlignSelf = setAlign(\"self\");\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {string} align value\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setAlignItems = setAlign(\"items\");\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {number} value flex shrink value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setFlexShrink = function setFlexShrink(value) {\n    return function(node) {\n        return setYogaValue(\"flexShrink\")(value || 1)(node);\n    };\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {number} value ratio\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setAspectRatio = function setAspectRatio(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            yogaNode.setAspectRatio(value);\n        }\n        return node;\n    };\n};\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {string} align value\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setAlignContent = setAlign(\"content\");\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set position type attribute to node's Yoga instance\n *\n * @param {string} value position position type\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setPositionType = function setPositionType(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            yogaNode.setPositionType(value === \"absolute\" ? yoga_layout__WEBPACK_IMPORTED_MODULE_8__.PositionType.Absolute : yoga_layout__WEBPACK_IMPORTED_MODULE_8__.PositionType.Relative);\n        }\n        return node;\n    };\n};\nvar FLEX_DIRECTIONS = {\n    row: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.FlexDirection.Row,\n    \"row-reverse\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.FlexDirection.RowReverse,\n    \"column-reverse\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.FlexDirection.ColumnReverse\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {string} value flex direction value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setFlexDirection = function setFlexDirection(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (yogaNode) {\n            var flexDirection = FLEX_DIRECTIONS[value] || yoga_layout__WEBPACK_IMPORTED_MODULE_8__.FlexDirection.Column;\n            yogaNode.setFlexDirection(flexDirection);\n        }\n        return node;\n    };\n};\nvar JUSTIFY_CONTENT = {\n    center: yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.Center,\n    \"flex-end\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.FlexEnd,\n    \"space-between\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.SpaceBetween,\n    \"space-around\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.SpaceAround,\n    \"space-evenly\": yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.SpaceEvenly\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {string} value justify content value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setJustifyContent = function setJustifyContent(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            var justifyContent = JUSTIFY_CONTENT[value] || yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Justify.FlexStart;\n            yogaNode.setJustifyContent(justifyContent);\n        }\n        return node;\n    };\n};\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {number} margin margin top\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setMarginTop = setYogaValue(\"margin\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top);\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {number} margin margin right\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setMarginRight = setYogaValue(\"margin\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right);\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {number} margin margin bottom\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setMarginBottom = setYogaValue(\"margin\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom);\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {number} margin margin left\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setMarginLeft = setYogaValue(\"margin\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left);\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {number} padding padding top\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPaddingTop = setYogaValue(\"padding\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top);\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {number} padding padding right\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPaddingRight = setYogaValue(\"padding\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right);\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {number} padding padding bottom\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPaddingBottom = setYogaValue(\"padding\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom);\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {number} padding padding left\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPaddingLeft = setYogaValue(\"padding\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left);\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set border top attribute to node's Yoga instance\n *\n * @param {number} border border top width\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setBorderTop = setYogaValue(\"border\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top);\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {number} border border right width\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setBorderRight = setYogaValue(\"border\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right);\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {number} border border bottom width\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setBorderBottom = setYogaValue(\"border\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom);\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {number} border border left width\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setBorderLeft = setYogaValue(\"border\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left);\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Set position top attribute to node's Yoga instance\n *\n * @param {number} position position top\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPositionTop = setYogaValue(\"position\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Top);\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {number} position position right\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPositionRight = setYogaValue(\"position\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Right);\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {number} position position bottom\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPositionBottom = setYogaValue(\"position\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Bottom);\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {number} position position left\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ var setPositionLeft = setYogaValue(\"position\", yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Edge.Left);\n/**\n * Set width to node's Yoga instance\n *\n * @param {number} width\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setWidth = setYogaValue(\"width\");\n/**\n * Set min width to node's Yoga instance\n *\n * @param {number} min width\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setMinWidth = setYogaValue(\"minWidth\");\n/**\n * Set max width to node's Yoga instance\n *\n * @param {number} max width\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setMaxWidth = setYogaValue(\"maxWidth\");\n/**\n * Set height to node's Yoga instance\n *\n * @param {number} height\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setHeight = setYogaValue(\"height\");\n/**\n * Set min height to node's Yoga instance\n *\n * @param {number} min height\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setMinHeight = setYogaValue(\"minHeight\");\n/**\n * Set max height to node's Yoga instance\n *\n * @param {number} max height\n * @param {Object} node instance\n * @returns {Object} node instance\n */ var setMaxHeight = setYogaValue(\"maxHeight\");\n/**\n * @typedef {Function} NodeInstanceWrapper\n * @param {Object} node node instance\n * @returns {Object} node instance\n */ /**\n * Check if value is a percentage and throw error if so\n *\n * @param {string} attr property\n * @param {unknown} value\n * @returns {void}\n */ var checkPercents = function checkPercents(attr, value) {\n    var percent = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n    if (percent) {\n        throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n    }\n};\n/**\n * Set rowGap value to node's Yoga instance\n *\n * @param {number} value gap value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setRowGap = function setRowGap(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            checkPercents(\"rowGap\", value);\n            yogaNode.setGap(yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Gutter.Row, value);\n        }\n        return node;\n    };\n};\n/**\n * Set columnGap value to node's Yoga instance\n *\n * @param {number} value gap value\n * @returns {NodeInstanceWrapper} node instance wrapper\n */ var setColumnGap = function setColumnGap(value) {\n    return function(node) {\n        var yogaNode = node.yogaNode;\n        if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(value) && yogaNode) {\n            checkPercents(\"columnGap\", value);\n            yogaNode.setGap(yoga_layout__WEBPACK_IMPORTED_MODULE_8__.Gutter.Column, value);\n        }\n        return node;\n    };\n};\nvar getAspectRatio = function getAspectRatio(viewbox) {\n    if (!viewbox) return null;\n    return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n/**\n * @typedef {Function} MeasureSvg\n * @param {number} width\n * @param {number} widthMode\n * @param {number} height\n * @param {number} heightMode\n * @returns {{ width: number, height: number }} svg width and height\n */ /**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @returns {MeasureSvg} measure svg\n */ var measureCanvas$1 = function measureCanvas(page, node) {\n    return function(width, widthMode, height, heightMode) {\n        var aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly || widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost) {\n            return {\n                width: width,\n                height: width / aspectRatio\n            };\n        }\n        if (heightMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly) {\n            return {\n                width: height * aspectRatio\n            };\n        }\n        return {};\n    };\n};\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {number} lines width\n */ var linesWidth = function linesWidth(node) {\n    if (!node.lines) return 0;\n    return Math.max.apply(Math, [\n        0\n    ].concat(node.lines.map(function(line) {\n        return line.xAdvance;\n    })));\n};\n/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {number} lines height\n */ var linesHeight = function linesHeight(node) {\n    if (!node.lines) return -1;\n    return node.lines.reduce(function(acc, line) {\n        return acc + line.box.height;\n    }, 0);\n};\n/* eslint-disable no-param-reassign */ var ALIGNMENT_FACTORS = {\n    center: 0.5,\n    right: 1\n};\n/**\n * @typedef {Function} MeasureText\n * @param {number} width\n * @param {number} widthMode\n * @param {number} height\n * @returns {{ width: number, height: number }} text width and height\n */ /**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Object} fontStore\n * @returns {MeasureText} measure text function\n */ var measureText = function measureText(page, node, fontStore) {\n    return function(width, widthMode, height) {\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly) {\n            if (!node.lines) node.lines = layoutText(node, width, height, fontStore);\n            return {\n                height: linesHeight(node)\n            };\n        }\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost) {\n            var _node$style;\n            var alignFactor = ALIGNMENT_FACTORS[(_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.textAlign] || 0;\n            if (!node.lines) {\n                node.lines = layoutText(node, width, height, fontStore);\n                node.alignOffset = (width - linesWidth(node)) * alignFactor; // Compensate align in variable width containers\n            }\n            return {\n                height: linesHeight(node),\n                width: Math.min(width, linesWidth(node))\n            };\n        }\n        return {};\n    };\n};\n/**\n * Get image ratio\n *\n * @param {Object} node image node\n * @returns {number} image ratio\n */ var getRatio = function getRatio(node) {\n    var _node$image;\n    return (_node$image = node.image) !== null && _node$image !== void 0 && _node$image.data ? node.image.width / node.image.height : 1;\n};\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {boolean} is page height auto\n */ var isHeightAuto = function isHeightAuto(page) {\n    var _page$box;\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.height);\n};\nvar SAFETY_HEIGHT$1 = 10;\n/**\n * @typedef {Function} MeasureImage\n * @param {number} width\n * @param {number} widthMode\n * @param {number} height\n * @param {number} heightMode\n * @returns {{ width: number, height: number }} image width and height\n */ /**\n * Yoga image measure function\n *\n * @param {Object} page page\n * @param {Object} node node\n * @returns {MeasureImage} measure image\n */ var measureImage = function measureImage(page, node) {\n    return function(width, widthMode, height, heightMode) {\n        var imageRatio = getRatio(node);\n        var imageMargin = getMargin(node);\n        var pagePadding = getPadding(page);\n        var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT$1;\n        // Skip measure if image data not present yet\n        if (!node.image) return {\n            width: 0,\n            height: 0\n        };\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly && heightMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Undefined) {\n            var scaledHeight = width / imageRatio;\n            return {\n                height: Math.min(pageArea, scaledHeight)\n            };\n        }\n        if (heightMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly && (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost || widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Undefined)) {\n            return {\n                width: Math.min(height * imageRatio, width)\n            };\n        }\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.Exactly && heightMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost) {\n            var _scaledHeight = width / imageRatio;\n            return {\n                height: Math.min(height, pageArea, _scaledHeight)\n            };\n        }\n        if (widthMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost && heightMode === yoga_layout__WEBPACK_IMPORTED_MODULE_8__.MeasureMode.AtMost) {\n            if (imageRatio > 1) {\n                return {\n                    width: width,\n                    height: Math.min(width / imageRatio, height)\n                };\n            }\n            return {\n                height: height,\n                width: Math.min(height * imageRatio, width)\n            };\n        }\n        return {\n            height: height,\n            width: width\n        };\n    };\n};\n/* eslint-disable no-param-reassign */ var SAFETY_HEIGHT = 10;\nvar getMax = function getMax(values) {\n    return Math.max.apply(Math, [\n        -Infinity\n    ].concat(values));\n};\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */ var measureCtx = function measureCtx() {\n    var ctx = {};\n    var points = [];\n    var nil = function nil() {\n        return ctx;\n    };\n    var addPoint = function addPoint(x, y) {\n        return points.push([\n            x,\n            y\n        ]);\n    };\n    var moveTo = function moveTo() {\n        addPoint.apply(void 0, arguments);\n        return ctx;\n    };\n    var rect = function rect(x, y, w, h) {\n        addPoint(x, y);\n        addPoint(x + w, y);\n        addPoint(x, y + h);\n        addPoint(x + w, y + h);\n        return ctx;\n    };\n    var ellipse = function ellipse(x, y, rx, ry) {\n        ry = ry || rx;\n        addPoint(x - rx, y - ry);\n        addPoint(x + rx, y - ry);\n        addPoint(x + rx, y + ry);\n        addPoint(x - rx, y + ry);\n        return ctx;\n    };\n    var polygon = function polygon() {\n        points.push.apply(points, arguments);\n        return ctx;\n    };\n    // Change dimensions\n    ctx.rect = rect;\n    ctx.moveTo = moveTo;\n    ctx.lineTo = moveTo;\n    ctx.circle = ellipse;\n    ctx.polygon = polygon;\n    ctx.ellipse = ellipse;\n    ctx.roundedRect = rect;\n    // To be implemented\n    ctx.text = nil;\n    ctx.path = nil;\n    ctx.lineWidth = nil;\n    ctx.bezierCurveTo = nil;\n    ctx.quadraticCurveTo = nil;\n    ctx.scale = nil;\n    ctx.rotate = nil;\n    ctx.translate = nil;\n    // These don't change dimensions\n    ctx.dash = nil;\n    ctx.clip = nil;\n    ctx.save = nil;\n    ctx.fill = nil;\n    ctx.font = nil;\n    ctx.stroke = nil;\n    ctx.lineCap = nil;\n    ctx.opacity = nil;\n    ctx.restore = nil;\n    ctx.lineJoin = nil;\n    ctx.fontSize = nil;\n    ctx.fillColor = nil;\n    ctx.miterLimit = nil;\n    ctx.strokeColor = nil;\n    ctx.fillOpacity = nil;\n    ctx.strokeOpacity = nil;\n    ctx.linearGradient = nil;\n    ctx.radialGradient = nil;\n    ctx.getWidth = function() {\n        return getMax(points.map(function(p) {\n            return p[0];\n        }));\n    };\n    ctx.getHeight = function() {\n        return getMax(points.map(function(p) {\n            return p[1];\n        }));\n    };\n    return ctx;\n};\n/**\n * @typedef {Function} MeasureCanvas\n * @returns {{ width: number, height: number }} canvas width and height\n */ /**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @returns {MeasureCanvas} measure canvas\n */ var measureCanvas = function measureCanvas(page, node) {\n    return function() {\n        var imageMargin = getMargin(node);\n        var pagePadding = getPadding(page);\n        var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n        var ctx = measureCtx();\n        node.props.paint(ctx);\n        var width = ctx.getWidth();\n        var height = Math.min(pageArea, ctx.getHeight());\n        return {\n            width: width,\n            height: height\n        };\n    };\n};\nvar isType$1 = function isType(type) {\n    return function(node) {\n        return node.type === type;\n    };\n};\nvar isSvg = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg);\nvar isText$2 = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nvar isNote = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Note);\nvar isPage = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Page);\nvar isImage = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image);\nvar isCanvas = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Canvas);\nvar isTextInstance$1 = isType$1(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance);\nvar setNodeHeight = function setNodeHeight(node) {\n    var value = isPage(node) ? node.box.height : node.style.height;\n    return setHeight(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */ var setYogaValues = function setYogaValues(node) {\n    (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(setNodeHeight(node), setWidth(node.style.width), setMinWidth(node.style.minWidth), setMaxWidth(node.style.maxWidth), setMinHeight(node.style.minHeight), setMaxHeight(node.style.maxHeight), setMarginTop(node.style.marginTop), setMarginRight(node.style.marginRight), setMarginBottom(node.style.marginBottom), setMarginLeft(node.style.marginLeft), setPaddingTop(node.style.paddingTop), setPaddingRight(node.style.paddingRight), setPaddingBottom(node.style.paddingBottom), setPaddingLeft(node.style.paddingLeft), setPositionType(node.style.position), setPositionTop(node.style.top), setPositionRight(node.style.right), setPositionBottom(node.style.bottom), setPositionLeft(node.style.left), setBorderTop(node.style.borderTopWidth), setBorderRight(node.style.borderRightWidth), setBorderBottom(node.style.borderBottomWidth), setBorderLeft(node.style.borderLeftWidth), setDisplay(node.style.display), setFlexDirection(node.style.flexDirection), setAlignSelf(node.style.alignSelf), setAlignContent(node.style.alignContent), setAlignItems(node.style.alignItems), setJustifyContent(node.style.justifyContent), setFlexWrap(node.style.flexWrap), setOverflow(node.style.overflow), setAspectRatio(node.style.aspectRatio), setFlexBasis(node.style.flexBasis), setFlexGrow(node.style.flexGrow), setFlexShrink(node.style.flexShrink), setRowGap(node.style.rowGap), setColumnGap(node.style.columnGap))(node);\n};\n/**\n * @typedef {Function} InsertYogaNodes\n * @param {Object} child child node\n * @returns {Object} node\n */ /**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent parent\n * @returns {InsertYogaNodes} insert yoga nodes\n */ var insertYogaNodes = function insertYogaNodes(parent) {\n    return function(child) {\n        parent.insertChild(child.yogaNode, parent.getChildCount());\n        return child;\n    };\n};\nvar setMeasureFunc = function setMeasureFunc(node, page, fontStore) {\n    var yogaNode = node.yogaNode;\n    if (isText$2(node)) {\n        yogaNode.setMeasureFunc(measureText(page, node, fontStore));\n    }\n    if (isImage(node)) {\n        yogaNode.setMeasureFunc(measureImage(page, node));\n    }\n    if (isCanvas(node)) {\n        yogaNode.setMeasureFunc(measureCanvas(page, node));\n    }\n    if (isSvg(node)) {\n        yogaNode.setMeasureFunc(measureCanvas$1(page, node));\n    }\n    return node;\n};\nvar isLayoutElement = function isLayoutElement(node) {\n    return !isText$2(node) && !isNote(node) && !isSvg(node);\n};\n/**\n * @typedef {Function} CreateYogaNodes\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */ /**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @returns {CreateYogaNodes} create yoga nodes\n */ var createYogaNodes = function createYogaNodes(page, fontStore, yoga) {\n    return function(node) {\n        var yogaNode = yoga.node.create();\n        var result = Object.assign({}, node, {\n            yogaNode: yogaNode\n        });\n        setYogaValues(result);\n        if (isLayoutElement(node) && node.children) {\n            var resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore, yoga));\n            result.children = node.children.map(resolveChild);\n        }\n        setMeasureFunc(result, page, fontStore);\n        return result;\n    };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} page page node\n * @returns {Object} page node\n */ var calculateLayout = function calculateLayout(page) {\n    page.yogaNode.calculateLayout();\n    return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */ var persistDimensions = function persistDimensions(node) {\n    if (isTextInstance$1(node)) return node;\n    var box = Object.assign(getPadding(node), getMargin(node), getBorderWidth(node), getPosition(node), getDimension(node));\n    var newNode = Object.assign({}, node, {\n        box: box\n    });\n    if (!node.children) return newNode;\n    var children = node.children.map(persistDimensions);\n    return Object.assign({}, newNode, {\n        children: children\n    });\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */ var destroyYogaNodes = function destroyYogaNodes(node) {\n    var newNode = Object.assign({}, node);\n    delete newNode.yogaNode;\n    if (!node.children) return newNode;\n    var children = node.children.map(destroyYogaNodes);\n    return Object.assign({}, newNode, {\n        children: children\n    });\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */ var freeYogaNodes = function freeYogaNodes(node) {\n    if (node.yogaNode) node.yogaNode.freeRecursive();\n    return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */ var resolvePageDimensions = function resolvePageDimensions(page, fontStore, yoga) {\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(page)) return null;\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore, yoga))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} node root object\n * @param {Object} fontStore font store\n * @returns {Object} root object with correct 'box' layout attributes\n */ var resolveDimensions = function resolveDimensions(node, fontStore) {\n    if (!node.children) return node;\n    var resolveChild = function resolveChild(child) {\n        return resolvePageDimensions(child, fontStore, node.yoga);\n    };\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar isText$1 = function isText(node) {\n    return node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text;\n};\n// Prevent splitting elements by low decimal numbers\nvar SAFETY_THRESHOLD = 0.001;\nvar assingChildren = function assingChildren(children, node) {\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar getTop = function getTop(node) {\n    var _node$box;\n    return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\nvar allFixed = function allFixed(nodes) {\n    return nodes.every(isFixed);\n};\nvar isDynamic = function isDynamic(node) {\n    var _node$props;\n    return !(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.render);\n};\nvar relayoutPage = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveTextLayout, resolveInheritance, resolvePageDimensions);\nvar warnUnavailableSpace = function warnUnavailableSpace(node) {\n    console.warn(\"Node of type \" + node.type + \" can't wrap between pages and it's bigger than available page height\");\n};\nvar splitNodes = function splitNodes(height, contentArea, nodes) {\n    var currentChildren = [];\n    var nextChildren = [];\n    for(var i = 0; i < nodes.length; i += 1){\n        var child = nodes[i];\n        var futureNodes = nodes.slice(i + 1);\n        var futureFixedNodes = futureNodes.filter(isFixed);\n        var nodeTop = getTop(child);\n        var nodeHeight = child.box.height;\n        var isOutside = height <= nodeTop;\n        var shouldBreak$1 = shouldBreak(child, futureNodes, height);\n        var shouldSplit = height + SAFETY_THRESHOLD < nodeTop + nodeHeight;\n        var canWrap = getWrap(child);\n        var fitsInsidePage = nodeHeight <= contentArea;\n        if (isFixed(child)) {\n            nextChildren.push(child);\n            currentChildren.push(child);\n            continue;\n        }\n        if (isOutside) {\n            var box = Object.assign({}, child.box, {\n                top: child.box.top - height\n            });\n            var next = Object.assign({}, child, {\n                box: box\n            });\n            nextChildren.push(next);\n            continue;\n        }\n        if (!fitsInsidePage && !canWrap) {\n            currentChildren.push(child);\n            nextChildren.push.apply(nextChildren, futureNodes);\n            warnUnavailableSpace(child);\n            break;\n        }\n        if (shouldBreak$1) {\n            var _box = Object.assign({}, child.box, {\n                top: child.box.top - height\n            });\n            var props = Object.assign({}, child.props, {\n                wrap: true,\n                break: false\n            });\n            var _next = Object.assign({}, child, {\n                box: _box,\n                props: props\n            });\n            currentChildren.push.apply(currentChildren, futureFixedNodes);\n            nextChildren.push.apply(nextChildren, [\n                _next\n            ].concat(futureNodes));\n            break;\n        }\n        if (shouldSplit) {\n            var _split = split(child, height, contentArea), currentChild = _split[0], nextChild = _split[1];\n            // All children are moved to the next page, it doesn't make sense to show the parent on the current page\n            if (child.children.length > 0 && currentChild.children.length === 0) {\n                var _box2 = Object.assign({}, child.box, {\n                    top: child.box.top - height\n                });\n                var _next2 = Object.assign({}, child, {\n                    box: _box2\n                });\n                currentChildren.push.apply(currentChildren, futureFixedNodes);\n                nextChildren.push.apply(nextChildren, [\n                    _next2\n                ].concat(futureNodes));\n                break;\n            }\n            if (currentChild) currentChildren.push(currentChild);\n            if (nextChild) nextChildren.push(nextChild);\n            continue;\n        }\n        currentChildren.push(child);\n    }\n    return [\n        currentChildren,\n        nextChildren\n    ];\n};\nvar splitChildren = function splitChildren(height, contentArea, node) {\n    var children = node.children || [];\n    var availableHeight = height - getTop(node);\n    return splitNodes(availableHeight, contentArea, children);\n};\nvar splitView = function splitView(node, height, contentArea) {\n    var _splitNode = splitNode(node, height), currentNode = _splitNode[0], nextNode = _splitNode[1];\n    var _splitChildren = splitChildren(height, contentArea, node), currentChilds = _splitChildren[0], nextChildren = _splitChildren[1];\n    return [\n        assingChildren(currentChilds, currentNode),\n        assingChildren(nextChildren, nextNode)\n    ];\n};\nvar split = function split(node, height, contentArea) {\n    return isText$1(node) ? splitText(node, height) : splitView(node, height, contentArea);\n};\nvar shouldResolveDynamicNodes = function shouldResolveDynamicNodes(node) {\n    var children = node.children || [];\n    return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\nvar resolveDynamicNodes = function resolveDynamicNodes(props, node) {\n    var isNodeDynamic = isDynamic(node);\n    // Call render prop on dynamic nodes and append result to children\n    var resolveChildren = function resolveChildren(children) {\n        if (children === void 0) {\n            children = [];\n        }\n        if (isNodeDynamic) {\n            var res = node.props.render(props);\n            return createInstances(res).filter(Boolean).map(function(n) {\n                return resolveDynamicNodes(props, n);\n            });\n        }\n        return children.map(function(c) {\n            return resolveDynamicNodes(props, c);\n        });\n    };\n    // We reset dynamic text box so it can be computed again later on\n    var resetHeight = isNodeDynamic && isText$1(node);\n    var box = resetHeight ? _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, node.box, {\n        height: 0\n    }) : node.box;\n    var children = resolveChildren(node.children);\n    var lines = isNodeDynamic ? null : node.lines;\n    return Object.assign({}, node, {\n        box: box,\n        lines: lines,\n        children: children\n    });\n};\nvar resolveDynamicPage = function resolveDynamicPage(props, page, fontStore, yoga) {\n    if (shouldResolveDynamicNodes(page)) {\n        var resolvedPage = resolveDynamicNodes(props, page);\n        return relayoutPage(resolvedPage, fontStore, yoga);\n    }\n    return page;\n};\nvar splitPage = function splitPage(page, pageNumber, fontStore, yoga) {\n    var wrapArea = getWrapArea(page);\n    var contentArea = getContentArea(page);\n    var dynamicPage = resolveDynamicPage({\n        pageNumber: pageNumber\n    }, page, fontStore, yoga);\n    var height = page.style.height;\n    var _splitNodes = splitNodes(wrapArea, contentArea, dynamicPage.children), currentChilds = _splitNodes[0], nextChilds = _splitNodes[1];\n    var relayout = function relayout(node) {\n        return relayoutPage(node, fontStore, yoga);\n    };\n    var currentBox = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, page.box, {\n        height: height\n    });\n    var currentPage = relayout(Object.assign({}, page, {\n        box: currentBox,\n        children: currentChilds\n    }));\n    if (nextChilds.length === 0 || allFixed(nextChilds)) return [\n        currentPage,\n        null\n    ];\n    var nextBox = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)(\"height\", page.box);\n    var nextProps = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)(\"bookmark\", page.props);\n    var nextPage = relayout(Object.assign({}, page, {\n        props: nextProps,\n        box: nextBox,\n        children: nextChilds\n    }));\n    return [\n        currentPage,\n        nextPage\n    ];\n};\nvar resolvePageIndices = function resolvePageIndices(fontStore, yoga, page, pageNumber, pages) {\n    var totalPages = pages.length;\n    var props = {\n        totalPages: totalPages,\n        pageNumber: pageNumber + 1,\n        subPageNumber: page.subPageNumber + 1,\n        subPageTotalPages: page.subPageTotalPages\n    };\n    return resolveDynamicPage(props, page, fontStore, yoga);\n};\nvar assocSubPageData = function assocSubPageData(subpages) {\n    return subpages.map(function(page, i) {\n        return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_9__({}, page, {\n            subPageNumber: i,\n            subPageTotalPages: subpages.length\n        });\n    });\n};\nvar dissocSubPageData = function dissocSubPageData(page) {\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.omit)([\n        \"subPageNumber\",\n        \"subPageTotalPages\"\n    ], page);\n};\nvar paginate = function paginate(page, pageNumber, fontStore, yoga) {\n    var _page$props;\n    if (!page) return [];\n    if (((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.wrap) === false) return [\n        page\n    ];\n    var splittedPage = splitPage(page, pageNumber, fontStore, yoga);\n    var pages = [\n        splittedPage[0]\n    ];\n    var nextPage = splittedPage[1];\n    while(nextPage !== null){\n        splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore, yoga);\n        pages.push(splittedPage[0]);\n        nextPage = splittedPage[1];\n    }\n    return pages;\n};\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param {Object} doc node\n * @param {Object} fontStore font store\n * @returns {Object} layout node\n */ var resolvePagination = function resolvePagination(doc, fontStore) {\n    var pages = [];\n    var pageNumber = 1;\n    for(var i = 0; i < doc.children.length; i += 1){\n        var page = doc.children[i];\n        var subpages = paginate(page, pageNumber, fontStore, doc.yoga);\n        subpages = assocSubPageData(subpages);\n        pageNumber += subpages.length;\n        pages = pages.concat(subpages);\n    }\n    pages = pages.map(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return dissocSubPageData(resolvePageIndices.apply(void 0, [\n            fontStore,\n            doc.yoga\n        ].concat(args)));\n    });\n    return assingChildren(pages, doc);\n};\n/**\n * @typedef {Function} ResolvePageHorizontalPadding\n * @param {string} value padding value\n * @returns {Object} translated padding value\n */ /**\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} container page container\n * @returns {ResolvePageHorizontalPadding} resolve page horizontal padding\n */ var resolvePageHorizontalPadding = function resolvePageHorizontalPadding(container) {\n    return function(value) {\n        var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n        return match ? match.percent * container.width : value;\n    };\n};\n/**\n * @typedef {Function} ResolvePageVerticalPadding\n * @param {string} padding value\n * @returns {Object} translated padding value\n */ /**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} container page container\n * @returns {ResolvePageVerticalPadding} resolve page vertical padding\n */ var resolvePageVerticalPadding = function resolvePageVerticalPadding(container) {\n    return function(value) {\n        var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n        return match ? match.percent * container.height : value;\n    };\n};\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */ var resolvePagePaddings = function resolvePagePaddings(page) {\n    var container = page.style;\n    var style = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        paddingTop: resolvePageVerticalPadding(container),\n        paddingLeft: resolvePageHorizontalPadding(container),\n        paddingRight: resolvePageHorizontalPadding(container),\n        paddingBottom: resolvePageVerticalPadding(container)\n    }, page.style);\n    return Object.assign({}, page, {\n        style: style\n    });\n};\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} root document root\n * @returns {Object} document root with translated page paddings\n */ var resolvePagesPaddings = function resolvePagesPaddings(root) {\n    if (!root.children) return root;\n    var children = root.children.map(resolvePagePaddings);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\n/**\n * @typedef {Function} ResolveRadius\n * @param {string | number} value border radius value\n * @returns {number} resolved radius value\n */ /**\n *\n * @param {{ width: number, height: number }} container width and height\n * @returns {ResolveRadius} resolve radius function\n */ var resolveRadius = function resolveRadius(container) {\n    return function(value) {\n        if (!value) return undefined;\n        var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(value);\n        return match ? match.percent * Math.min(container.width, container.height) : value;\n    };\n};\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */ var resolvePercentRadius = function resolvePercentRadius(node) {\n    var style = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.evolve)({\n        borderTopLeftRadius: resolveRadius(node.box),\n        borderTopRightRadius: resolveRadius(node.box),\n        borderBottomRightRadius: resolveRadius(node.box),\n        borderBottomLeftRadius: resolveRadius(node.box)\n    }, node.style || {});\n    var newNode = Object.assign({}, node, {\n        style: style\n    });\n    if (!node.children) return newNode;\n    var children = node.children.map(resolvePercentRadius);\n    return Object.assign({}, newNode, {\n        children: children\n    });\n};\n/**\n * Transform percent height into fixed\n *\n * @param {number} height\n * @returns {number} height\n */ var transformHeight = function transformHeight(pageArea, height) {\n    var match = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.matchPercent)(height);\n    return match ? match.percent * pageArea : height;\n};\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @returns {number} page area\n */ var getPageArea = function getPageArea(page) {\n    var _page$style, _page$style2;\n    var pageHeight = page.style.height;\n    var pagePaddingTop = ((_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.paddingTop) || 0;\n    var pagePaddingBottom = ((_page$style2 = page.style) === null || _page$style2 === void 0 ? void 0 : _page$style2.paddingBottom) || 0;\n    return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @returns {Object} transformed node\n */ var resolveNodePercentHeight = function resolveNodePercentHeight(page, node) {\n    var _page$style3, _node$style;\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_page$style3 = page.style) === null || _page$style3 === void 0 ? void 0 : _page$style3.height)) return node;\n    if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height)) return node;\n    var pageArea = getPageArea(page);\n    var height = transformHeight(pageArea, node.style.height);\n    var style = Object.assign({}, node.style, {\n        height: height\n    });\n    return Object.assign({}, node, {\n        style: style\n    });\n};\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @returns {Object} transformed page\n */ var resolvePagePercentHeight = function resolvePagePercentHeight(page) {\n    if (!page.children) return page;\n    var resolveChild = function resolveChild(child) {\n        return resolveNodePercentHeight(page, child);\n    };\n    var children = page.children.map(resolveChild);\n    return Object.assign({}, page, {\n        children: children\n    });\n};\n/**\n * Transform all page immediate children with percent height to fixed.\n * This is needed for computing correct dimensions on pre-pagination layout.\n *\n * @param {Object} root document root\n * @returns {Object} transformed document root\n */ var resolvePercentHeight = function resolvePercentHeight(root) {\n    if (!root.children) return root;\n    var children = root.children.map(resolvePagePercentHeight);\n    return Object.assign({}, root, {\n        children: children\n    });\n};\nvar isType = function isType(type) {\n    return function(node) {\n        return node.type === type;\n    };\n};\nvar isLink = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Link);\nvar isText = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text);\nvar isTextInstance = isType(_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance);\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {boolean} has render prop?\n */ var hasRenderProp = function hasRenderProp(node) {\n    var _node$props;\n    return !!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.render);\n};\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param {Object} node\n * @returns {boolean} are all children text instances?\n */ var isTextType = function isTextType(node) {\n    return isText(node) || isTextInstance(node);\n};\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param {Object} node\n * @returns {boolean} are all children text instances?\n */ var isTextLink = function isTextLink(node) {\n    var children = node.children || [];\n    // Text string inside a Link\n    if (children.every(isTextInstance)) return true;\n    // Text node inside a Link\n    if (children.every(isText)) return false;\n    return children.every(isTextType);\n};\n/**\n * Wraps node children inside Text node\n *\n * @param {Object} node\n * @returns {boolean} node with intermediate Text child\n */ var wrapText = function wrapText(node) {\n    var textElement = {\n        type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text,\n        props: {},\n        style: {},\n        box: {},\n        children: node.children\n    };\n    return Object.assign({}, node, {\n        children: [\n            textElement\n        ]\n    });\n};\nvar transformLink = function transformLink(node) {\n    if (!isLink(node)) return node;\n    // If has render prop substitute the instance by a Text, that will\n    // ultimately render the inline Link via the textkit PDF renderer.\n    if (hasRenderProp(node)) return Object.assign({}, node, {\n        type: _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text\n    });\n    // If is a text link (either contains Text or TextInstalce), wrap it\n    // inside a Text element so styles are applied correctly\n    if (isTextLink(node)) return wrapText(node);\n    return node;\n};\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */ var resolveLinkSubstitution = function resolveLinkSubstitution(node) {\n    if (!node.children) return node;\n    var resolveChild = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(transformLink, resolveLinkSubstitution);\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n        children: children\n    });\n};\nvar layout = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.asyncCompose)(resolveZIndex, resolveOrigin, resolvePagination, resolveTextLayout, resolvePercentRadius, resolveDimensions, resolveSvg, resolveAssets, resolveInheritance, resolvePercentHeight, resolvePagesPaddings, resolveStyles, resolveLinkSubstitution, resolveBookmarks, resolvePageSizes, resolveYoga);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/layout/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/layout/node_modules/emoji-regex/index.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-pdf/layout/node_modules/emoji-regex/index.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (()=>{\n    // https://mths.be/emoji\n    return /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26D3\\uFE0F?(?:\\u200D\\uD83D\\uDCA5)?|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF43\\uDF45-\\uDF4A\\uDF4C-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDF44(?:\\u200D\\uD83D\\uDFEB)?|\\uDF4B(?:\\u200D\\uD83D\\uDFE9)?|\\uDFC3(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4\\uDEB5](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE41\\uDE43\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC08(?:\\u200D\\u2B1B)?|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC26(?:\\u200D(?:\\u2B1B|\\uD83D\\uDD25))?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?|\\uDE42(?:\\u200D[\\u2194\\u2195]\\uFE0F?)?|\\uDEB6(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDCE(?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D(?:[\\u2640\\u2642]\\uFE0F?(?:\\u200D\\u27A1\\uFE0F?)?|\\u27A1\\uFE0F?))?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1|\\uDDD1\\u200D\\uD83E\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?|\\uDDD2(?:\\u200D\\uD83E\\uDDD2)?))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF\\uDDBC\\uDDBD](?:\\u200D\\u27A1\\uFE0F?)?|[\\uDDB0-\\uDDB3]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/layout/node_modules/emoji-regex/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js":
/*!******************************************************!*\
  !*** ./node_modules/@react-pdf/pdfkit/lib/pdfkit.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmbeddedFont: () => (/* binding */ EmbeddedFont),\n/* harmony export */   PDFFont: () => (/* binding */ PDFFont),\n/* harmony export */   StandardFont: () => (/* binding */ StandardFont),\n/* harmony export */   \"default\": () => (/* binding */ PDFDocument)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/inheritsLoose.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(ssr)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelperLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/createForOfIteratorHelperLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var crypto_js_md5_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! crypto-js/md5.js */ \"(ssr)/./node_modules/crypto-js/md5.js\");\n/* harmony import */ var fontkit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! fontkit */ \"(ssr)/./node_modules/fontkit/dist/module.mjs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var jpeg_exif__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jpeg-exif */ \"(ssr)/./node_modules/jpeg-exif/lib/index.js\");\n/* harmony import */ var _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @react-pdf/png-js */ \"(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var crypto_js_core_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! crypto-js/core.js */ \"(ssr)/./node_modules/crypto-js/core.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar PDFReference = /*#__PURE__*/ function(_stream$Writable) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFReference, _stream$Writable);\n    function PDFReference(document, id, data) {\n        var _this;\n        _this = _stream$Writable.call(this, {\n            decodeStrings: false\n        }) || this;\n        _this.finalize = _this.finalize.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__(_this));\n        _this.document = document;\n        _this.id = id;\n        if (data == null) {\n            data = {};\n        }\n        _this.data = data;\n        _this.gen = 0;\n        _this.deflate = null;\n        _this.compress = _this.document.compress && !_this.data.Filter;\n        _this.uncompressedLength = 0;\n        _this.chunks = [];\n        return _this;\n    }\n    var _proto = PDFReference.prototype;\n    _proto.initDeflate = function initDeflate() {\n        var _this2 = this;\n        this.data.Filter = \"FlateDecode\";\n        this.deflate = zlib__WEBPACK_IMPORTED_MODULE_3__.createDeflate();\n        this.deflate.on(\"data\", function(chunk) {\n            _this2.chunks.push(chunk);\n            return _this2.data.Length += chunk.length;\n        });\n        return this.deflate.on(\"end\", this.finalize);\n    };\n    _proto._write = function _write(chunk, encoding, callback) {\n        if (!(chunk instanceof Uint8Array)) {\n            chunk = Buffer.from(chunk + \"\\n\", \"binary\");\n        }\n        this.uncompressedLength += chunk.length;\n        if (this.data.Length == null) {\n            this.data.Length = 0;\n        }\n        if (this.compress) {\n            if (!this.deflate) {\n                this.initDeflate();\n            }\n            this.deflate.write(chunk);\n        } else {\n            this.chunks.push(chunk);\n            this.data.Length += chunk.length;\n        }\n        return callback();\n    };\n    _proto.end = function end() {\n        _stream$Writable.prototype.end.apply(this, arguments);\n        if (this.deflate) {\n            return this.deflate.end();\n        }\n        return this.finalize();\n    };\n    _proto.finalize = function finalize() {\n        this.offset = this.document._offset;\n        this.document._write(this.id + \" \" + this.gen + \" obj\");\n        this.document._write(PDFObject$1.convert(this.data));\n        if (this.chunks.length) {\n            this.document._write(\"stream\");\n            for(var _i = 0, _Array$from = Array.from(this.chunks); _i < _Array$from.length; _i++){\n                var chunk = _Array$from[_i];\n                this.document._write(chunk);\n            }\n            this.chunks.length = 0; // free up memory\n            this.document._write(\"\\nendstream\");\n        }\n        this.document._write(\"endobj\");\n        return this.document._refEnd(this);\n    };\n    _proto.toString = function toString() {\n        return this.id + \" \" + this.gen + \" R\";\n    };\n    return PDFReference;\n}(stream__WEBPACK_IMPORTED_MODULE_1__.Writable);\nvar PDFTree = /*#__PURE__*/ function() {\n    function PDFTree(options) {\n        if (options === void 0) {\n            options = {};\n        }\n        this._items = {};\n        // disable /Limits output for this tree\n        this.limits = typeof options.limits === \"boolean\" ? options.limits : true;\n    }\n    var _proto = PDFTree.prototype;\n    _proto.add = function add(key, val) {\n        return this._items[key] = val;\n    };\n    _proto.get = function get(key) {\n        return this._items[key];\n    };\n    _proto.toString = function toString() {\n        var _this = this;\n        // Needs to be sorted by key\n        var sortedKeys = Object.keys(this._items).sort(function(a, b) {\n            return _this._compareKeys(a, b);\n        });\n        var out = [\n            \"<<\"\n        ];\n        if (this.limits && sortedKeys.length > 1) {\n            var first = sortedKeys[0], last = sortedKeys[sortedKeys.length - 1];\n            out.push(\"  /Limits \" + PDFObject$1.convert([\n                this._dataForKey(first),\n                this._dataForKey(last)\n            ]));\n        }\n        out.push(\"  /\" + this._keysName() + \" [\");\n        for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(sortedKeys), _step; !(_step = _iterator()).done;){\n            var key = _step.value;\n            out.push(\"    \" + PDFObject$1.convert(this._dataForKey(key)) + \" \" + PDFObject$1.convert(this._items[key]));\n        }\n        out.push(\"]\");\n        out.push(\">>\");\n        return out.join(\"\\n\");\n    };\n    _proto._compareKeys = function _compareKeys() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    _proto._keysName = function _keysName() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    _proto._dataForKey = function _dataForKey() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    return PDFTree;\n}();\nvar PDFNameTree = /*#__PURE__*/ function(_PDFTree) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFNameTree, _PDFTree);\n    function PDFNameTree() {\n        return _PDFTree.apply(this, arguments) || this;\n    }\n    var _proto = PDFNameTree.prototype;\n    _proto._compareKeys = function _compareKeys(a, b) {\n        return a.localeCompare(b);\n    };\n    _proto._keysName = function _keysName() {\n        return \"Names\";\n    };\n    _proto._dataForKey = function _dataForKey(k) {\n        return new String(k);\n    };\n    return PDFNameTree;\n}(PDFTree);\nvar escapableRe = /[\\n\\r\\t\\b\\f\\(\\)\\\\]/g;\nvar escapable = {\n    \"\\n\": \"\\\\n\",\n    \"\\r\": \"\\\\r\",\n    \"\t\": \"\\\\t\",\n    \"\\b\": \"\\\\b\",\n    \"\\f\": \"\\\\f\",\n    \"\\\\\": \"\\\\\\\\\",\n    \"(\": \"\\\\(\",\n    \")\": \"\\\\)\"\n};\nvar pad = function pad(str, length) {\n    return (Array(length + 1).join(\"0\") + str).slice(-length);\n};\n// Convert little endian UTF-16 to big endian\nvar swapBytes = function swapBytes(buff) {\n    var l = buff.length;\n    if (l & 0x01) {\n        throw new Error(\"Buffer length must be even\");\n    } else {\n        for(var i = 0, end = l - 1; i < end; i += 2){\n            var a = buff[i];\n            buff[i] = buff[i + 1];\n            buff[i + 1] = a;\n        }\n    }\n    return buff;\n};\nvar PDFObject = /*#__PURE__*/ function() {\n    function PDFObject() {}\n    PDFObject.convert = function convert(object) {\n        // String literals are converted to the PDF name type\n        if (typeof object === \"string\") {\n            return \"/\" + object;\n        }\n        // String objects are converted to PDF strings (UTF-16)\n        if (object instanceof String) {\n            var string = object;\n            // Detect if this is a unicode string\n            var isUnicode = false;\n            for(var i = 0, end = string.length; i < end; i++){\n                if (string.charCodeAt(i) > 0x7f) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            // If so, encode it as big endian UTF-16\n            if (isUnicode) {\n                string = swapBytes(Buffer.from(\"\\uFEFF\" + string, \"utf16le\")).toString(\"binary\");\n            }\n            // Escape characters as required by the spec\n            string = string.replace(escapableRe, function(c) {\n                return escapable[c];\n            });\n            return \"(\" + string + \")\";\n        // Buffers are converted to PDF hex strings\n        }\n        if (Buffer.isBuffer(object)) {\n            return \"<\" + object.toString(\"hex\") + \">\";\n        }\n        if (object instanceof PDFReference || object instanceof PDFNameTree) {\n            return object.toString();\n        }\n        if (object instanceof Date) {\n            return \"(D:\" + pad(object.getUTCFullYear(), 4) + pad(object.getUTCMonth() + 1, 2) + pad(object.getUTCDate(), 2) + pad(object.getUTCHours(), 2) + pad(object.getUTCMinutes(), 2) + pad(object.getUTCSeconds(), 2) + \"Z)\";\n        }\n        if (Array.isArray(object)) {\n            var items = Array.from(object).map(function(e) {\n                return PDFObject.convert(e);\n            }).join(\" \");\n            return \"[\" + items + \"]\";\n        }\n        if (({}).toString.call(object) === \"[object Object]\") {\n            var out = [\n                \"<<\"\n            ];\n            for(var key in object){\n                var val = object[key];\n                out.push(\"/\" + key + \" \" + PDFObject.convert(val));\n            }\n            out.push(\">>\");\n            return out.join(\"\\n\");\n        }\n        if (typeof object === \"number\") {\n            return PDFObject.number(object);\n        }\n        return \"\" + object;\n    };\n    PDFObject.number = function number(n) {\n        if (n > -1e21 && n < 1e21) {\n            return Math.round(n * 1e6) / 1e6;\n        }\n        throw new Error(\"unsupported number: \" + n);\n    };\n    return PDFObject;\n}();\nvar PDFObject$1 = PDFObject;\nvar DEFAULT_MARGINS = {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n};\nvar SIZES = {\n    \"4A0\": [\n        4767.87,\n        6740.79\n    ],\n    \"2A0\": [\n        3370.39,\n        4767.87\n    ],\n    A0: [\n        2383.94,\n        3370.39\n    ],\n    A1: [\n        1683.78,\n        2383.94\n    ],\n    A2: [\n        1190.55,\n        1683.78\n    ],\n    A3: [\n        841.89,\n        1190.55\n    ],\n    A4: [\n        595.28,\n        841.89\n    ],\n    A5: [\n        419.53,\n        595.28\n    ],\n    A6: [\n        297.64,\n        419.53\n    ],\n    A7: [\n        209.76,\n        297.64\n    ],\n    A8: [\n        147.4,\n        209.76\n    ],\n    A9: [\n        104.88,\n        147.4\n    ],\n    A10: [\n        73.7,\n        104.88\n    ],\n    B0: [\n        2834.65,\n        4008.19\n    ],\n    B1: [\n        2004.09,\n        2834.65\n    ],\n    B2: [\n        1417.32,\n        2004.09\n    ],\n    B3: [\n        1000.63,\n        1417.32\n    ],\n    B4: [\n        708.66,\n        1000.63\n    ],\n    B5: [\n        498.9,\n        708.66\n    ],\n    B6: [\n        354.33,\n        498.9\n    ],\n    B7: [\n        249.45,\n        354.33\n    ],\n    B8: [\n        175.75,\n        249.45\n    ],\n    B9: [\n        124.72,\n        175.75\n    ],\n    B10: [\n        87.87,\n        124.72\n    ],\n    C0: [\n        2599.37,\n        3676.54\n    ],\n    C1: [\n        1836.85,\n        2599.37\n    ],\n    C2: [\n        1298.27,\n        1836.85\n    ],\n    C3: [\n        918.43,\n        1298.27\n    ],\n    C4: [\n        649.13,\n        918.43\n    ],\n    C5: [\n        459.21,\n        649.13\n    ],\n    C6: [\n        323.15,\n        459.21\n    ],\n    C7: [\n        229.61,\n        323.15\n    ],\n    C8: [\n        161.57,\n        229.61\n    ],\n    C9: [\n        113.39,\n        161.57\n    ],\n    C10: [\n        79.37,\n        113.39\n    ],\n    RA0: [\n        2437.8,\n        3458.27\n    ],\n    RA1: [\n        1729.13,\n        2437.8\n    ],\n    RA2: [\n        1218.9,\n        1729.13\n    ],\n    RA3: [\n        864.57,\n        1218.9\n    ],\n    RA4: [\n        609.45,\n        864.57\n    ],\n    SRA0: [\n        2551.18,\n        3628.35\n    ],\n    SRA1: [\n        1814.17,\n        2551.18\n    ],\n    SRA2: [\n        1275.59,\n        1814.17\n    ],\n    SRA3: [\n        907.09,\n        1275.59\n    ],\n    SRA4: [\n        637.8,\n        907.09\n    ],\n    EXECUTIVE: [\n        521.86,\n        756.0\n    ],\n    FOLIO: [\n        612.0,\n        936.0\n    ],\n    LEGAL: [\n        612.0,\n        1008.0\n    ],\n    LETTER: [\n        612.0,\n        792.0\n    ],\n    TABLOID: [\n        792.0,\n        1224.0\n    ]\n};\nvar PDFPage = /*#__PURE__*/ function() {\n    function PDFPage(document, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        this.document = document;\n        this.size = options.size || \"letter\";\n        this.layout = options.layout || \"portrait\";\n        this.userUnit = options.userUnit || 1.0;\n        this.margins = DEFAULT_MARGINS;\n        // calculate page dimensions\n        var dimensions = Array.isArray(this.size) ? this.size : SIZES[this.size.toUpperCase()];\n        this.width = dimensions[this.layout === \"portrait\" ? 0 : 1];\n        this.height = dimensions[this.layout === \"portrait\" ? 1 : 0];\n        this.content = this.document.ref();\n        // Initialize the Font, XObject, and ExtGState dictionaries\n        this.resources = this.document.ref({\n            ProcSet: [\n                \"PDF\",\n                \"Text\",\n                \"ImageB\",\n                \"ImageC\",\n                \"ImageI\"\n            ]\n        });\n        // The page dictionary\n        this.dictionary = this.document.ref({\n            Type: \"Page\",\n            Parent: this.document._root.data.Pages,\n            MediaBox: [\n                0,\n                0,\n                this.width,\n                this.height\n            ],\n            Contents: this.content,\n            Resources: this.resources,\n            UserUnit: this.userUnit\n        });\n    }\n    // Lazily create these objects\n    var _proto = PDFPage.prototype;\n    _proto.maxY = function maxY() {\n        return this.height;\n    };\n    _proto.write = function write(chunk) {\n        return this.content.write(chunk);\n    };\n    _proto.end = function end() {\n        this.dictionary.end();\n        this.resources.end();\n        return this.content.end();\n    };\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__(PDFPage, [\n        {\n            key: \"fonts\",\n            get: function get() {\n                var data = this.resources.data;\n                return data.Font != null ? data.Font : data.Font = {};\n            }\n        },\n        {\n            key: \"xobjects\",\n            get: function get() {\n                var data = this.resources.data;\n                return data.XObject != null ? data.XObject : data.XObject = {};\n            }\n        },\n        {\n            key: \"ext_gstates\",\n            get: function get() {\n                var data = this.resources.data;\n                return data.ExtGState != null ? data.ExtGState : data.ExtGState = {};\n            }\n        },\n        {\n            key: \"patterns\",\n            get: function get() {\n                var data = this.resources.data;\n                return data.Pattern != null ? data.Pattern : data.Pattern = {};\n            }\n        },\n        {\n            key: \"colorSpaces\",\n            get: function get() {\n                var data = this.resources.data;\n                return data.ColorSpace || (data.ColorSpace = {});\n            }\n        },\n        {\n            key: \"annotations\",\n            get: function get() {\n                var data = this.dictionary.data;\n                return data.Annots != null ? data.Annots : data.Annots = [];\n            }\n        },\n        {\n            key: \"structParentTreeKey\",\n            get: function get() {\n                var data = this.dictionary.data;\n                return data.StructParents != null ? data.StructParents : data.StructParents = this.document.createStructParentTreeNextKey();\n            }\n        }\n    ]);\n    return PDFPage;\n}();\n/* eslint-disable no-prototype-builtins */ var wordArrayToBuffer = function wordArrayToBuffer(wordArray) {\n    var byteArray = [];\n    for(var i = 0; i < wordArray.sigBytes; i++){\n        byteArray.push(wordArray.words[Math.floor(i / 4)] >> 8 * (3 - i % 4) & 0xff);\n    }\n    return Buffer.from(byteArray);\n};\nvar PDFSecurity = /*#__PURE__*/ function() {\n    function PDFSecurity() {}\n    PDFSecurity.generateFileID = function generateFileID(info) {\n        if (info === void 0) {\n            info = {};\n        }\n        var infoStr = info.CreationDate.getTime() + \"\\n\";\n        for(var key in info){\n            if (!info.hasOwnProperty(key)) continue;\n            infoStr += key + \": \" + info[key].valueOf() + \"\\n\";\n        }\n        return wordArrayToBuffer(crypto_js_md5_js__WEBPACK_IMPORTED_MODULE_6__(infoStr));\n    };\n    return PDFSecurity;\n}();\nvar number$2 = PDFObject$1.number;\nvar PDFGradient$1 = /*#__PURE__*/ function() {\n    function PDFGradient(doc) {\n        this.doc = doc;\n        this.stops = [];\n        this.embedded = false;\n        this.transform = [\n            1,\n            0,\n            0,\n            1,\n            0,\n            0\n        ];\n    }\n    var _proto = PDFGradient.prototype;\n    _proto.stop = function stop(pos, color, opacity) {\n        if (opacity == null) {\n            opacity = 1;\n        }\n        color = this.doc._normalizeColor(color);\n        if (this.stops.length === 0) {\n            if (color.length === 3) {\n                this._colorSpace = \"DeviceRGB\";\n            } else if (color.length === 4) {\n                this._colorSpace = \"DeviceCMYK\";\n            } else if (color.length === 1) {\n                this._colorSpace = \"DeviceGray\";\n            } else {\n                throw new Error(\"Unknown color space\");\n            }\n        } else if (this._colorSpace === \"DeviceRGB\" && color.length !== 3 || this._colorSpace === \"DeviceCMYK\" && color.length !== 4 || this._colorSpace === \"DeviceGray\" && color.length !== 1) {\n            throw new Error(\"All gradient stops must use the same color space\");\n        }\n        opacity = Math.max(0, Math.min(1, opacity));\n        this.stops.push([\n            pos,\n            color,\n            opacity\n        ]);\n        return this;\n    };\n    _proto.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\n        this.transform = [\n            m11,\n            m12,\n            m21,\n            m22,\n            dx,\n            dy\n        ];\n        return this;\n    };\n    _proto.embed = function embed(m) {\n        var fn;\n        var stopsLength = this.stops.length;\n        if (stopsLength === 0) {\n            return;\n        }\n        this.embedded = true;\n        this.matrix = m;\n        // if the last stop comes before 100%, add a copy at 100%\n        var last = this.stops[stopsLength - 1];\n        if (last[0] < 1) {\n            this.stops.push([\n                1,\n                last[1],\n                last[2]\n            ]);\n        }\n        var bounds = [];\n        var encode = [];\n        var stops = [];\n        for(var i = 0; i < stopsLength - 1; i++){\n            encode.push(0, 1);\n            if (i + 2 !== stopsLength) {\n                bounds.push(this.stops[i + 1][0]);\n            }\n            fn = this.doc.ref({\n                FunctionType: 2,\n                Domain: [\n                    0,\n                    1\n                ],\n                C0: this.stops[i + 0][1],\n                C1: this.stops[i + 1][1],\n                N: 1\n            });\n            stops.push(fn);\n            fn.end();\n        }\n        // if there are only two stops, we don't need a stitching function\n        if (stopsLength === 1) {\n            fn = stops[0];\n        } else {\n            fn = this.doc.ref({\n                FunctionType: 3,\n                // stitching function\n                Domain: [\n                    0,\n                    1\n                ],\n                Functions: stops,\n                Bounds: bounds,\n                Encode: encode\n            });\n            fn.end();\n        }\n        this.id = \"Sh\" + ++this.doc._gradCount;\n        var shader = this.shader(fn);\n        shader.end();\n        var pattern = this.doc.ref({\n            Type: \"Pattern\",\n            PatternType: 2,\n            Shading: shader,\n            Matrix: this.matrix.map(number$2)\n        });\n        pattern.end();\n        if (this.stops.some(function(stop) {\n            return stop[2] < 1;\n        })) {\n            var grad = this.opacityGradient();\n            grad._colorSpace = \"DeviceGray\";\n            for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(this.stops), _step; !(_step = _iterator()).done;){\n                var stop = _step.value;\n                grad.stop(stop[0], [\n                    stop[2]\n                ]);\n            }\n            grad = grad.embed(this.matrix);\n            var pageBBox = [\n                0,\n                0,\n                this.doc.page.width,\n                this.doc.page.height\n            ];\n            var form = this.doc.ref({\n                Type: \"XObject\",\n                Subtype: \"Form\",\n                FormType: 1,\n                BBox: pageBBox,\n                Group: {\n                    Type: \"Group\",\n                    S: \"Transparency\",\n                    CS: \"DeviceGray\"\n                },\n                Resources: {\n                    ProcSet: [\n                        \"PDF\",\n                        \"Text\",\n                        \"ImageB\",\n                        \"ImageC\",\n                        \"ImageI\"\n                    ],\n                    Pattern: {\n                        Sh1: grad\n                    }\n                }\n            });\n            form.write(\"/Pattern cs /Sh1 scn\");\n            form.end(pageBBox.join(\" \") + \" re f\");\n            var gstate = this.doc.ref({\n                Type: \"ExtGState\",\n                SMask: {\n                    Type: \"Mask\",\n                    S: \"Luminosity\",\n                    G: form\n                }\n            });\n            gstate.end();\n            var opacityPattern = this.doc.ref({\n                Type: \"Pattern\",\n                PatternType: 1,\n                PaintType: 1,\n                TilingType: 2,\n                BBox: pageBBox,\n                XStep: pageBBox[2],\n                YStep: pageBBox[3],\n                Resources: {\n                    ProcSet: [\n                        \"PDF\",\n                        \"Text\",\n                        \"ImageB\",\n                        \"ImageC\",\n                        \"ImageI\"\n                    ],\n                    Pattern: {\n                        Sh1: pattern\n                    },\n                    ExtGState: {\n                        Gs1: gstate\n                    }\n                }\n            });\n            opacityPattern.write(\"/Gs1 gs /Pattern cs /Sh1 scn\");\n            opacityPattern.end(pageBBox.join(\" \") + \" re f\");\n            this.doc.page.patterns[this.id] = opacityPattern;\n        } else {\n            this.doc.page.patterns[this.id] = pattern;\n        }\n        return pattern;\n    };\n    _proto.apply = function apply(stroke) {\n        // apply gradient transform to existing document ctm\n        var _this$doc$_ctm = this.doc._ctm, m0 = _this$doc$_ctm[0], m1 = _this$doc$_ctm[1], m2 = _this$doc$_ctm[2], m3 = _this$doc$_ctm[3], m4 = _this$doc$_ctm[4], m5 = _this$doc$_ctm[5];\n        var _this$transform = this.transform, m11 = _this$transform[0], m12 = _this$transform[1], m21 = _this$transform[2], m22 = _this$transform[3], dx = _this$transform[4], dy = _this$transform[5];\n        var m = [\n            m0 * m11 + m2 * m12,\n            m1 * m11 + m3 * m12,\n            m0 * m21 + m2 * m22,\n            m1 * m21 + m3 * m22,\n            m0 * dx + m2 * dy + m4,\n            m1 * dx + m3 * dy + m5\n        ];\n        if (!this.embedded || m.join(\" \") !== this.matrix.join(\" \")) {\n            this.embed(m);\n        }\n        this.doc._setColorSpace(\"Pattern\", stroke);\n        var op = stroke ? \"SCN\" : \"scn\";\n        return this.doc.addContent(\"/\" + this.id + \" \" + op);\n    };\n    return PDFGradient;\n}();\nvar PDFLinearGradient$1 = /*#__PURE__*/ function(_PDFGradient) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFLinearGradient, _PDFGradient);\n    function PDFLinearGradient(doc, x1, y1, x2, y2) {\n        var _this;\n        _this = _PDFGradient.call(this, doc) || this;\n        _this.x1 = x1;\n        _this.y1 = y1;\n        _this.x2 = x2;\n        _this.y2 = y2;\n        return _this;\n    }\n    var _proto2 = PDFLinearGradient.prototype;\n    _proto2.shader = function shader(fn) {\n        return this.doc.ref({\n            ShadingType: 2,\n            ColorSpace: this._colorSpace,\n            Coords: [\n                this.x1,\n                this.y1,\n                this.x2,\n                this.y2\n            ],\n            Function: fn,\n            Extend: [\n                true,\n                true\n            ]\n        });\n    };\n    _proto2.opacityGradient = function opacityGradient() {\n        return new PDFLinearGradient(this.doc, this.x1, this.y1, this.x2, this.y2);\n    };\n    return PDFLinearGradient;\n}(PDFGradient$1);\nvar PDFRadialGradient$1 = /*#__PURE__*/ function(_PDFGradient2) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFRadialGradient, _PDFGradient2);\n    function PDFRadialGradient(doc, x1, y1, r1, x2, y2, r2) {\n        var _this2;\n        _this2 = _PDFGradient2.call(this, doc) || this;\n        _this2.doc = doc;\n        _this2.x1 = x1;\n        _this2.y1 = y1;\n        _this2.r1 = r1;\n        _this2.x2 = x2;\n        _this2.y2 = y2;\n        _this2.r2 = r2;\n        return _this2;\n    }\n    var _proto3 = PDFRadialGradient.prototype;\n    _proto3.shader = function shader(fn) {\n        return this.doc.ref({\n            ShadingType: 3,\n            ColorSpace: this._colorSpace,\n            Coords: [\n                this.x1,\n                this.y1,\n                this.r1,\n                this.x2,\n                this.y2,\n                this.r2\n            ],\n            Function: fn,\n            Extend: [\n                true,\n                true\n            ]\n        });\n    };\n    _proto3.opacityGradient = function opacityGradient() {\n        return new PDFRadialGradient(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);\n    };\n    return PDFRadialGradient;\n}(PDFGradient$1);\nvar Gradient = {\n    PDFGradient: PDFGradient$1,\n    PDFLinearGradient: PDFLinearGradient$1,\n    PDFRadialGradient: PDFRadialGradient$1\n};\n/* eslint-disable operator-assignment */ /*\nPDF tiling pattern support. Uncolored only.\n */ var underlyingColorSpaces = [\n    \"DeviceCMYK\",\n    \"DeviceRGB\"\n];\nvar PDFTilingPattern$1 = /*#__PURE__*/ function() {\n    function PDFTilingPattern(doc, bBox, xStep, yStep, stream) {\n        this.doc = doc;\n        this.bBox = bBox;\n        this.xStep = xStep;\n        this.yStep = yStep;\n        this.stream = stream;\n    }\n    var _proto = PDFTilingPattern.prototype;\n    _proto.createPattern = function createPattern() {\n        // no resources needed for our current usage\n        // required entry\n        var resources = this.doc.ref();\n        resources.end();\n        // apply default transform matrix (flipped in the default doc._ctm)\n        // see document.js & gradient.js\n        var _this$doc$_ctm = this.doc._ctm, m0 = _this$doc$_ctm[0], m1 = _this$doc$_ctm[1], m2 = _this$doc$_ctm[2], m3 = _this$doc$_ctm[3], m4 = _this$doc$_ctm[4], m5 = _this$doc$_ctm[5];\n        var m11 = 1, m12 = 0, m21 = 0, m22 = 1, dx = 0, dy = 0;\n        var m = [\n            m0 * m11 + m2 * m12,\n            m1 * m11 + m3 * m12,\n            m0 * m21 + m2 * m22,\n            m1 * m21 + m3 * m22,\n            m0 * dx + m2 * dy + m4,\n            m1 * dx + m3 * dy + m5\n        ];\n        var pattern = this.doc.ref({\n            Type: \"Pattern\",\n            PatternType: 1,\n            // tiling\n            PaintType: 2,\n            // 1-colored, 2-uncolored\n            TilingType: 2,\n            // 2-no distortion\n            BBox: this.bBox,\n            XStep: this.xStep,\n            YStep: this.yStep,\n            Matrix: m.map(function(v) {\n                return +v.toFixed(5);\n            }),\n            Resources: resources\n        });\n        pattern.end(this.stream);\n        return pattern;\n    };\n    _proto.embedPatternColorSpaces = function embedPatternColorSpaces() {\n        var _this = this;\n        // map each pattern to an underlying color space\n        // and embed on each page\n        underlyingColorSpaces.forEach(function(csName) {\n            var csId = _this.getPatternColorSpaceId(csName);\n            if (_this.doc.page.colorSpaces[csId]) return;\n            var cs = _this.doc.ref([\n                \"Pattern\",\n                csName\n            ]);\n            cs.end();\n            _this.doc.page.colorSpaces[csId] = cs;\n        });\n    };\n    _proto.getPatternColorSpaceId = function getPatternColorSpaceId(underlyingColorspace) {\n        return \"CsP\" + underlyingColorspace;\n    };\n    _proto.embed = function embed() {\n        if (!this.id) {\n            this.doc._patternCount = this.doc._patternCount + 1;\n            this.id = \"P\" + this.doc._patternCount;\n            this.pattern = this.createPattern();\n        }\n        // patterns are embedded in each page\n        if (!this.doc.page.patterns[this.id]) {\n            this.doc.page.patterns[this.id] = this.pattern;\n        }\n    };\n    _proto.apply = function apply(stroke, patternColor) {\n        // do any embedding/creating that might be needed\n        this.embedPatternColorSpaces();\n        this.embed();\n        var normalizedColor = this.doc._normalizeColor(patternColor);\n        if (!normalizedColor) throw Error(\"invalid pattern color. (value: \" + patternColor + \")\");\n        // select one of the pattern color spaces\n        var csId = this.getPatternColorSpaceId(this.doc._getColorSpace(normalizedColor));\n        this.doc._setColorSpace(csId, stroke);\n        // stroke/fill using the pattern and color (in the above underlying color space)\n        var op = stroke ? \"SCN\" : \"scn\";\n        return this.doc.addContent(normalizedColor.join(\" \") + \" /\" + this.id + \" \" + op);\n    };\n    return PDFTilingPattern;\n}();\nvar pattern = {\n    PDFTilingPattern: PDFTilingPattern$1\n};\nvar PDFGradient = Gradient.PDFGradient, PDFLinearGradient = Gradient.PDFLinearGradient, PDFRadialGradient = Gradient.PDFRadialGradient;\nvar PDFTilingPattern = pattern.PDFTilingPattern;\nvar ColorMixin = {\n    initColor: function initColor() {\n        // The opacity dictionaries\n        this._opacityRegistry = {};\n        this._opacityCount = 0;\n        this._patternCount = 0;\n        return this._gradCount = 0;\n    },\n    _normalizeColor: function _normalizeColor(color) {\n        if (typeof color === \"string\") {\n            if (color.charAt(0) === \"#\") {\n                if (color.length === 4) {\n                    color = color.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, \"#$1$1$2$2$3$3\");\n                }\n                var hex = parseInt(color.slice(1), 16);\n                color = [\n                    hex >> 16,\n                    hex >> 8 & 0xff,\n                    hex & 0xff\n                ];\n            } else if (namedColors[color]) {\n                color = namedColors[color];\n            }\n        }\n        if (Array.isArray(color)) {\n            // RGB\n            if (color.length === 3) {\n                color = color.map(function(part) {\n                    return part / 255;\n                });\n            // CMYK\n            } else if (color.length === 4) {\n                color = color.map(function(part) {\n                    return part / 100;\n                });\n            }\n            return color;\n        }\n        return null;\n    },\n    _setColor: function _setColor(color, stroke) {\n        if (color instanceof PDFGradient) {\n            color.apply(stroke);\n            return true;\n        // see if tiling pattern, decode & apply it it\n        } else if (Array.isArray(color) && color[0] instanceof PDFTilingPattern) {\n            color[0].apply(stroke, color[1]);\n            return true;\n        }\n        // any other case should be a normal color and not a pattern\n        return this._setColorCore(color, stroke);\n    },\n    _setColorCore: function _setColorCore(color, stroke) {\n        color = this._normalizeColor(color);\n        if (!color) {\n            return false;\n        }\n        var op = stroke ? \"SCN\" : \"scn\";\n        var space = this._getColorSpace(color);\n        this._setColorSpace(space, stroke);\n        color = color.join(\" \");\n        this.addContent(color + \" \" + op);\n        return true;\n    },\n    _setColorSpace: function _setColorSpace(space, stroke) {\n        var op = stroke ? \"CS\" : \"cs\";\n        return this.addContent(\"/\" + space + \" \" + op);\n    },\n    _getColorSpace: function _getColorSpace(color) {\n        return color.length === 4 ? \"DeviceCMYK\" : \"DeviceRGB\";\n    },\n    fillColor: function fillColor(color, opacity) {\n        var set = this._setColor(color, false);\n        if (set) {\n            this.fillOpacity(opacity);\n        }\n        // save this for text wrapper, which needs to reset\n        // the fill color on new pages\n        this._fillColor = [\n            color,\n            opacity\n        ];\n        return this;\n    },\n    strokeColor: function strokeColor(color, opacity) {\n        var set = this._setColor(color, true);\n        if (set) {\n            this.strokeOpacity(opacity);\n        }\n        return this;\n    },\n    opacity: function opacity(_opacity) {\n        this._doOpacity(_opacity, _opacity);\n        return this;\n    },\n    fillOpacity: function fillOpacity(opacity) {\n        this._doOpacity(opacity, null);\n        return this;\n    },\n    strokeOpacity: function strokeOpacity(opacity) {\n        this._doOpacity(null, opacity);\n        return this;\n    },\n    _doOpacity: function _doOpacity(fillOpacity, strokeOpacity) {\n        var dictionary, name;\n        if (fillOpacity == null && strokeOpacity == null) {\n            return;\n        }\n        if (fillOpacity != null) {\n            fillOpacity = Math.max(0, Math.min(1, fillOpacity));\n        }\n        if (strokeOpacity != null) {\n            strokeOpacity = Math.max(0, Math.min(1, strokeOpacity));\n        }\n        var key = fillOpacity + \"_\" + strokeOpacity;\n        if (this._opacityRegistry[key]) {\n            var _this$_opacityRegistr = this._opacityRegistry[key];\n            dictionary = _this$_opacityRegistr[0];\n            name = _this$_opacityRegistr[1];\n        } else {\n            dictionary = {\n                Type: \"ExtGState\"\n            };\n            if (fillOpacity != null) {\n                dictionary.ca = fillOpacity;\n            }\n            if (strokeOpacity != null) {\n                dictionary.CA = strokeOpacity;\n            }\n            dictionary = this.ref(dictionary);\n            dictionary.end();\n            var id = ++this._opacityCount;\n            name = \"Gs\" + id;\n            this._opacityRegistry[key] = [\n                dictionary,\n                name\n            ];\n        }\n        this.page.ext_gstates[name] = dictionary;\n        return this.addContent(\"/\" + name + \" gs\");\n    },\n    linearGradient: function linearGradient(x1, y1, x2, y2) {\n        return new PDFLinearGradient(this, x1, y1, x2, y2);\n    },\n    radialGradient: function radialGradient(x1, y1, r1, x2, y2, r2) {\n        return new PDFRadialGradient(this, x1, y1, r1, x2, y2, r2);\n    },\n    pattern: function pattern(bbox, xStep, yStep, stream) {\n        return new PDFTilingPattern(this, bbox, xStep, yStep, stream);\n    }\n};\nvar namedColors = {\n    aliceblue: [\n        240,\n        248,\n        255\n    ],\n    antiquewhite: [\n        250,\n        235,\n        215\n    ],\n    aqua: [\n        0,\n        255,\n        255\n    ],\n    aquamarine: [\n        127,\n        255,\n        212\n    ],\n    azure: [\n        240,\n        255,\n        255\n    ],\n    beige: [\n        245,\n        245,\n        220\n    ],\n    bisque: [\n        255,\n        228,\n        196\n    ],\n    black: [\n        0,\n        0,\n        0\n    ],\n    blanchedalmond: [\n        255,\n        235,\n        205\n    ],\n    blue: [\n        0,\n        0,\n        255\n    ],\n    blueviolet: [\n        138,\n        43,\n        226\n    ],\n    brown: [\n        165,\n        42,\n        42\n    ],\n    burlywood: [\n        222,\n        184,\n        135\n    ],\n    cadetblue: [\n        95,\n        158,\n        160\n    ],\n    chartreuse: [\n        127,\n        255,\n        0\n    ],\n    chocolate: [\n        210,\n        105,\n        30\n    ],\n    coral: [\n        255,\n        127,\n        80\n    ],\n    cornflowerblue: [\n        100,\n        149,\n        237\n    ],\n    cornsilk: [\n        255,\n        248,\n        220\n    ],\n    crimson: [\n        220,\n        20,\n        60\n    ],\n    cyan: [\n        0,\n        255,\n        255\n    ],\n    darkblue: [\n        0,\n        0,\n        139\n    ],\n    darkcyan: [\n        0,\n        139,\n        139\n    ],\n    darkgoldenrod: [\n        184,\n        134,\n        11\n    ],\n    darkgray: [\n        169,\n        169,\n        169\n    ],\n    darkgreen: [\n        0,\n        100,\n        0\n    ],\n    darkgrey: [\n        169,\n        169,\n        169\n    ],\n    darkkhaki: [\n        189,\n        183,\n        107\n    ],\n    darkmagenta: [\n        139,\n        0,\n        139\n    ],\n    darkolivegreen: [\n        85,\n        107,\n        47\n    ],\n    darkorange: [\n        255,\n        140,\n        0\n    ],\n    darkorchid: [\n        153,\n        50,\n        204\n    ],\n    darkred: [\n        139,\n        0,\n        0\n    ],\n    darksalmon: [\n        233,\n        150,\n        122\n    ],\n    darkseagreen: [\n        143,\n        188,\n        143\n    ],\n    darkslateblue: [\n        72,\n        61,\n        139\n    ],\n    darkslategray: [\n        47,\n        79,\n        79\n    ],\n    darkslategrey: [\n        47,\n        79,\n        79\n    ],\n    darkturquoise: [\n        0,\n        206,\n        209\n    ],\n    darkviolet: [\n        148,\n        0,\n        211\n    ],\n    deeppink: [\n        255,\n        20,\n        147\n    ],\n    deepskyblue: [\n        0,\n        191,\n        255\n    ],\n    dimgray: [\n        105,\n        105,\n        105\n    ],\n    dimgrey: [\n        105,\n        105,\n        105\n    ],\n    dodgerblue: [\n        30,\n        144,\n        255\n    ],\n    firebrick: [\n        178,\n        34,\n        34\n    ],\n    floralwhite: [\n        255,\n        250,\n        240\n    ],\n    forestgreen: [\n        34,\n        139,\n        34\n    ],\n    fuchsia: [\n        255,\n        0,\n        255\n    ],\n    gainsboro: [\n        220,\n        220,\n        220\n    ],\n    ghostwhite: [\n        248,\n        248,\n        255\n    ],\n    gold: [\n        255,\n        215,\n        0\n    ],\n    goldenrod: [\n        218,\n        165,\n        32\n    ],\n    gray: [\n        128,\n        128,\n        128\n    ],\n    grey: [\n        128,\n        128,\n        128\n    ],\n    green: [\n        0,\n        128,\n        0\n    ],\n    greenyellow: [\n        173,\n        255,\n        47\n    ],\n    honeydew: [\n        240,\n        255,\n        240\n    ],\n    hotpink: [\n        255,\n        105,\n        180\n    ],\n    indianred: [\n        205,\n        92,\n        92\n    ],\n    indigo: [\n        75,\n        0,\n        130\n    ],\n    ivory: [\n        255,\n        255,\n        240\n    ],\n    khaki: [\n        240,\n        230,\n        140\n    ],\n    lavender: [\n        230,\n        230,\n        250\n    ],\n    lavenderblush: [\n        255,\n        240,\n        245\n    ],\n    lawngreen: [\n        124,\n        252,\n        0\n    ],\n    lemonchiffon: [\n        255,\n        250,\n        205\n    ],\n    lightblue: [\n        173,\n        216,\n        230\n    ],\n    lightcoral: [\n        240,\n        128,\n        128\n    ],\n    lightcyan: [\n        224,\n        255,\n        255\n    ],\n    lightgoldenrodyellow: [\n        250,\n        250,\n        210\n    ],\n    lightgray: [\n        211,\n        211,\n        211\n    ],\n    lightgreen: [\n        144,\n        238,\n        144\n    ],\n    lightgrey: [\n        211,\n        211,\n        211\n    ],\n    lightpink: [\n        255,\n        182,\n        193\n    ],\n    lightsalmon: [\n        255,\n        160,\n        122\n    ],\n    lightseagreen: [\n        32,\n        178,\n        170\n    ],\n    lightskyblue: [\n        135,\n        206,\n        250\n    ],\n    lightslategray: [\n        119,\n        136,\n        153\n    ],\n    lightslategrey: [\n        119,\n        136,\n        153\n    ],\n    lightsteelblue: [\n        176,\n        196,\n        222\n    ],\n    lightyellow: [\n        255,\n        255,\n        224\n    ],\n    lime: [\n        0,\n        255,\n        0\n    ],\n    limegreen: [\n        50,\n        205,\n        50\n    ],\n    linen: [\n        250,\n        240,\n        230\n    ],\n    magenta: [\n        255,\n        0,\n        255\n    ],\n    maroon: [\n        128,\n        0,\n        0\n    ],\n    mediumaquamarine: [\n        102,\n        205,\n        170\n    ],\n    mediumblue: [\n        0,\n        0,\n        205\n    ],\n    mediumorchid: [\n        186,\n        85,\n        211\n    ],\n    mediumpurple: [\n        147,\n        112,\n        219\n    ],\n    mediumseagreen: [\n        60,\n        179,\n        113\n    ],\n    mediumslateblue: [\n        123,\n        104,\n        238\n    ],\n    mediumspringgreen: [\n        0,\n        250,\n        154\n    ],\n    mediumturquoise: [\n        72,\n        209,\n        204\n    ],\n    mediumvioletred: [\n        199,\n        21,\n        133\n    ],\n    midnightblue: [\n        25,\n        25,\n        112\n    ],\n    mintcream: [\n        245,\n        255,\n        250\n    ],\n    mistyrose: [\n        255,\n        228,\n        225\n    ],\n    moccasin: [\n        255,\n        228,\n        181\n    ],\n    navajowhite: [\n        255,\n        222,\n        173\n    ],\n    navy: [\n        0,\n        0,\n        128\n    ],\n    oldlace: [\n        253,\n        245,\n        230\n    ],\n    olive: [\n        128,\n        128,\n        0\n    ],\n    olivedrab: [\n        107,\n        142,\n        35\n    ],\n    orange: [\n        255,\n        165,\n        0\n    ],\n    orangered: [\n        255,\n        69,\n        0\n    ],\n    orchid: [\n        218,\n        112,\n        214\n    ],\n    palegoldenrod: [\n        238,\n        232,\n        170\n    ],\n    palegreen: [\n        152,\n        251,\n        152\n    ],\n    paleturquoise: [\n        175,\n        238,\n        238\n    ],\n    palevioletred: [\n        219,\n        112,\n        147\n    ],\n    papayawhip: [\n        255,\n        239,\n        213\n    ],\n    peachpuff: [\n        255,\n        218,\n        185\n    ],\n    peru: [\n        205,\n        133,\n        63\n    ],\n    pink: [\n        255,\n        192,\n        203\n    ],\n    plum: [\n        221,\n        160,\n        221\n    ],\n    powderblue: [\n        176,\n        224,\n        230\n    ],\n    purple: [\n        128,\n        0,\n        128\n    ],\n    red: [\n        255,\n        0,\n        0\n    ],\n    rosybrown: [\n        188,\n        143,\n        143\n    ],\n    royalblue: [\n        65,\n        105,\n        225\n    ],\n    saddlebrown: [\n        139,\n        69,\n        19\n    ],\n    salmon: [\n        250,\n        128,\n        114\n    ],\n    sandybrown: [\n        244,\n        164,\n        96\n    ],\n    seagreen: [\n        46,\n        139,\n        87\n    ],\n    seashell: [\n        255,\n        245,\n        238\n    ],\n    sienna: [\n        160,\n        82,\n        45\n    ],\n    silver: [\n        192,\n        192,\n        192\n    ],\n    skyblue: [\n        135,\n        206,\n        235\n    ],\n    slateblue: [\n        106,\n        90,\n        205\n    ],\n    slategray: [\n        112,\n        128,\n        144\n    ],\n    slategrey: [\n        112,\n        128,\n        144\n    ],\n    snow: [\n        255,\n        250,\n        250\n    ],\n    springgreen: [\n        0,\n        255,\n        127\n    ],\n    steelblue: [\n        70,\n        130,\n        180\n    ],\n    tan: [\n        210,\n        180,\n        140\n    ],\n    teal: [\n        0,\n        128,\n        128\n    ],\n    thistle: [\n        216,\n        191,\n        216\n    ],\n    tomato: [\n        255,\n        99,\n        71\n    ],\n    turquoise: [\n        64,\n        224,\n        208\n    ],\n    violet: [\n        238,\n        130,\n        238\n    ],\n    wheat: [\n        245,\n        222,\n        179\n    ],\n    white: [\n        255,\n        255,\n        255\n    ],\n    whitesmoke: [\n        245,\n        245,\n        245\n    ],\n    yellow: [\n        255,\n        255,\n        0\n    ],\n    yellowgreen: [\n        154,\n        205,\n        50\n    ]\n};\n/* eslint-disable no-lonely-if */ var cx, cy, px, py, sx, sy;\ncx = cy = px = py = sx = sy = 0;\n// parseDataPath copy pasted from svgo\n// https://github.com/svg/svgo/blob/e4918ccdd1a2b5831defe0f00c1286744b479448/lib/path.js\n/**\n * @typedef {'M' | 'm' | 'Z' | 'z' | 'L' | 'l' | 'H' | 'h' | 'V' | 'v' | 'C' | 'c' | 'S' | 's' | 'Q' | 'q' | 'T' | 't' | 'A' | 'a'} PathDataCommand\n */ /**\n * @typedef {Object} PathDataItem\n * @property {PathDataCommand} command\n * @property {number[]} args\n */ var argsCountPerCommand = {\n    M: 2,\n    m: 2,\n    Z: 0,\n    z: 0,\n    L: 2,\n    l: 2,\n    H: 1,\n    h: 1,\n    V: 1,\n    v: 1,\n    C: 6,\n    c: 6,\n    S: 4,\n    s: 4,\n    Q: 4,\n    q: 4,\n    T: 2,\n    t: 2,\n    A: 7,\n    a: 7\n};\n/**\n * @type {(c: string) => c is PathDataCommand}\n */ var isCommand = function isCommand(c) {\n    return c in argsCountPerCommand;\n};\n/**\n * @type {(c: string) => boolean}\n */ var isWsp = function isWsp(c) {\n    var codePoint = c.codePointAt(0);\n    return codePoint === 0x20 || codePoint === 0x9 || codePoint === 0xd || codePoint === 0xa;\n};\n/**\n * @type {(c: string) => boolean}\n */ var isDigit = function isDigit(c) {\n    var codePoint = c.codePointAt(0);\n    if (codePoint == null) {\n        return false;\n    }\n    return 48 <= codePoint && codePoint <= 57;\n};\n/**\n * @typedef {'none' | 'sign' | 'whole' | 'decimal_point' | 'decimal' | 'e' | 'exponent_sign' | 'exponent'} ReadNumberState\n */ /**\n * @type {(string: string, cursor: number) => [number, number | null]}\n */ var readNumber = function readNumber(string, cursor) {\n    var i = cursor;\n    var value = \"\";\n    var state = /** @type {ReadNumberState} */ \"none\";\n    for(; i < string.length; i += 1){\n        var c = string[i];\n        if (c === \"+\" || c === \"-\") {\n            if (state === \"none\") {\n                state = \"sign\";\n                value += c;\n                continue;\n            }\n            if (state === \"e\") {\n                state = \"exponent_sign\";\n                value += c;\n                continue;\n            }\n        }\n        if (isDigit(c)) {\n            if (state === \"none\" || state === \"sign\" || state === \"whole\") {\n                state = \"whole\";\n                value += c;\n                continue;\n            }\n            if (state === \"decimal_point\" || state === \"decimal\") {\n                state = \"decimal\";\n                value += c;\n                continue;\n            }\n            if (state === \"e\" || state === \"exponent_sign\" || state === \"exponent\") {\n                state = \"exponent\";\n                value += c;\n                continue;\n            }\n        }\n        if (c === \".\") {\n            if (state === \"none\" || state === \"sign\" || state === \"whole\") {\n                state = \"decimal_point\";\n                value += c;\n                continue;\n            }\n        }\n        if (c === \"E\" || c === \"e\") {\n            if (state === \"whole\" || state === \"decimal_point\" || state === \"decimal\") {\n                state = \"e\";\n                value += c;\n                continue;\n            }\n        }\n        break;\n    }\n    var number = Number.parseFloat(value);\n    if (Number.isNaN(number)) {\n        return [\n            cursor,\n            null\n        ];\n    } else {\n        // step back to delegate iteration to parent loop\n        return [\n            i - 1,\n            number\n        ];\n    }\n};\n/**\n * @type {(string: string) => Array<PathDataItem>}\n */ var parsePathData = function parsePathData(string) {\n    /**\n   * @type {Array<PathDataItem>}\n   */ var pathData = [];\n    /**\n   * @type {null | PathDataCommand}\n   */ var command = null;\n    var args = /** @type {number[]} */ [];\n    var argsCount = 0;\n    var canHaveComma = false;\n    var hadComma = false;\n    for(var i = 0; i < string.length; i += 1){\n        var c = string.charAt(i);\n        if (isWsp(c)) {\n            continue;\n        }\n        // allow comma only between arguments\n        if (canHaveComma && c === \",\") {\n            if (hadComma) {\n                break;\n            }\n            hadComma = true;\n            continue;\n        }\n        if (isCommand(c)) {\n            if (hadComma) {\n                return pathData;\n            }\n            if (command == null) {\n                // moveto should be leading command\n                if (c !== \"M\" && c !== \"m\") {\n                    return pathData;\n                }\n            } else {\n                // stop if previous command arguments are not flushed\n                if (args.length !== 0) {\n                    return pathData;\n                }\n            }\n            command = c;\n            args = [];\n            argsCount = argsCountPerCommand[command];\n            canHaveComma = false;\n            // flush command without arguments\n            if (argsCount === 0) {\n                pathData.push({\n                    command: command,\n                    args: args\n                });\n            }\n            continue;\n        }\n        // avoid parsing arguments if no command detected\n        if (command == null) {\n            return pathData;\n        }\n        // read next argument\n        var newCursor = i;\n        var number = null;\n        if (command === \"A\" || command === \"a\") {\n            var position = args.length;\n            if (position === 0 || position === 1) {\n                // allow only positive number without sign as first two arguments\n                if (c !== \"+\" && c !== \"-\") {\n                    var _readNumber = readNumber(string, i);\n                    newCursor = _readNumber[0];\n                    number = _readNumber[1];\n                }\n            }\n            if (position === 2 || position === 5 || position === 6) {\n                var _readNumber2 = readNumber(string, i);\n                newCursor = _readNumber2[0];\n                number = _readNumber2[1];\n            }\n            if (position === 3 || position === 4) {\n                // read flags\n                if (c === \"0\") {\n                    number = 0;\n                }\n                if (c === \"1\") {\n                    number = 1;\n                }\n            }\n        } else {\n            var _readNumber3 = readNumber(string, i);\n            newCursor = _readNumber3[0];\n            number = _readNumber3[1];\n        }\n        if (number == null) {\n            return pathData;\n        }\n        args.push(number);\n        canHaveComma = true;\n        hadComma = false;\n        i = newCursor;\n        // flush arguments when necessary count is reached\n        if (args.length === argsCount) {\n            pathData.push({\n                command: command,\n                args: args\n            });\n            // subsequent moveto coordinates are threated as implicit lineto commands\n            if (command === \"M\") {\n                command = \"L\";\n            }\n            if (command === \"m\") {\n                command = \"l\";\n            }\n            args = [];\n        }\n    }\n    return pathData;\n};\nvar _apply = function apply(commands, doc) {\n    // current point, control point, and subpath starting point\n    cx = cy = px = py = sx = sy = 0;\n    // run the commands\n    for(var i = 0; i < commands.length; i++){\n        var _commands$i = commands[i], command = _commands$i.command, args = _commands$i.args;\n        if (typeof runners[command] === \"function\") {\n            runners[command](doc, args);\n        }\n    }\n};\nvar runners = {\n    M: function M(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n    },\n    m: function m(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return doc.moveTo(cx, cy);\n    },\n    C: function C(doc, a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return doc.bezierCurveTo.apply(doc, a);\n    },\n    c: function c(doc, a) {\n        doc.bezierCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        return cy += a[5];\n    },\n    S: function S(doc, a) {\n        if (px === null) {\n            px = cx;\n            py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        return cy = a[3];\n    },\n    s: function s(doc, a) {\n        if (px === null) {\n            px = cx;\n            py = cy;\n        }\n        doc.bezierCurveTo(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n    },\n    Q: function Q(doc, a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return doc.quadraticCurveTo(a[0], a[1], cx, cy);\n    },\n    q: function q(doc, a) {\n        doc.quadraticCurveTo(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        return cy += a[3];\n    },\n    T: function T(doc, a) {\n        if (px === null) {\n            px = cx;\n            py = cy;\n        } else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        return cy = a[1];\n    },\n    t: function t(doc, a) {\n        if (px === null) {\n            px = cx;\n            py = cy;\n        } else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        doc.quadraticCurveTo(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        return cy += a[1];\n    },\n    A: function A(doc, a) {\n        solveArc(doc, cx, cy, a);\n        cx = a[5];\n        return cy = a[6];\n    },\n    a: function a(doc, _a) {\n        _a[5] += cx;\n        _a[6] += cy;\n        solveArc(doc, cx, cy, _a);\n        cx = _a[5];\n        return cy = _a[6];\n    },\n    L: function L(doc, a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    l: function l(doc, a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    H: function H(doc, a) {\n        cx = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    h: function h(doc, a) {\n        cx += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    V: function V(doc, a) {\n        cy = a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    v: function v(doc, a) {\n        cy += a[0];\n        px = py = null;\n        return doc.lineTo(cx, cy);\n    },\n    Z: function Z(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n    },\n    z: function z(doc) {\n        doc.closePath();\n        cx = sx;\n        return cy = sy;\n    }\n};\nvar solveArc = function solveArc(doc, x, y, coords) {\n    var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n    var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n    for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(segs), _step; !(_step = _iterator()).done;){\n        var seg = _step.value;\n        var bez = segmentToBezier.apply(void 0, seg);\n        doc.bezierCurveTo.apply(doc, bez);\n    }\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n    var th = rotateX * (Math.PI / 180);\n    var sin_th = Math.sin(th);\n    var cos_th = Math.cos(th);\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n    py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n    var pl = px * px / (rx * rx) + py * py / (ry * ry);\n    if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n    }\n    var a00 = cos_th / rx;\n    var a01 = sin_th / rx;\n    var a10 = -sin_th / ry;\n    var a11 = cos_th / ry;\n    var x0 = a00 * ox + a01 * oy;\n    var y0 = a10 * ox + a11 * oy;\n    var x1 = a00 * x + a01 * y;\n    var y1 = a10 * x + a11 * y;\n    var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n    var sfactor_sq = 1 / d - 0.25;\n    if (sfactor_sq < 0) {\n        sfactor_sq = 0;\n    }\n    var sfactor = Math.sqrt(sfactor_sq);\n    if (sweep === large) {\n        sfactor = -sfactor;\n    }\n    var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n    var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n    var th0 = Math.atan2(y0 - yc, x0 - xc);\n    var th1 = Math.atan2(y1 - yc, x1 - xc);\n    var th_arc = th1 - th0;\n    if (th_arc < 0 && sweep === 1) {\n        th_arc += 2 * Math.PI;\n    } else if (th_arc > 0 && sweep === 0) {\n        th_arc -= 2 * Math.PI;\n    }\n    var segments = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n    var result = [];\n    for(var i = 0; i < segments; i++){\n        var th2 = th0 + i * th_arc / segments;\n        var th3 = th0 + (i + 1) * th_arc / segments;\n        result[i] = [\n            xc,\n            yc,\n            th2,\n            th3,\n            rx,\n            ry,\n            sin_th,\n            cos_th\n        ];\n    }\n    return result;\n};\nvar segmentToBezier = function segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {\n    var a00 = cos_th * rx;\n    var a01 = -sin_th * ry;\n    var a10 = sin_th * rx;\n    var a11 = cos_th * ry;\n    var th_half = 0.5 * (th1 - th0);\n    var t = 8 / 3 * Math.sin(th_half * 0.5) * Math.sin(th_half * 0.5) / Math.sin(th_half);\n    var x1 = cx + Math.cos(th0) - t * Math.sin(th0);\n    var y1 = cy + Math.sin(th0) + t * Math.cos(th0);\n    var x3 = cx + Math.cos(th1);\n    var y3 = cy + Math.sin(th1);\n    var x2 = x3 + t * Math.sin(th1);\n    var y2 = y3 - t * Math.cos(th1);\n    return [\n        a00 * x1 + a01 * y1,\n        a10 * x1 + a11 * y1,\n        a00 * x2 + a01 * y2,\n        a10 * x2 + a11 * y2,\n        a00 * x3 + a01 * y3,\n        a10 * x3 + a11 * y3\n    ];\n};\nvar SVGPath = /*#__PURE__*/ function() {\n    function SVGPath() {}\n    SVGPath.apply = function apply(doc, path) {\n        var commands = parsePathData(path);\n        _apply(commands, doc);\n    };\n    return SVGPath;\n}();\nvar number$1 = PDFObject$1.number;\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar VectorMixin = {\n    initVector: function initVector() {\n        this._ctm = [\n            1,\n            0,\n            0,\n            1,\n            0,\n            0\n        ]; // current transformation matrix\n        return this._ctmStack = [];\n    },\n    save: function save() {\n        this._ctmStack.push(this._ctm.slice());\n        // TODO: save/restore colorspace and styles so not setting it unnessesarily all the time?\n        return this.addContent(\"q\");\n    },\n    restore: function restore() {\n        this._ctm = this._ctmStack.pop() || [\n            1,\n            0,\n            0,\n            1,\n            0,\n            0\n        ];\n        return this.addContent(\"Q\");\n    },\n    closePath: function closePath() {\n        return this.addContent(\"h\");\n    },\n    lineWidth: function lineWidth(w) {\n        return this.addContent(number$1(w) + \" w\");\n    },\n    _CAP_STYLES: {\n        BUTT: 0,\n        ROUND: 1,\n        SQUARE: 2\n    },\n    lineCap: function lineCap(c) {\n        if (typeof c === \"string\") {\n            c = this._CAP_STYLES[c.toUpperCase()];\n        }\n        return this.addContent(c + \" J\");\n    },\n    _JOIN_STYLES: {\n        MITER: 0,\n        ROUND: 1,\n        BEVEL: 2\n    },\n    lineJoin: function lineJoin(j) {\n        if (typeof j === \"string\") {\n            j = this._JOIN_STYLES[j.toUpperCase()];\n        }\n        return this.addContent(j + \" j\");\n    },\n    miterLimit: function miterLimit(m) {\n        return this.addContent(number$1(m) + \" M\");\n    },\n    dash: function dash(length, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var originalLength = length;\n        if (!Array.isArray(length)) {\n            length = [\n                length,\n                options.space || length\n            ];\n        }\n        var valid = length.every(function(x) {\n            return Number.isFinite(x) && x > 0;\n        });\n        if (!valid) {\n            throw new Error(\"dash(\" + JSON.stringify(originalLength) + \", \" + JSON.stringify(options) + \") invalid, lengths must be numeric and greater than zero\");\n        }\n        length = length.map(number$1).join(\" \");\n        return this.addContent(\"[\" + length + \"] \" + number$1(options.phase || 0) + \" d\");\n    },\n    undash: function undash() {\n        return this.addContent(\"[] 0 d\");\n    },\n    moveTo: function moveTo(x, y) {\n        return this.addContent(number$1(x) + \" \" + number$1(y) + \" m\");\n    },\n    lineTo: function lineTo(x, y) {\n        return this.addContent(number$1(x) + \" \" + number$1(y) + \" l\");\n    },\n    bezierCurveTo: function bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        return this.addContent(number$1(cp1x) + \" \" + number$1(cp1y) + \" \" + number$1(cp2x) + \" \" + number$1(cp2y) + \" \" + number$1(x) + \" \" + number$1(y) + \" c\");\n    },\n    quadraticCurveTo: function quadraticCurveTo(cpx, cpy, x, y) {\n        return this.addContent(number$1(cpx) + \" \" + number$1(cpy) + \" \" + number$1(x) + \" \" + number$1(y) + \" v\");\n    },\n    rect: function rect(x, y, w, h) {\n        return this.addContent(number$1(x) + \" \" + number$1(y) + \" \" + number$1(w) + \" \" + number$1(h) + \" re\");\n    },\n    roundedRect: function roundedRect(x, y, w, h, r) {\n        if (r == null) {\n            r = 0;\n        }\n        r = Math.min(r, 0.5 * w, 0.5 * h);\n        // amount to inset control points from corners (see `ellipse`)\n        var c = r * (1.0 - KAPPA);\n        this.moveTo(x + r, y);\n        this.lineTo(x + w - r, y);\n        this.bezierCurveTo(x + w - c, y, x + w, y + c, x + w, y + r);\n        this.lineTo(x + w, y + h - r);\n        this.bezierCurveTo(x + w, y + h - c, x + w - c, y + h, x + w - r, y + h);\n        this.lineTo(x + r, y + h);\n        this.bezierCurveTo(x + c, y + h, x, y + h - c, x, y + h - r);\n        this.lineTo(x, y + r);\n        this.bezierCurveTo(x, y + c, x + c, y, x + r, y);\n        return this.closePath();\n    },\n    ellipse: function ellipse(x, y, r1, r2) {\n        // based on http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas/2173084#2173084\n        if (r2 == null) {\n            r2 = r1;\n        }\n        x -= r1;\n        y -= r2;\n        var ox = r1 * KAPPA;\n        var oy = r2 * KAPPA;\n        var xe = x + r1 * 2;\n        var ye = y + r2 * 2;\n        var xm = x + r1;\n        var ym = y + r2;\n        this.moveTo(x, ym);\n        this.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        this.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        this.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        this.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        return this.closePath();\n    },\n    circle: function circle(x, y, radius) {\n        return this.ellipse(x, y, radius);\n    },\n    arc: function arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        if (anticlockwise == null) {\n            anticlockwise = false;\n        }\n        var TWO_PI = 2.0 * Math.PI;\n        var HALF_PI = 0.5 * Math.PI;\n        var deltaAng = endAngle - startAngle;\n        if (Math.abs(deltaAng) > TWO_PI) {\n            // draw only full circle if more than that is specified\n            deltaAng = TWO_PI;\n        } else if (deltaAng !== 0 && anticlockwise !== deltaAng < 0) {\n            // necessary to flip direction of rendering\n            var dir = anticlockwise ? -1 : 1;\n            deltaAng = dir * TWO_PI + deltaAng;\n        }\n        var numSegs = Math.ceil(Math.abs(deltaAng) / HALF_PI);\n        var segAng = deltaAng / numSegs;\n        var handleLen = segAng / HALF_PI * KAPPA * radius;\n        var curAng = startAngle;\n        // component distances between anchor point and control point\n        var deltaCx = -Math.sin(curAng) * handleLen;\n        var deltaCy = Math.cos(curAng) * handleLen;\n        // anchor point\n        var ax = x + Math.cos(curAng) * radius;\n        var ay = y + Math.sin(curAng) * radius;\n        // calculate and render segments\n        this.moveTo(ax, ay);\n        for(var segIdx = 0; segIdx < numSegs; segIdx++){\n            // starting control point\n            var cp1x = ax + deltaCx;\n            var cp1y = ay + deltaCy;\n            // step angle\n            curAng += segAng;\n            // next anchor point\n            ax = x + Math.cos(curAng) * radius;\n            ay = y + Math.sin(curAng) * radius;\n            // next control point delta\n            deltaCx = -Math.sin(curAng) * handleLen;\n            deltaCy = Math.cos(curAng) * handleLen;\n            // ending control point\n            var cp2x = ax - deltaCx;\n            var cp2y = ay - deltaCy;\n            // render segment\n            this.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, ax, ay);\n        }\n        return this;\n    },\n    polygon: function polygon() {\n        for(var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++){\n            points[_key] = arguments[_key];\n        }\n        this.moveTo.apply(this, points.shift() || []);\n        for(var _i = 0, _points = points; _i < _points.length; _i++){\n            var point = _points[_i];\n            this.lineTo.apply(this, point || []);\n        }\n        return this.closePath();\n    },\n    path: function path(_path) {\n        SVGPath.apply(this, _path);\n        return this;\n    },\n    _windingRule: function _windingRule(rule) {\n        if (/even-?odd/.test(rule)) {\n            return \"*\";\n        }\n        return \"\";\n    },\n    fill: function fill(color, rule) {\n        if (/(even-?odd)|(non-?zero)/.test(color)) {\n            rule = color;\n            color = null;\n        }\n        if (color) {\n            this.fillColor(color);\n        }\n        return this.addContent(\"f\" + this._windingRule(rule));\n    },\n    stroke: function stroke(color) {\n        if (color) {\n            this.strokeColor(color);\n        }\n        return this.addContent(\"S\");\n    },\n    fillAndStroke: function fillAndStroke(fillColor, strokeColor, rule) {\n        if (strokeColor == null) {\n            strokeColor = fillColor;\n        }\n        var isFillRule = /(even-?odd)|(non-?zero)/;\n        if (isFillRule.test(fillColor)) {\n            rule = fillColor;\n            fillColor = null;\n        }\n        if (isFillRule.test(strokeColor)) {\n            rule = strokeColor;\n            strokeColor = fillColor;\n        }\n        if (fillColor) {\n            this.fillColor(fillColor);\n            this.strokeColor(strokeColor);\n        }\n        return this.addContent(\"B\" + this._windingRule(rule));\n    },\n    clip: function clip(rule) {\n        return this.addContent(\"W\" + this._windingRule(rule) + \" n\");\n    },\n    transform: function transform(m11, m12, m21, m22, dx, dy) {\n        // keep track of the current transformation matrix\n        var m = this._ctm;\n        var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], m4 = m[4], m5 = m[5];\n        m[0] = m0 * m11 + m2 * m12;\n        m[1] = m1 * m11 + m3 * m12;\n        m[2] = m0 * m21 + m2 * m22;\n        m[3] = m1 * m21 + m3 * m22;\n        m[4] = m0 * dx + m2 * dy + m4;\n        m[5] = m1 * dx + m3 * dy + m5;\n        var values = [\n            m11,\n            m12,\n            m21,\n            m22,\n            dx,\n            dy\n        ].map(function(v) {\n            return number$1(v);\n        }).join(\" \");\n        return this.addContent(values + \" cm\");\n    },\n    translate: function translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    },\n    rotate: function rotate(angle, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var y;\n        var rad = angle * Math.PI / 180;\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n        var x = y = 0;\n        if (options.origin != null) {\n            var _options$origin = options.origin;\n            x = _options$origin[0];\n            y = _options$origin[1];\n            var x1 = x * cos - y * sin;\n            var y1 = x * sin + y * cos;\n            x -= x1;\n            y -= y1;\n        }\n        return this.transform(cos, sin, -sin, cos, x, y);\n    },\n    scale: function scale(xFactor, yFactor, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var y;\n        if (yFactor == null) {\n            yFactor = xFactor;\n        }\n        if (typeof yFactor === \"object\") {\n            options = yFactor;\n            yFactor = xFactor;\n        }\n        var x = y = 0;\n        if (options.origin != null) {\n            var _options$origin2 = options.origin;\n            x = _options$origin2[0];\n            y = _options$origin2[1];\n            x -= xFactor * x;\n            y -= yFactor * y;\n        }\n        return this.transform(xFactor, 0, 0, yFactor, x, y);\n    }\n};\nvar range = function range(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for(var i = left; ascending ? i < end : i > end; ascending ? i++ : i--){\n        range.push(i);\n    }\n    return range;\n};\nvar WIN_ANSI_MAP = {\n    402: 131,\n    8211: 150,\n    8212: 151,\n    8216: 145,\n    8217: 146,\n    8218: 130,\n    8220: 147,\n    8221: 148,\n    8222: 132,\n    8224: 134,\n    8225: 135,\n    8226: 149,\n    8230: 133,\n    8364: 128,\n    8240: 137,\n    8249: 139,\n    8250: 155,\n    710: 136,\n    8482: 153,\n    338: 140,\n    339: 156,\n    732: 152,\n    352: 138,\n    353: 154,\n    376: 159,\n    381: 142,\n    382: 158\n};\nvar characters = \".notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n.notdef       .notdef        .notdef        .notdef\\n\\nspace         exclam         quotedbl       numbersign\\ndollar        percent        ampersand      quotesingle\\nparenleft     parenright     asterisk       plus\\ncomma         hyphen         period         slash\\nzero          one            two            three\\nfour          five           six            seven\\neight         nine           colon          semicolon\\nless          equal          greater        question\\n\\nat            A              B              C\\nD             E              F              G\\nH             I              J              K\\nL             M              N              O\\nP             Q              R              S\\nT             U              V              W\\nX             Y              Z              bracketleft\\nbackslash     bracketright   asciicircum    underscore\\n\\ngrave         a              b              c\\nd             e              f              g\\nh             i              j              k\\nl             m              n              o\\np             q              r              s\\nt             u              v              w\\nx             y              z              braceleft\\nbar           braceright     asciitilde     .notdef\\n\\nEuro          .notdef        quotesinglbase florin\\nquotedblbase  ellipsis       dagger         daggerdbl\\ncircumflex    perthousand    Scaron         guilsinglleft\\nOE            .notdef        Zcaron         .notdef\\n.notdef       quoteleft      quoteright     quotedblleft\\nquotedblright bullet         endash         emdash\\ntilde         trademark      scaron         guilsinglright\\noe            .notdef        zcaron         ydieresis\\n\\nspace         exclamdown     cent           sterling\\ncurrency      yen            brokenbar      section\\ndieresis      copyright      ordfeminine    guillemotleft\\nlogicalnot    hyphen         registered     macron\\ndegree        plusminus      twosuperior    threesuperior\\nacute         mu             paragraph      periodcentered\\ncedilla       onesuperior    ordmasculine   guillemotright\\nonequarter    onehalf        threequarters  questiondown\\n\\nAgrave        Aacute         Acircumflex    Atilde\\nAdieresis     Aring          AE             Ccedilla\\nEgrave        Eacute         Ecircumflex    Edieresis\\nIgrave        Iacute         Icircumflex    Idieresis\\nEth           Ntilde         Ograve         Oacute\\nOcircumflex   Otilde         Odieresis      multiply\\nOslash        Ugrave         Uacute         Ucircumflex\\nUdieresis     Yacute         Thorn          germandbls\\n\\nagrave        aacute         acircumflex    atilde\\nadieresis     aring          ae             ccedilla\\negrave        eacute         ecircumflex    edieresis\\nigrave        iacute         icircumflex    idieresis\\neth           ntilde         ograve         oacute\\nocircumflex   otilde         odieresis      divide\\noslash        ugrave         uacute         ucircumflex\\nudieresis     yacute         thorn          ydieresis\".split(/\\s+/);\nfunction _parse(contents) {\n    var obj = {\n        attributes: {},\n        glyphWidths: {},\n        kernPairs: {}\n    };\n    var section = \"\";\n    for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(contents.split(\"\\n\")), _step; !(_step = _iterator()).done;){\n        var line = _step.value;\n        var match;\n        var a;\n        if (match = line.match(/^Start(\\w+)/)) {\n            section = match[1];\n            continue;\n        } else if (match = line.match(/^End(\\w+)/)) {\n            section = \"\";\n            continue;\n        }\n        switch(section){\n            case \"FontMetrics\":\n                match = line.match(/(^\\w+)\\s+(.*)/);\n                var key = match[1];\n                var value = match[2];\n                if (a = obj.attributes[key]) {\n                    if (!Array.isArray(a)) {\n                        a = obj.attributes[key] = [\n                            a\n                        ];\n                    }\n                    a.push(value);\n                } else {\n                    obj.attributes[key] = value;\n                }\n                break;\n            case \"CharMetrics\":\n                if (!/^CH?\\s/.test(line)) {\n                    continue;\n                }\n                var name = line.match(/\\bN\\s+(\\.?\\w+)\\s*;/)[1];\n                obj.glyphWidths[name] = +line.match(/\\bWX\\s+(\\d+)\\s*;/)[1];\n                break;\n            case \"KernPairs\":\n                match = line.match(/^KPX\\s+(\\.?\\w+)\\s+(\\.?\\w+)\\s+(-?\\d+)/);\n                if (match) {\n                    obj.kernPairs[match[1] + match[2]] = parseInt(match[3]);\n                }\n                break;\n        }\n    }\n    return obj;\n}\nvar AFMFont = /*#__PURE__*/ function() {\n    AFMFont.open = function open(filename) {\n        return new AFMFont(fs__WEBPACK_IMPORTED_MODULE_8__.readFileSync(filename, \"utf8\"));\n    };\n    AFMFont.fromJson = function fromJson(json) {\n        return new AFMFont(json);\n    };\n    function AFMFont(contents) {\n        var _this = this;\n        if (typeof contents === \"string\") {\n            this.contents = contents;\n            this.parse();\n        } else {\n            this.attributes = contents.attributes;\n            this.glyphWidths = contents.glyphWidths;\n            this.kernPairs = contents.kernPairs;\n        }\n        this.charWidths = range(0, 255, true).map(function(i) {\n            return _this.glyphWidths[characters[i]];\n        });\n        this.bbox = Array.from(this.attributes.FontBBox.split(/\\s+/)).map(function(e) {\n            return +e;\n        });\n        this.ascender = +(this.attributes.Ascender || 0);\n        this.descender = +(this.attributes.Descender || 0);\n        this.xHeight = +(this.attributes.XHeight || 0);\n        this.capHeight = +(this.attributes.CapHeight || 0);\n        this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);\n    }\n    var _proto = AFMFont.prototype;\n    _proto.parse = function parse() {\n        var parsed = _parse(this.contents);\n        this.attributes = parsed.attributes;\n        this.glyphWidths = parsed.glyphWidths;\n        this.kernPairs = parsed.kernPairs;\n    };\n    _proto.encodeText = function encodeText(text) {\n        var res = [];\n        for(var i = 0, end = text.length, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--){\n            var char = text.charCodeAt(i);\n            char = WIN_ANSI_MAP[char] || char;\n            res.push(char.toString(16));\n        }\n        return res;\n    };\n    _proto.glyphsForString = function glyphsForString(string) {\n        var glyphs = [];\n        for(var i = 0, end = string.length, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--){\n            var charCode = string.charCodeAt(i);\n            glyphs.push(this.characterToGlyph(charCode));\n        }\n        return glyphs;\n    };\n    _proto.characterToGlyph = function characterToGlyph(character) {\n        return characters[WIN_ANSI_MAP[character] || character] || \".notdef\";\n    };\n    _proto.widthOfGlyph = function widthOfGlyph(glyph) {\n        return this.glyphWidths[glyph] || 0;\n    };\n    _proto.getKernPair = function getKernPair(left, right) {\n        return this.kernPairs[left + right] || 0;\n    };\n    _proto.advancesForGlyphs = function advancesForGlyphs(glyphs) {\n        var advances = [];\n        for(var index = 0; index < glyphs.length; index++){\n            var left = glyphs[index];\n            var right = glyphs[index + 1];\n            advances.push(this.widthOfGlyph(left) + this.getKernPair(left, right));\n        }\n        return advances;\n    };\n    return AFMFont;\n}();\nvar attributes = [\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:43:52 1997\",\n            \"UniqueID 43052\",\n            \"VMusage 37169 48194\"\n        ],\n        FontName: \"Helvetica-Bold\",\n        FullName: \"Helvetica Bold\",\n        FamilyName: \"Helvetica\",\n        Weight: \"Bold\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-170 -228 1003 962 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"718\",\n        XHeight: \"532\",\n        Ascender: \"718\",\n        Descender: \"-207\",\n        StdHW: \"118\",\n        StdVW: \"140\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:45:12 1997\",\n            \"UniqueID 43053\",\n            \"VMusage 14482 68586\"\n        ],\n        FontName: \"Helvetica-BoldOblique\",\n        FullName: \"Helvetica Bold Oblique\",\n        FamilyName: \"Helvetica\",\n        Weight: \"Bold\",\n        ItalicAngle: \"-12\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-174 -228 1114 962\",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"718\",\n        XHeight: \"532\",\n        Ascender: \"718\",\n        Descender: \"-207\",\n        StdHW: \"118\",\n        StdVW: \"140\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:44:31 1997\",\n            \"UniqueID 43055\",\n            \"VMusage 14960 69346\"\n        ],\n        FontName: \"Helvetica-Oblique\",\n        FullName: \"Helvetica Oblique\",\n        FamilyName: \"Helvetica\",\n        Weight: \"Medium\",\n        ItalicAngle: \"-12\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-170 -225 1116 931 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"718\",\n        XHeight: \"523\",\n        Ascender: \"718\",\n        Descender: \"-207\",\n        StdHW: \"76\",\n        StdVW: \"88\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:38:23 1997\",\n            \"UniqueID 43054\",\n            \"VMusage 37069 48094\"\n        ],\n        FontName: \"Helvetica\",\n        FullName: \"Helvetica\",\n        FamilyName: \"Helvetica\",\n        Weight: \"Medium\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-166 -225 1000 931 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"718\",\n        XHeight: \"523\",\n        Ascender: \"718\",\n        Descender: \"-207\",\n        StdHW: \"76\",\n        StdVW: \"88\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:52:56 1997\",\n            \"UniqueID 43065\",\n            \"VMusage 41636 52661\"\n        ],\n        FontName: \"Times-Bold\",\n        FullName: \"Times Bold\",\n        FamilyName: \"Times\",\n        Weight: \"Bold\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-168 -218 1000 935 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"676\",\n        XHeight: \"461\",\n        Ascender: \"683\",\n        Descender: \"-217\",\n        StdHW: \"44\",\n        StdVW: \"139\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 13:04:06 1997\",\n            \"UniqueID 43066\",\n            \"VMusage 45874 56899\"\n        ],\n        FontName: \"Times-BoldItalic\",\n        FullName: \"Times Bold Italic\",\n        FamilyName: \"Times\",\n        Weight: \"Bold\",\n        ItalicAngle: \"-15\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-200 -218 996 921\",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"669\",\n        XHeight: \"462\",\n        Ascender: \"683\",\n        Descender: \"-217\",\n        StdHW: \"42\",\n        StdVW: \"121\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:56:55 1997\",\n            \"UniqueID 43067\",\n            \"VMusage 47727 58752\"\n        ],\n        FontName: \"Times-Italic\",\n        FullName: \"Times Italic\",\n        FamilyName: \"Times\",\n        Weight: \"Medium\",\n        ItalicAngle: \"-15.5\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-169 -217 1010 883 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"653\",\n        XHeight: \"441\",\n        Ascender: \"683\",\n        Descender: \"-217\",\n        StdHW: \"32\",\n        StdVW: \"76\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 12:49:17 1997\",\n            \"UniqueID 43068\",\n            \"VMusage 43909 54934\"\n        ],\n        FontName: \"Times-Roman\",\n        FullName: \"Times Roman\",\n        FamilyName: \"Times\",\n        Weight: \"Roman\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"false\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-168 -218 1000 898 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"002.000\",\n        Notice: \"Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"662\",\n        XHeight: \"450\",\n        Ascender: \"683\",\n        Descender: \"-217\",\n        StdHW: \"28\",\n        StdVW: \"84\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Mon Jun 23 16:28:00 1997\",\n            \"UniqueID 43048\",\n            \"VMusage 41139 52164\"\n        ],\n        FontName: \"Courier-Bold\",\n        FullName: \"Courier Bold\",\n        FamilyName: \"Courier\",\n        Weight: \"Bold\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"true\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-113 -250 749 801 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"003.000\",\n        Notice: \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"562\",\n        XHeight: \"439\",\n        Ascender: \"629\",\n        Descender: \"-157\",\n        StdHW: \"84\",\n        StdVW: \"106\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Mon Jun 23 16:28:46 1997\",\n            \"UniqueID 43049\",\n            \"VMusage 17529 79244\"\n        ],\n        FontName: \"Courier-BoldOblique\",\n        FullName: \"Courier Bold Oblique\",\n        FamilyName: \"Courier\",\n        Weight: \"Bold\",\n        ItalicAngle: \"-12\",\n        IsFixedPitch: \"true\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-57 -250 869 801\",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"003.000\",\n        Notice: \"Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"562\",\n        XHeight: \"439\",\n        Ascender: \"629\",\n        Descender: \"-157\",\n        StdHW: \"84\",\n        StdVW: \"106\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 17:37:52 1997\",\n            \"UniqueID 43051\",\n            \"VMusage 16248 75829\"\n        ],\n        FontName: \"Courier-Oblique\",\n        FullName: \"Courier Oblique\",\n        FamilyName: \"Courier\",\n        Weight: \"Medium\",\n        ItalicAngle: \"-12\",\n        IsFixedPitch: \"true\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-27 -250 849 805 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"003.000\",\n        Notice: \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"562\",\n        XHeight: \"426\",\n        Ascender: \"629\",\n        Descender: \"-157\",\n        StdHW: \"51\",\n        StdVW: \"51\"\n    },\n    {\n        Comment: [\n            \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n            \"Creation Date: Thu May  1 17:27:09 1997\",\n            \"UniqueID 43050\",\n            \"VMusage 39754 50779\"\n        ],\n        FontName: \"Courier\",\n        FullName: \"Courier\",\n        FamilyName: \"Courier\",\n        Weight: \"Medium\",\n        ItalicAngle: \"0\",\n        IsFixedPitch: \"true\",\n        CharacterSet: \"ExtendedRoman\",\n        FontBBox: \"-23 -250 715 805 \",\n        UnderlinePosition: \"-100\",\n        UnderlineThickness: \"50\",\n        Version: \"003.000\",\n        Notice: \"Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.\",\n        EncodingScheme: \"AdobeStandardEncoding\",\n        CapHeight: \"562\",\n        XHeight: \"426\",\n        Ascender: \"629\",\n        Descender: \"-157\",\n        StdHW: \"51\",\n        StdVW: \"51\"\n    }\n];\nvar glyphWidths = {\n    space: [\n        278,\n        278,\n        278,\n        278,\n        250,\n        250,\n        250,\n        250,\n        600,\n        600,\n        600,\n        600\n    ],\n    exclam: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotedbl: [\n        474,\n        474,\n        355,\n        355,\n        555,\n        555,\n        420,\n        408,\n        600,\n        600,\n        600,\n        600\n    ],\n    numbersign: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    dollar: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    percent: [\n        889,\n        889,\n        889,\n        889,\n        1000,\n        833,\n        833,\n        833,\n        600,\n        600,\n        600,\n        600\n    ],\n    ampersand: [\n        722,\n        722,\n        667,\n        667,\n        833,\n        778,\n        778,\n        778,\n        600,\n        600,\n        600,\n        600\n    ],\n    quoteright: [\n        278,\n        278,\n        222,\n        222,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    parenleft: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    parenright: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    asterisk: [\n        389,\n        389,\n        389,\n        389,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    plus: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    comma: [\n        278,\n        278,\n        278,\n        278,\n        250,\n        250,\n        250,\n        250,\n        600,\n        600,\n        600,\n        600\n    ],\n    hyphen: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    period: [\n        278,\n        278,\n        278,\n        278,\n        250,\n        250,\n        250,\n        250,\n        600,\n        600,\n        600,\n        600\n    ],\n    slash: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    zero: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    one: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    two: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    three: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    four: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    five: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    six: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    seven: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    eight: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    nine: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    colon: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        333,\n        333,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    semicolon: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        333,\n        333,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    less: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    equal: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    greater: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    question: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    at: [\n        975,\n        975,\n        1015,\n        1015,\n        930,\n        832,\n        920,\n        921,\n        600,\n        600,\n        600,\n        600\n    ],\n    A: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    B: [\n        722,\n        722,\n        667,\n        667,\n        667,\n        667,\n        611,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    C: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        667,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    D: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    E: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    F: [\n        611,\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    G: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    H: [\n        722,\n        722,\n        722,\n        722,\n        778,\n        778,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    I: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    J: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        444,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    K: [\n        722,\n        722,\n        667,\n        667,\n        778,\n        667,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    L: [\n        611,\n        611,\n        556,\n        556,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    M: [\n        833,\n        833,\n        833,\n        833,\n        944,\n        889,\n        833,\n        889,\n        600,\n        600,\n        600,\n        600\n    ],\n    N: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    O: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    P: [\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        611,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    Q: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    R: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        611,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    S: [\n        667,\n        667,\n        667,\n        667,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    T: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    U: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    V: [\n        667,\n        667,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    W: [\n        944,\n        944,\n        944,\n        944,\n        1000,\n        889,\n        833,\n        944,\n        600,\n        600,\n        600,\n        600\n    ],\n    X: [\n        667,\n        667,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Y: [\n        667,\n        667,\n        667,\n        667,\n        722,\n        611,\n        556,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Z: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    bracketleft: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        333,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    backslash: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    bracketright: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        333,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    asciicircum: [\n        584,\n        584,\n        469,\n        469,\n        581,\n        570,\n        422,\n        469,\n        600,\n        600,\n        600,\n        600\n    ],\n    underscore: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    quoteleft: [\n        278,\n        278,\n        222,\n        222,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    a: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    b: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    c: [\n        556,\n        556,\n        500,\n        500,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    d: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    e: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    f: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        333,\n        278,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    g: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    h: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    i: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    j: [\n        278,\n        278,\n        222,\n        222,\n        333,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    k: [\n        556,\n        556,\n        500,\n        500,\n        556,\n        500,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    l: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    m: [\n        889,\n        889,\n        833,\n        833,\n        833,\n        778,\n        722,\n        778,\n        600,\n        600,\n        600,\n        600\n    ],\n    n: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    o: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    p: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    q: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    r: [\n        389,\n        389,\n        333,\n        333,\n        444,\n        389,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    s: [\n        556,\n        556,\n        500,\n        500,\n        389,\n        389,\n        389,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    t: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    u: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    v: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    w: [\n        778,\n        778,\n        722,\n        722,\n        722,\n        667,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    x: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    y: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    z: [\n        500,\n        500,\n        500,\n        500,\n        444,\n        389,\n        389,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    braceleft: [\n        389,\n        389,\n        334,\n        334,\n        394,\n        348,\n        400,\n        480,\n        600,\n        600,\n        600,\n        600\n    ],\n    bar: [\n        280,\n        280,\n        260,\n        260,\n        220,\n        220,\n        275,\n        200,\n        600,\n        600,\n        600,\n        600\n    ],\n    braceright: [\n        389,\n        389,\n        334,\n        334,\n        394,\n        348,\n        400,\n        480,\n        600,\n        600,\n        600,\n        600\n    ],\n    asciitilde: [\n        584,\n        584,\n        584,\n        584,\n        520,\n        570,\n        541,\n        541,\n        600,\n        600,\n        600,\n        600\n    ],\n    exclamdown: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        389,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    cent: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    sterling: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    fraction: [\n        167,\n        167,\n        167,\n        167,\n        167,\n        167,\n        167,\n        167,\n        600,\n        600,\n        600,\n        600\n    ],\n    yen: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    florin: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    section: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    currency: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotesingle: [\n        238,\n        238,\n        191,\n        191,\n        278,\n        278,\n        214,\n        180,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotedblleft: [\n        500,\n        500,\n        333,\n        333,\n        500,\n        500,\n        556,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    guillemotleft: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    guilsinglleft: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    guilsinglright: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    fi: [\n        611,\n        611,\n        500,\n        500,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    fl: [\n        611,\n        611,\n        500,\n        500,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    endash: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    dagger: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    daggerdbl: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    periodcentered: [\n        278,\n        278,\n        278,\n        278,\n        250,\n        250,\n        250,\n        250,\n        600,\n        600,\n        600,\n        600\n    ],\n    paragraph: [\n        556,\n        556,\n        537,\n        537,\n        540,\n        500,\n        523,\n        453,\n        600,\n        600,\n        600,\n        600\n    ],\n    bullet: [\n        350,\n        350,\n        350,\n        350,\n        350,\n        350,\n        350,\n        350,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotesinglbase: [\n        278,\n        278,\n        222,\n        222,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotedblbase: [\n        500,\n        500,\n        333,\n        333,\n        500,\n        500,\n        556,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    quotedblright: [\n        500,\n        500,\n        333,\n        333,\n        500,\n        500,\n        556,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    guillemotright: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    ellipsis: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        889,\n        1000,\n        600,\n        600,\n        600,\n        600\n    ],\n    perthousand: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        600,\n        600,\n        600,\n        600\n    ],\n    questiondown: [\n        611,\n        611,\n        611,\n        611,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    grave: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    acute: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    circumflex: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    tilde: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    macron: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    breve: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    dotaccent: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    dieresis: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    ring: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    cedilla: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    hungarumlaut: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    ogonek: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    caron: [\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    emdash: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        889,\n        1000,\n        600,\n        600,\n        600,\n        600\n    ],\n    AE: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        944,\n        889,\n        889,\n        600,\n        600,\n        600,\n        600\n    ],\n    ordfeminine: [\n        370,\n        370,\n        370,\n        370,\n        300,\n        266,\n        276,\n        276,\n        600,\n        600,\n        600,\n        600\n    ],\n    Lslash: [\n        611,\n        611,\n        556,\n        556,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Oslash: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    OE: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        944,\n        944,\n        889,\n        600,\n        600,\n        600,\n        600\n    ],\n    ordmasculine: [\n        365,\n        365,\n        365,\n        365,\n        330,\n        300,\n        310,\n        310,\n        600,\n        600,\n        600,\n        600\n    ],\n    ae: [\n        889,\n        889,\n        889,\n        889,\n        722,\n        722,\n        667,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    dotlessi: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    lslash: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    oslash: [\n        611,\n        611,\n        611,\n        611,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    oe: [\n        944,\n        944,\n        944,\n        944,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    germandbls: [\n        611,\n        611,\n        611,\n        611,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Idieresis: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    eacute: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    abreve: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    uhungarumlaut: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    ecaron: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ydieresis: [\n        667,\n        667,\n        667,\n        667,\n        722,\n        611,\n        556,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    divide: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    Yacute: [\n        667,\n        667,\n        667,\n        667,\n        722,\n        611,\n        556,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Acircumflex: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    aacute: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ucircumflex: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    yacute: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    scommaaccent: [\n        556,\n        556,\n        500,\n        500,\n        389,\n        389,\n        389,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    ecircumflex: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Uring: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Udieresis: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    aogonek: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Uacute: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    uogonek: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Edieresis: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Dcroat: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    commaaccent: [\n        250,\n        250,\n        250,\n        250,\n        250,\n        250,\n        250,\n        250,\n        600,\n        600,\n        600,\n        600\n    ],\n    copyright: [\n        737,\n        737,\n        737,\n        737,\n        747,\n        747,\n        760,\n        760,\n        600,\n        600,\n        600,\n        600\n    ],\n    Emacron: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    ccaron: [\n        556,\n        556,\n        500,\n        500,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    aring: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ncommaaccent: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    lacute: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    agrave: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Tcommaaccent: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Cacute: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        667,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    atilde: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Edotaccent: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    scaron: [\n        556,\n        556,\n        500,\n        500,\n        389,\n        389,\n        389,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    scedilla: [\n        556,\n        556,\n        500,\n        500,\n        389,\n        389,\n        389,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    iacute: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    lozenge: [\n        494,\n        494,\n        471,\n        471,\n        494,\n        494,\n        471,\n        471,\n        600,\n        600,\n        600,\n        600\n    ],\n    Rcaron: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        611,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    Gcommaaccent: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    ucircumflex: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    acircumflex: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Amacron: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    rcaron: [\n        389,\n        389,\n        333,\n        333,\n        444,\n        389,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    ccedilla: [\n        556,\n        556,\n        500,\n        500,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Zdotaccent: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Thorn: [\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        611,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    Omacron: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Racute: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        611,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    Sacute: [\n        667,\n        667,\n        667,\n        667,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    dcaron: [\n        743,\n        743,\n        643,\n        643,\n        672,\n        608,\n        544,\n        588,\n        600,\n        600,\n        600,\n        600\n    ],\n    Umacron: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    uring: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    threesuperior: [\n        333,\n        333,\n        333,\n        333,\n        300,\n        300,\n        300,\n        300,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ograve: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Agrave: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Abreve: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    multiply: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    uacute: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Tcaron: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    partialdiff: [\n        494,\n        494,\n        476,\n        476,\n        494,\n        494,\n        476,\n        476,\n        600,\n        600,\n        600,\n        600\n    ],\n    ydieresis: [\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Nacute: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    icircumflex: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ecircumflex: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    adieresis: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    edieresis: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    cacute: [\n        556,\n        556,\n        500,\n        500,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    nacute: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    umacron: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ncaron: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Iacute: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    plusminus: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        570,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    brokenbar: [\n        280,\n        280,\n        260,\n        260,\n        220,\n        220,\n        275,\n        200,\n        600,\n        600,\n        600,\n        600\n    ],\n    registered: [\n        737,\n        737,\n        737,\n        737,\n        747,\n        747,\n        760,\n        760,\n        600,\n        600,\n        600,\n        600\n    ],\n    Gbreve: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Idotaccent: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    summation: [\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600,\n        600\n    ],\n    Egrave: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    racute: [\n        389,\n        389,\n        333,\n        333,\n        444,\n        389,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    omacron: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Zacute: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Zcaron: [\n        611,\n        611,\n        611,\n        611,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    greaterequal: [\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        600,\n        600,\n        600,\n        600\n    ],\n    Eth: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ccedilla: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        667,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    lcommaaccent: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    tcaron: [\n        389,\n        389,\n        317,\n        317,\n        416,\n        366,\n        300,\n        326,\n        600,\n        600,\n        600,\n        600\n    ],\n    eogonek: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Uogonek: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Aacute: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Adieresis: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    egrave: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    zacute: [\n        500,\n        500,\n        500,\n        500,\n        444,\n        389,\n        389,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    iogonek: [\n        278,\n        278,\n        222,\n        222,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    Oacute: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    oacute: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    amacron: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    sacute: [\n        556,\n        556,\n        500,\n        500,\n        389,\n        389,\n        389,\n        389,\n        600,\n        600,\n        600,\n        600\n    ],\n    idieresis: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ocircumflex: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ugrave: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Delta: [\n        612,\n        612,\n        612,\n        612,\n        612,\n        612,\n        612,\n        612,\n        600,\n        600,\n        600,\n        600\n    ],\n    thorn: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    twosuperior: [\n        333,\n        333,\n        333,\n        333,\n        300,\n        300,\n        300,\n        300,\n        600,\n        600,\n        600,\n        600\n    ],\n    Odieresis: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    mu: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        576,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    igrave: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    ohungarumlaut: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Eogonek: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    dcroat: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    threequarters: [\n        834,\n        834,\n        834,\n        834,\n        750,\n        750,\n        750,\n        750,\n        600,\n        600,\n        600,\n        600\n    ],\n    Scedilla: [\n        667,\n        667,\n        667,\n        667,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    lcaron: [\n        400,\n        400,\n        299,\n        299,\n        394,\n        382,\n        300,\n        344,\n        600,\n        600,\n        600,\n        600\n    ],\n    Kcommaaccent: [\n        722,\n        722,\n        667,\n        667,\n        778,\n        667,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Lacute: [\n        611,\n        611,\n        556,\n        556,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    trademark: [\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        1000,\n        980,\n        980,\n        600,\n        600,\n        600,\n        600\n    ],\n    edotaccent: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Igrave: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    Imacron: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    Lcaron: [\n        611,\n        611,\n        556,\n        556,\n        667,\n        611,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    onehalf: [\n        834,\n        834,\n        834,\n        834,\n        750,\n        750,\n        750,\n        750,\n        600,\n        600,\n        600,\n        600\n    ],\n    lessequal: [\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        600,\n        600,\n        600,\n        600\n    ],\n    ocircumflex: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    ntilde: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Uhungarumlaut: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Eacute: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    emacron: [\n        556,\n        556,\n        556,\n        556,\n        444,\n        444,\n        444,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    gbreve: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    onequarter: [\n        834,\n        834,\n        834,\n        834,\n        750,\n        750,\n        750,\n        750,\n        600,\n        600,\n        600,\n        600\n    ],\n    Scaron: [\n        667,\n        667,\n        667,\n        667,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    Scommaaccent: [\n        667,\n        667,\n        667,\n        667,\n        556,\n        556,\n        500,\n        556,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ohungarumlaut: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    degree: [\n        400,\n        400,\n        400,\n        400,\n        400,\n        400,\n        400,\n        400,\n        600,\n        600,\n        600,\n        600\n    ],\n    ograve: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ccaron: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        667,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    ugrave: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    radical: [\n        549,\n        549,\n        453,\n        453,\n        549,\n        549,\n        453,\n        453,\n        600,\n        600,\n        600,\n        600\n    ],\n    Dcaron: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    rcommaaccent: [\n        389,\n        389,\n        333,\n        333,\n        444,\n        389,\n        389,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ntilde: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    otilde: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    Rcommaaccent: [\n        722,\n        722,\n        722,\n        722,\n        722,\n        667,\n        611,\n        667,\n        600,\n        600,\n        600,\n        600\n    ],\n    Lcommaaccent: [\n        611,\n        611,\n        556,\n        556,\n        667,\n        611,\n        556,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Atilde: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Aogonek: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Aring: [\n        722,\n        722,\n        667,\n        667,\n        722,\n        667,\n        611,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    Otilde: [\n        778,\n        778,\n        778,\n        778,\n        778,\n        722,\n        722,\n        722,\n        600,\n        600,\n        600,\n        600\n    ],\n    zdotaccent: [\n        500,\n        500,\n        500,\n        500,\n        444,\n        389,\n        389,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    Ecaron: [\n        667,\n        667,\n        667,\n        667,\n        667,\n        667,\n        611,\n        611,\n        600,\n        600,\n        600,\n        600\n    ],\n    Iogonek: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    kcommaaccent: [\n        556,\n        556,\n        500,\n        500,\n        556,\n        500,\n        444,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    minus: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        606,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    Icircumflex: [\n        278,\n        278,\n        278,\n        278,\n        389,\n        389,\n        333,\n        333,\n        600,\n        600,\n        600,\n        600\n    ],\n    ncaron: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    tcommaaccent: [\n        333,\n        333,\n        278,\n        278,\n        333,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    logicalnot: [\n        584,\n        584,\n        584,\n        584,\n        570,\n        606,\n        675,\n        564,\n        600,\n        600,\n        600,\n        600\n    ],\n    odieresis: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    udieresis: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    notequal: [\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        549,\n        600,\n        600,\n        600,\n        600\n    ],\n    gcommaaccent: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    eth: [\n        611,\n        611,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    zcaron: [\n        500,\n        500,\n        500,\n        500,\n        444,\n        389,\n        389,\n        444,\n        600,\n        600,\n        600,\n        600\n    ],\n    ncommaaccent: [\n        611,\n        611,\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ],\n    onesuperior: [\n        333,\n        333,\n        333,\n        333,\n        300,\n        300,\n        300,\n        300,\n        600,\n        600,\n        600,\n        600\n    ],\n    imacron: [\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        278,\n        600,\n        600,\n        600,\n        600\n    ],\n    Euro: [\n        556,\n        556,\n        556,\n        556,\n        500,\n        500,\n        500,\n        500,\n        600,\n        600,\n        600,\n        600\n    ]\n};\nvar kernPairs = {\n    AC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    ACacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    ACcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    ACcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    ATcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    ATcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Au: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Auacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Audieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Augrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Auhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Auogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Auring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Av: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Aw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Ay: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Ayacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Aydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AacuteC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AacuteCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AacuteCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AacuteCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AacuteG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AacuteGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AacuteGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AacuteO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AacuteQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AacuteT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AacuteTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AacuteTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AacuteU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AacuteV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AacuteW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AacuteY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AacuteYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AacuteYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Aacuteu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacuteuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aacutev: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Aacutew: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Aacutey: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Aacuteyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Aacuteydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AbreveC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AbreveCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AbreveCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AbreveCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AbreveG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AbreveGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AbreveGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AbreveO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AbreveQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AbreveT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AbreveTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AbreveTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AbreveU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AbreveV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AbreveW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AbreveY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AbreveYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AbreveYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Abreveu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abreveuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Abrevev: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Abrevew: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Abrevey: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Abreveyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Abreveydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AcircumflexC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AcircumflexCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AcircumflexCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AcircumflexCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AcircumflexG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AcircumflexGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AcircumflexGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AcircumflexO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AcircumflexQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AcircumflexT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AcircumflexTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AcircumflexTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AcircumflexU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AcircumflexV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AcircumflexW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AcircumflexY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AcircumflexYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AcircumflexYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Acircumflexu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Acircumflexv: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Acircumflexw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Acircumflexy: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Acircumflexyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Acircumflexydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AdieresisC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AdieresisCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AdieresisCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AdieresisCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AdieresisG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AdieresisGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AdieresisGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AdieresisO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AdieresisQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AdieresisT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AdieresisTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AdieresisTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AdieresisU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AdieresisV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AdieresisW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AdieresisY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AdieresisYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AdieresisYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Adieresisu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Adieresisv: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Adieresisw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Adieresisy: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Adieresisyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Adieresisydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AgraveC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AgraveCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AgraveCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AgraveCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AgraveG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AgraveGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AgraveGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AgraveO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AgraveQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AgraveT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AgraveTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AgraveTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AgraveU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AgraveV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AgraveW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AgraveY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AgraveYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AgraveYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Agraveu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agraveuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Agravev: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Agravew: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Agravey: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Agraveyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Agraveydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AmacronC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AmacronCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AmacronCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AmacronCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AmacronG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AmacronGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AmacronGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AmacronO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AmacronQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AmacronT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AmacronTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AmacronTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AmacronU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AmacronV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AmacronW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AmacronY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AmacronYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AmacronYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Amacronu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Amacronv: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Amacronw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Amacrony: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Amacronyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Amacronydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AogonekC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AogonekCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AogonekCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AogonekCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AogonekG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AogonekGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AogonekGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AogonekO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AogonekQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AogonekT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AogonekTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AogonekTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AogonekU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AogonekV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AogonekW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AogonekY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AogonekYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AogonekYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Aogoneku: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aogonekv: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Aogonekw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -52\n    ],\n    Aogoneky: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -34,\n        -34,\n        -55,\n        -52\n    ],\n    Aogonekyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -34,\n        -34,\n        -55,\n        -52\n    ],\n    Aogonekydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -34,\n        -34,\n        -55,\n        -52\n    ],\n    AringC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AringCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AringCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AringCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AringG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AringGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AringGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AringO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AringQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AringT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AringTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AringTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AringU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AringV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AringW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AringY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AringYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AringYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Aringu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Aringv: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Aringw: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Aringy: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Aringyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Aringydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    AtildeC: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AtildeCacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AtildeCcaron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AtildeCcedilla: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -55,\n        -65,\n        -30,\n        -40\n    ],\n    AtildeG: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AtildeGbreve: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AtildeGcommaaccent: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -55,\n        -60,\n        -35,\n        -40\n    ],\n    AtildeO: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOacute: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOcircumflex: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOdieresis: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOgrave: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOhungarumlaut: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOmacron: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOslash: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeOtilde: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -50,\n        -40,\n        -55\n    ],\n    AtildeQ: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -45,\n        -55,\n        -40,\n        -55\n    ],\n    AtildeT: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AtildeTcaron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AtildeTcommaaccent: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -95,\n        -55,\n        -37,\n        -111\n    ],\n    AtildeU: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUcircumflex: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUgrave: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUhungarumlaut: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUmacron: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUogonek: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeUring: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -55\n    ],\n    AtildeV: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -145,\n        -95,\n        -105,\n        -135\n    ],\n    AtildeW: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -130,\n        -100,\n        -95,\n        -90\n    ],\n    AtildeY: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AtildeYacute: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    AtildeYdieresis: [\n        -110,\n        -110,\n        -100,\n        -100,\n        -100,\n        -70,\n        -55,\n        -105\n    ],\n    Atildeu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildeuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -50,\n        -30,\n        -20\n    ],\n    Atildev: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -100,\n        -74,\n        -55,\n        -74\n    ],\n    Atildew: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -90,\n        -74,\n        -55,\n        -92\n    ],\n    Atildey: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Atildeyacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    Atildeydieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -74,\n        -74,\n        -55,\n        -92\n    ],\n    BA: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAacute: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAbreve: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAcircumflex: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAdieresis: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAgrave: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAmacron: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAogonek: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAring: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BAtilde: [\n        -30,\n        -30,\n        0,\n        0,\n        -30,\n        -25,\n        -25,\n        -35\n    ],\n    BU: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUacute: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUcircumflex: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUdieresis: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUgrave: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUmacron: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUogonek: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    BUring: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    DA: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAbreve: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAogonek: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAring: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DAtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DV: [\n        -40,\n        -40,\n        -70,\n        -70,\n        -40,\n        -50,\n        -40,\n        -40\n    ],\n    DW: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -30\n    ],\n    DY: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DYacute: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DYdieresis: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    Dcomma: [\n        -30,\n        -30,\n        -70,\n        -70\n    ],\n    Dperiod: [\n        -30,\n        -30,\n        -70,\n        -70,\n        -20\n    ],\n    DcaronA: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAbreve: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAogonek: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAring: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronAtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcaronV: [\n        -40,\n        -40,\n        -70,\n        -70,\n        -40,\n        -50,\n        -40,\n        -40\n    ],\n    DcaronW: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -30\n    ],\n    DcaronY: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DcaronYacute: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DcaronYdieresis: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    Dcaroncomma: [\n        -30,\n        -30,\n        -70,\n        -70\n    ],\n    Dcaronperiod: [\n        -30,\n        -30,\n        -70,\n        -70,\n        -20\n    ],\n    DcroatA: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAbreve: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAogonek: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAring: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatAtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -35,\n        -25,\n        -35,\n        -40\n    ],\n    DcroatV: [\n        -40,\n        -40,\n        -70,\n        -70,\n        -40,\n        -50,\n        -40,\n        -40\n    ],\n    DcroatW: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -30\n    ],\n    DcroatY: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DcroatYacute: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    DcroatYdieresis: [\n        -70,\n        -70,\n        -90,\n        -90,\n        -40,\n        -50,\n        -40,\n        -55\n    ],\n    Dcroatcomma: [\n        -30,\n        -30,\n        -70,\n        -70\n    ],\n    Dcroatperiod: [\n        -30,\n        -30,\n        -70,\n        -70,\n        -20\n    ],\n    FA: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAacute: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAbreve: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAcircumflex: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAdieresis: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAgrave: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAmacron: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAogonek: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAring: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    FAtilde: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -90,\n        -100,\n        -115,\n        -74\n    ],\n    Fa: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Faacute: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Fabreve: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Facircumflex: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Fadieresis: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Fagrave: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Famacron: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Faogonek: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Faring: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Fatilde: [\n        -20,\n        -20,\n        -50,\n        -50,\n        -25,\n        -95,\n        -75,\n        -15\n    ],\n    Fcomma: [\n        -100,\n        -100,\n        -150,\n        -150,\n        -92,\n        -129,\n        -135,\n        -80\n    ],\n    Fperiod: [\n        -100,\n        -100,\n        -150,\n        -150,\n        -110,\n        -129,\n        -135,\n        -80\n    ],\n    JA: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAbreve: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAogonek: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAring: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    JAtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -25,\n        -40,\n        -60\n    ],\n    Jcomma: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        -25\n    ],\n    Jperiod: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -20,\n        -10,\n        -25\n    ],\n    Ju: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Juacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jucircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Judieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jugrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Juhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jumacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Juogonek: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Juring: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    KO: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOacute: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOcircumflex: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOdieresis: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOgrave: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOhungarumlaut: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOmacron: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOslash: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KOtilde: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    Ke: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Keacute: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kecaron: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kecircumflex: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kedieresis: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kedotaccent: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kegrave: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kemacron: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Keogonek: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Ko: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Koacute: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kocircumflex: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kodieresis: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kograve: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kohungarumlaut: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Komacron: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Koslash: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kotilde: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Ku: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kuring: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Ky: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    Kyacute: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    Kydieresis: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    KcommaaccentO: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOacute: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOcircumflex: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOdieresis: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOgrave: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOhungarumlaut: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOmacron: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOslash: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    KcommaaccentOtilde: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -30\n    ],\n    Kcommaaccente: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccenteacute: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentecaron: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentecircumflex: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentedieresis: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentedotaccent: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentegrave: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccentemacron: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccenteogonek: [\n        -15,\n        -15,\n        -40,\n        -40,\n        -25,\n        -25,\n        -35,\n        -25\n    ],\n    Kcommaaccento: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentoacute: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentocircumflex: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentodieresis: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentograve: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentohungarumlaut: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentomacron: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentoslash: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentotilde: [\n        -35,\n        -35,\n        -40,\n        -40,\n        -25,\n        -25,\n        -40,\n        -35\n    ],\n    Kcommaaccentu: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentuacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentucircumflex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentudieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentugrave: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentuhungarumlaut: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentumacron: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccentuogonek: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccenturing: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -15,\n        -20,\n        -40,\n        -15\n    ],\n    Kcommaaccenty: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    Kcommaaccentyacute: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    Kcommaaccentydieresis: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -45,\n        -20,\n        -40,\n        -25\n    ],\n    LT: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LTcaron: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LTcommaaccent: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LV: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -92,\n        -37,\n        -55,\n        -100\n    ],\n    LW: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -92,\n        -37,\n        -55,\n        -74\n    ],\n    LY: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LYacute: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LYdieresis: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    Lquotedblright: [\n        -140,\n        -140,\n        -140,\n        -140,\n        -20\n    ],\n    Lquoteright: [\n        -140,\n        -140,\n        -160,\n        -160,\n        -110,\n        -55,\n        -37,\n        -92\n    ],\n    Ly: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lyacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lydieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    LacuteT: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LacuteTcaron: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LacuteTcommaaccent: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LacuteV: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -92,\n        -37,\n        -55,\n        -100\n    ],\n    LacuteW: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -92,\n        -37,\n        -55,\n        -74\n    ],\n    LacuteY: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LacuteYacute: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LacuteYdieresis: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    Lacutequotedblright: [\n        -140,\n        -140,\n        -140,\n        -140,\n        -20\n    ],\n    Lacutequoteright: [\n        -140,\n        -140,\n        -160,\n        -160,\n        -110,\n        -55,\n        -37,\n        -92\n    ],\n    Lacutey: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lacuteyacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lacuteydieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    LcommaaccentT: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LcommaaccentTcaron: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LcommaaccentTcommaaccent: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LcommaaccentV: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -92,\n        -37,\n        -55,\n        -100\n    ],\n    LcommaaccentW: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -92,\n        -37,\n        -55,\n        -74\n    ],\n    LcommaaccentY: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LcommaaccentYacute: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LcommaaccentYdieresis: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    Lcommaaccentquotedblright: [\n        -140,\n        -140,\n        -140,\n        -140,\n        -20\n    ],\n    Lcommaaccentquoteright: [\n        -140,\n        -140,\n        -160,\n        -160,\n        -110,\n        -55,\n        -37,\n        -92\n    ],\n    Lcommaaccenty: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lcommaaccentyacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lcommaaccentydieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    LslashT: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LslashTcaron: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LslashTcommaaccent: [\n        -90,\n        -90,\n        -110,\n        -110,\n        -92,\n        -18,\n        -20,\n        -92\n    ],\n    LslashV: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -92,\n        -37,\n        -55,\n        -100\n    ],\n    LslashW: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -92,\n        -37,\n        -55,\n        -74\n    ],\n    LslashY: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LslashYacute: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    LslashYdieresis: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -37,\n        -20,\n        -100\n    ],\n    Lslashquotedblright: [\n        -140,\n        -140,\n        -140,\n        -140,\n        -20\n    ],\n    Lslashquoteright: [\n        -140,\n        -140,\n        -160,\n        -160,\n        -110,\n        -55,\n        -37,\n        -92\n    ],\n    Lslashy: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lslashyacute: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    Lslashydieresis: [\n        -30,\n        -30,\n        -30,\n        -30,\n        -55,\n        -37,\n        -30,\n        -55\n    ],\n    OA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Ocomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Operiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OacuteA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OacuteT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OacuteTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OacuteTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OacuteV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OacuteW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OacuteX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OacuteY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OacuteYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OacuteYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Oacutecomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Oacuteperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OcircumflexA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OcircumflexT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OcircumflexTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OcircumflexTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OcircumflexV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OcircumflexW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OcircumflexX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OcircumflexY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OcircumflexYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OcircumflexYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Ocircumflexcomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Ocircumflexperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OdieresisA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OdieresisT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OdieresisTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OdieresisTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OdieresisV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OdieresisW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OdieresisX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OdieresisY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OdieresisYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OdieresisYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Odieresiscomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Odieresisperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OgraveA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OgraveT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OgraveTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OgraveTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OgraveV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OgraveW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OgraveX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OgraveY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OgraveYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OgraveYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Ogravecomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Ograveperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OhungarumlautA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OhungarumlautT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OhungarumlautTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OhungarumlautTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OhungarumlautV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OhungarumlautW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OhungarumlautX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OhungarumlautY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OhungarumlautYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OhungarumlautYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Ohungarumlautcomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Ohungarumlautperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OmacronA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OmacronT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OmacronTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OmacronTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OmacronV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OmacronW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OmacronX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OmacronY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OmacronYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OmacronYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Omacroncomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Omacronperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OslashA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OslashT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OslashTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OslashTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OslashV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OslashW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OslashX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OslashY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OslashYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OslashYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Oslashcomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Oslashperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OtildeA: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAacute: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAbreve: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAcircumflex: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAdieresis: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAgrave: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAmacron: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAogonek: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAring: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeAtilde: [\n        -50,\n        -50,\n        -20,\n        -20,\n        -40,\n        -40,\n        -55,\n        -35\n    ],\n    OtildeT: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OtildeTcaron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OtildeTcommaaccent: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OtildeV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OtildeW: [\n        -50,\n        -50,\n        -30,\n        -30,\n        -50,\n        -50,\n        -50,\n        -35\n    ],\n    OtildeX: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    OtildeY: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OtildeYacute: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    OtildeYdieresis: [\n        -70,\n        -70,\n        -70,\n        -70,\n        -50,\n        -50,\n        -50,\n        -50\n    ],\n    Otildecomma: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    Otildeperiod: [\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    PA: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAacute: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAbreve: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAcircumflex: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAdieresis: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAgrave: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAmacron: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAogonek: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAring: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    PAtilde: [\n        -100,\n        -100,\n        -120,\n        -120,\n        -74,\n        -85,\n        -90,\n        -92\n    ],\n    Pa: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Paacute: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Pabreve: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Pacircumflex: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Padieresis: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Pagrave: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Pamacron: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Paogonek: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Paring: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Patilde: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -10,\n        -40,\n        -80,\n        -15\n    ],\n    Pcomma: [\n        -120,\n        -120,\n        -180,\n        -180,\n        -92,\n        -129,\n        -135,\n        -111\n    ],\n    Pe: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Peacute: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pecaron: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pecircumflex: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pedieresis: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pedotaccent: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pegrave: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Pemacron: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Peogonek: [\n        -30,\n        -30,\n        -50,\n        -50,\n        -20,\n        -50,\n        -80\n    ],\n    Po: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Poacute: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Pocircumflex: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Podieresis: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Pograve: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Pohungarumlaut: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Pomacron: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Poslash: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Potilde: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -55,\n        -80\n    ],\n    Pperiod: [\n        -120,\n        -120,\n        -180,\n        -180,\n        -110,\n        -129,\n        -135,\n        -111\n    ],\n    QU: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUacute: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUcircumflex: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUdieresis: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUgrave: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUmacron: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUogonek: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    QUring: [\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    Qcomma: [\n        20,\n        20\n    ],\n    Qperiod: [\n        20,\n        20,\n        0,\n        0,\n        -20\n    ],\n    RO: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROslash: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    ROtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RT: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RTcaron: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RTcommaaccent: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RU: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUacute: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUcircumflex: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUdieresis: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUgrave: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUhungarumlaut: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUmacron: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUogonek: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RUring: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -55,\n        -18,\n        -18,\n        -80\n    ],\n    RW: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -35,\n        -18,\n        -18,\n        -55\n    ],\n    RY: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RYacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RYdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RacuteO: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOslash: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteOtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteT: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RacuteTcaron: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RacuteTcommaaccent: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RacuteU: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUacute: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUcircumflex: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUdieresis: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUgrave: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUhungarumlaut: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUmacron: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUogonek: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteUring: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RacuteV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -55,\n        -18,\n        -18,\n        -80\n    ],\n    RacuteW: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -35,\n        -18,\n        -18,\n        -55\n    ],\n    RacuteY: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RacuteYacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RacuteYdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcaronO: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOslash: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronOtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronT: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcaronTcaron: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcaronTcommaaccent: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcaronU: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUacute: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUcircumflex: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUdieresis: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUgrave: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUhungarumlaut: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUmacron: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUogonek: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronUring: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcaronV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -55,\n        -18,\n        -18,\n        -80\n    ],\n    RcaronW: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -35,\n        -18,\n        -18,\n        -55\n    ],\n    RcaronY: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcaronYacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcaronYdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcommaaccentO: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOslash: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentOtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentT: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcommaaccentTcaron: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcommaaccentTcommaaccent: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -40,\n        -30,\n        0,\n        -60\n    ],\n    RcommaaccentU: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUacute: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUcircumflex: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUdieresis: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUgrave: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUhungarumlaut: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUmacron: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUogonek: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentUring: [\n        -20,\n        -20,\n        -40,\n        -40,\n        -30,\n        -40,\n        -40,\n        -40\n    ],\n    RcommaaccentV: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -55,\n        -18,\n        -18,\n        -80\n    ],\n    RcommaaccentW: [\n        -40,\n        -40,\n        -30,\n        -30,\n        -35,\n        -18,\n        -18,\n        -55\n    ],\n    RcommaaccentY: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcommaaccentYacute: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    RcommaaccentYdieresis: [\n        -50,\n        -50,\n        -50,\n        -50,\n        -35,\n        -18,\n        -18,\n        -65\n    ],\n    TA: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAbreve: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAcircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAdieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAgrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAmacron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAring: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TAtilde: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TO: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOhungarumlaut: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOslash: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TOtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    Ta: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Taacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tabreve: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tacircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tadieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tagrave: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tamacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Taogonek: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Taring: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tatilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -55,\n        -50\n    ],\n    Tcomma: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -92,\n        -74,\n        -74\n    ],\n    Te: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Teacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tecaron: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tecircumflex: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -52,\n        -70\n    ],\n    Tedieresis: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Tedotaccent: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tegrave: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -70\n    ],\n    Temacron: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Teogonek: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Thyphen: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -92\n    ],\n    To: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Toacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tocircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Todieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tograve: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tohungarumlaut: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tomacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Toslash: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Totilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tperiod: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -90,\n        -92,\n        -74,\n        -74\n    ],\n    Tr: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tracute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Trcommaaccent: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tsemicolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -65,\n        -55\n    ],\n    Tu: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tuacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tucircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tudieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tugrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tuhungarumlaut: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tumacron: [\n        -90,\n        -90,\n        -60,\n        -60,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tuogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Turing: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tw: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -74,\n        -37,\n        -74,\n        -80\n    ],\n    Ty: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tyacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tydieresis: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -34,\n        -37,\n        -34,\n        -80\n    ],\n    TcaronA: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAbreve: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAcircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAdieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAgrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAmacron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAring: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronAtilde: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcaronO: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOhungarumlaut: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOslash: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcaronOtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    Tcarona: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronaacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronabreve: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronacircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronadieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcaronagrave: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcaronamacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcaronaogonek: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronaring: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcaronatilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcaroncolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -55,\n        -50\n    ],\n    Tcaroncomma: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -92,\n        -74,\n        -74\n    ],\n    Tcarone: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcaroneacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcaronecaron: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcaronecircumflex: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -52,\n        -30\n    ],\n    Tcaronedieresis: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Tcaronedotaccent: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcaronegrave: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -70\n    ],\n    Tcaronemacron: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Tcaroneogonek: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcaronhyphen: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -92\n    ],\n    Tcarono: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronoacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronocircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronodieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronograve: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronohungarumlaut: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronomacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronoslash: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronotilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcaronperiod: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -90,\n        -92,\n        -74,\n        -74\n    ],\n    Tcaronr: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaronracute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaronrcommaaccent: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaronsemicolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -65,\n        -55\n    ],\n    Tcaronu: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronuacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronucircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronudieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronugrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronuhungarumlaut: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronumacron: [\n        -90,\n        -90,\n        -60,\n        -60,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronuogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronuring: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcaronw: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -74,\n        -37,\n        -74,\n        -80\n    ],\n    Tcarony: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tcaronyacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tcaronydieresis: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -34,\n        -37,\n        -34,\n        -80\n    ],\n    TcommaaccentA: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAbreve: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAcircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAdieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAgrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAmacron: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAring: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentAtilde: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -90,\n        -55,\n        -50,\n        -93\n    ],\n    TcommaaccentO: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOcircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOdieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOgrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOhungarumlaut: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOmacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOslash: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    TcommaaccentOtilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -18,\n        -18,\n        -18,\n        -18\n    ],\n    Tcommaaccenta: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentaacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentabreve: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentacircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentadieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcommaaccentagrave: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcommaaccentamacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcommaaccentaogonek: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentaring: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -80\n    ],\n    Tcommaaccentatilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -52,\n        -92,\n        -92,\n        -40\n    ],\n    Tcommaaccentcolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -55,\n        -50\n    ],\n    Tcommaaccentcomma: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -92,\n        -74,\n        -74\n    ],\n    Tcommaaccente: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcommaaccenteacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcommaaccentecaron: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcommaaccentecircumflex: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -52,\n        -30\n    ],\n    Tcommaaccentedieresis: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Tcommaaccentedotaccent: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcommaaccentegrave: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -30\n    ],\n    Tcommaaccentemacron: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -52,\n        -52,\n        -52,\n        -70\n    ],\n    Tcommaaccenteogonek: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -92,\n        -92,\n        -92,\n        -70\n    ],\n    Tcommaaccenthyphen: [\n        -120,\n        -120,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -92\n    ],\n    Tcommaaccento: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentoacute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentocircumflex: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentodieresis: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentograve: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentohungarumlaut: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentomacron: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentoslash: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentotilde: [\n        -80,\n        -80,\n        -60,\n        -60,\n        -92,\n        -95,\n        -92,\n        -80\n    ],\n    Tcommaaccentperiod: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -90,\n        -92,\n        -74,\n        -74\n    ],\n    Tcommaaccentr: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentracute: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentrcommaaccent: [\n        -80,\n        -80,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentsemicolon: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -74,\n        -74,\n        -65,\n        -55\n    ],\n    Tcommaaccentu: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentuacute: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentucircumflex: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentudieresis: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentugrave: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentuhungarumlaut: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentumacron: [\n        -90,\n        -90,\n        -60,\n        -60,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentuogonek: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccenturing: [\n        -90,\n        -90,\n        -120,\n        -120,\n        -92,\n        -37,\n        -55,\n        -45\n    ],\n    Tcommaaccentw: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -74,\n        -37,\n        -74,\n        -80\n    ],\n    Tcommaaccenty: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tcommaaccentyacute: [\n        -60,\n        -60,\n        -120,\n        -120,\n        -34,\n        -37,\n        -74,\n        -80\n    ],\n    Tcommaaccentydieresis: [\n        -60,\n        -60,\n        -60,\n        -60,\n        -34,\n        -37,\n        -34,\n        -80\n    ],\n    UA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Ucomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Uperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UacuteA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UacuteAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Uacutecomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Uacuteperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UcircumflexA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UcircumflexAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Ucircumflexcomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Ucircumflexperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UdieresisA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UdieresisAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Udieresiscomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Udieresisperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UgraveA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UgraveAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Ugravecomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Ugraveperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UhungarumlautA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UhungarumlautAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Uhungarumlautcomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Uhungarumlautperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UmacronA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UmacronAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Umacroncomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Umacronperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UogonekA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UogonekAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Uogonekcomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Uogonekperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    UringA: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAogonek: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAring: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    UringAtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -60,\n        -45,\n        -40,\n        -40\n    ],\n    Uringcomma: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    Uringperiod: [\n        -30,\n        -30,\n        -40,\n        -40,\n        -50,\n        0,\n        -25\n    ],\n    VA: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAacute: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAbreve: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAcircumflex: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAdieresis: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAgrave: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAmacron: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAogonek: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAring: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VAtilde: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -135,\n        -85,\n        -60,\n        -135\n    ],\n    VG: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -30,\n        -10,\n        0,\n        -15\n    ],\n    VGbreve: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -30,\n        -10,\n        0,\n        -15\n    ],\n    VGcommaaccent: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -30,\n        -10,\n        0,\n        -15\n    ],\n    VO: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOacute: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOcircumflex: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOdieresis: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOgrave: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOhungarumlaut: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOmacron: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOslash: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    VOtilde: [\n        -50,\n        -50,\n        -40,\n        -40,\n        -45,\n        -30,\n        -30,\n        -40\n    ],\n    Va: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -111\n    ],\n    Vaacute: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -111\n    ],\n    Vabreve: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -111\n    ],\n    Vacircumflex: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -71\n    ],\n    Vadieresis: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -71\n    ],\n    Vagrave: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -71\n    ],\n    Vamacron: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -71\n    ],\n    Vaogonek: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -111\n    ],\n    Varing: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -111\n    ],\n    Vatilde: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -111,\n        -111,\n        -71\n    ],\n    Vcolon: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -92,\n        -74,\n        -65,\n        -74\n    ],\n    Vcomma: [\n        -120,\n        -120,\n        -125,\n        -125,\n        -129,\n        -129,\n        -129,\n        -129\n    ],\n    Ve: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -111\n    ],\n    Veacute: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -111\n    ],\n    Vecaron: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -71\n    ],\n    Vecircumflex: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -71\n    ],\n    Vedieresis: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -71,\n        -71,\n        -71\n    ],\n    Vedotaccent: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -111\n    ],\n    Vegrave: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -71,\n        -71,\n        -71\n    ],\n    Vemacron: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -71,\n        -71,\n        -71\n    ],\n    Veogonek: [\n        -50,\n        -50,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -111\n    ],\n    Vhyphen: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -74,\n        -70,\n        -55,\n        -100\n    ],\n    Vo: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -129\n    ],\n    Voacute: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -129\n    ],\n    Vocircumflex: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -129\n    ],\n    Vodieresis: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -89\n    ],\n    Vograve: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -89\n    ],\n    Vohungarumlaut: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -129\n    ],\n    Vomacron: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -89\n    ],\n    Voslash: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -129\n    ],\n    Votilde: [\n        -90,\n        -90,\n        -80,\n        -80,\n        -100,\n        -111,\n        -111,\n        -89\n    ],\n    Vperiod: [\n        -120,\n        -120,\n        -125,\n        -125,\n        -145,\n        -129,\n        -129,\n        -129\n    ],\n    Vsemicolon: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -92,\n        -74,\n        -74,\n        -74\n    ],\n    Vu: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vuacute: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vucircumflex: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vudieresis: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vugrave: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vuhungarumlaut: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vumacron: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vuogonek: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    Vuring: [\n        -60,\n        -60,\n        -70,\n        -70,\n        -92,\n        -55,\n        -74,\n        -75\n    ],\n    WA: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAacute: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAbreve: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAcircumflex: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAdieresis: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAgrave: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAmacron: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAogonek: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAring: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WAtilde: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -120,\n        -74,\n        -60,\n        -120\n    ],\n    WO: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOcircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOdieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOgrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOmacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOslash: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    WOtilde: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -10,\n        -15,\n        -25,\n        -10\n    ],\n    Wa: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Waacute: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wabreve: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wacircumflex: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wadieresis: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wagrave: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wamacron: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Waogonek: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Waring: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Watilde: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -65,\n        -85,\n        -92,\n        -80\n    ],\n    Wcolon: [\n        -10,\n        -10,\n        0,\n        0,\n        -55,\n        -55,\n        -65,\n        -37\n    ],\n    Wcomma: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -92,\n        -74,\n        -92,\n        -92\n    ],\n    We: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Weacute: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Wecaron: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Wecircumflex: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Wedieresis: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -50,\n        -52,\n        -40\n    ],\n    Wedotaccent: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Wegrave: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -50,\n        -52,\n        -40\n    ],\n    Wemacron: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -50,\n        -52,\n        -40\n    ],\n    Weogonek: [\n        -35,\n        -35,\n        -30,\n        -30,\n        -65,\n        -90,\n        -92,\n        -80\n    ],\n    Whyphen: [\n        -40,\n        -40,\n        -40,\n        -40,\n        -37,\n        -50,\n        -37,\n        -65\n    ],\n    Wo: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Woacute: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wocircumflex: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wodieresis: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wograve: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wohungarumlaut: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Womacron: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Woslash: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wotilde: [\n        -60,\n        -60,\n        -30,\n        -30,\n        -75,\n        -80,\n        -92,\n        -80\n    ],\n    Wperiod: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -92,\n        -74,\n        -92,\n        -92\n    ],\n    Wsemicolon: [\n        -10,\n        -10,\n        0,\n        0,\n        -55,\n        -55,\n        -65,\n        -37\n    ],\n    Wu: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wuacute: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wucircumflex: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wudieresis: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wugrave: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wuhungarumlaut: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wumacron: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wuogonek: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wuring: [\n        -45,\n        -45,\n        -30,\n        -30,\n        -50,\n        -55,\n        -55,\n        -50\n    ],\n    Wy: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -60,\n        -55,\n        -70,\n        -73\n    ],\n    Wyacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -60,\n        -55,\n        -70,\n        -73\n    ],\n    Wydieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -60,\n        -55,\n        -70,\n        -73\n    ],\n    YA: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAacute: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAbreve: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAcircumflex: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAdieresis: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAgrave: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAmacron: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAogonek: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAring: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YAtilde: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YO: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOacute: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOcircumflex: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOdieresis: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOgrave: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOhungarumlaut: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOmacron: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOslash: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YOtilde: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    Ya: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yaacute: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yabreve: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacircumflex: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yadieresis: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yagrave: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yamacron: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yaogonek: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yaring: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yatilde: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Ycolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Ycomma: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -92,\n        -92,\n        -129\n    ],\n    Ye: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yeacute: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yecaron: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yecircumflex: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -71,\n        -92,\n        -100\n    ],\n    Yedieresis: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yedotaccent: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yegrave: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yemacron: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yeogonek: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yo: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yoacute: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yocircumflex: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yodieresis: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yograve: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yohungarumlaut: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yomacron: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yoslash: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yotilde: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yperiod: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -74,\n        -92,\n        -129\n    ],\n    Ysemicolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Yu: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yuacute: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yucircumflex: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yudieresis: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yugrave: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yuhungarumlaut: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yumacron: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yuogonek: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yuring: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    YacuteA: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAacute: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAbreve: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAcircumflex: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAdieresis: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAgrave: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAmacron: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAogonek: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAring: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteAtilde: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YacuteO: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOacute: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOcircumflex: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOdieresis: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOgrave: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOhungarumlaut: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOmacron: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOslash: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YacuteOtilde: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    Yacutea: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacuteaacute: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacuteabreve: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacuteacircumflex: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacuteadieresis: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yacuteagrave: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yacuteamacron: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yacuteaogonek: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacutearing: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Yacuteatilde: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Yacutecolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Yacutecomma: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -92,\n        -92,\n        -129\n    ],\n    Yacutee: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yacuteeacute: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yacuteecaron: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yacuteecircumflex: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -71,\n        -92,\n        -100\n    ],\n    Yacuteedieresis: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yacuteedotaccent: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yacuteegrave: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yacuteemacron: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Yacuteeogonek: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Yacuteo: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yacuteoacute: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yacuteocircumflex: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yacuteodieresis: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yacuteograve: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yacuteohungarumlaut: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yacuteomacron: [\n        -100,\n        -100,\n        -70,\n        -70,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yacuteoslash: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Yacuteotilde: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Yacuteperiod: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -74,\n        -92,\n        -129\n    ],\n    Yacutesemicolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Yacuteu: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yacuteuacute: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yacuteucircumflex: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yacuteudieresis: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yacuteugrave: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yacuteuhungarumlaut: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yacuteumacron: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Yacuteuogonek: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Yacuteuring: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    YdieresisA: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAacute: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAbreve: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAcircumflex: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAdieresis: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAgrave: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAmacron: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAogonek: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAring: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisAtilde: [\n        -110,\n        -110,\n        -110,\n        -110,\n        -110,\n        -74,\n        -50,\n        -120\n    ],\n    YdieresisO: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOacute: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOcircumflex: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOdieresis: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOgrave: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOhungarumlaut: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOmacron: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOslash: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    YdieresisOtilde: [\n        -70,\n        -70,\n        -85,\n        -85,\n        -35,\n        -25,\n        -15,\n        -30\n    ],\n    Ydieresisa: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisaacute: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisabreve: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisacircumflex: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisadieresis: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Ydieresisagrave: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Ydieresisamacron: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -60\n    ],\n    Ydieresisaogonek: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisaring: [\n        -90,\n        -90,\n        -140,\n        -140,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresisatilde: [\n        -90,\n        -90,\n        -70,\n        -70,\n        -85,\n        -92,\n        -92,\n        -100\n    ],\n    Ydieresiscolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Ydieresiscomma: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -92,\n        -92,\n        -129\n    ],\n    Ydieresise: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Ydieresiseacute: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Ydieresisecaron: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Ydieresisecircumflex: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -71,\n        -92,\n        -100\n    ],\n    Ydieresisedieresis: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Ydieresisedotaccent: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Ydieresisegrave: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Ydieresisemacron: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -71,\n        -71,\n        -52,\n        -60\n    ],\n    Ydieresiseogonek: [\n        -80,\n        -80,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -100\n    ],\n    Ydieresiso: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Ydieresisoacute: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Ydieresisocircumflex: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Ydieresisodieresis: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Ydieresisograve: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Ydieresisohungarumlaut: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Ydieresisomacron: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Ydieresisoslash: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -110\n    ],\n    Ydieresisotilde: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -111,\n        -111,\n        -92,\n        -70\n    ],\n    Ydieresisperiod: [\n        -100,\n        -100,\n        -140,\n        -140,\n        -92,\n        -74,\n        -92,\n        -129\n    ],\n    Ydieresissemicolon: [\n        -50,\n        -50,\n        -60,\n        -60,\n        -92,\n        -92,\n        -65,\n        -92\n    ],\n    Ydieresisu: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Ydieresisuacute: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Ydieresisucircumflex: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Ydieresisudieresis: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Ydieresisugrave: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Ydieresisuhungarumlaut: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Ydieresisumacron: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -71\n    ],\n    Ydieresisuogonek: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    Ydieresisuring: [\n        -100,\n        -100,\n        -110,\n        -110,\n        -92,\n        -92,\n        -92,\n        -111\n    ],\n    ag: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    agbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    agcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    av: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    aw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ay: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    ayacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aacuteg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aacutegbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aacutegcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aacutev: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    aacutew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    aacutey: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aacuteyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aacuteydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    abreveg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    abrevegbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    abrevegcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    abrevev: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    abrevew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    abrevey: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    abreveyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    abreveydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    acircumflexg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    acircumflexgbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    acircumflexgcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    acircumflexv: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    acircumflexw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    acircumflexy: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    acircumflexyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    acircumflexydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    adieresisg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    adieresisgbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    adieresisgcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    adieresisv: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    adieresisw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    adieresisy: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    adieresisyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    adieresisydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    agraveg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    agravegbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    agravegcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    agravev: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    agravew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    agravey: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    agraveyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    agraveydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    amacrong: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    amacrongbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    amacrongcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    amacronv: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    amacronw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    amacrony: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    amacronyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    amacronydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aogonekg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aogonekgbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aogonekgcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aogonekv: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    aogonekw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    aogoneky: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aogonekyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aogonekydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aringg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aringgbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aringgcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    aringv: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    aringw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    aringy: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aringyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    aringydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    atildeg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    atildegbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    atildegcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    atildev: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -25,\n        0,\n        0,\n        -20\n    ],\n    atildew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        -15\n    ],\n    atildey: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    atildeyacute: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    atildeydieresis: [\n        -20,\n        -20,\n        -30,\n        -30\n    ],\n    bl: [\n        -10,\n        -10,\n        -20,\n        -20\n    ],\n    blacute: [\n        -10,\n        -10,\n        -20,\n        -20\n    ],\n    blcommaaccent: [\n        -10,\n        -10,\n        -20,\n        -20\n    ],\n    blslash: [\n        -10,\n        -10,\n        -20,\n        -20\n    ],\n    bu: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    buacute: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    bucircumflex: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    budieresis: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    bugrave: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    buhungarumlaut: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    bumacron: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    buogonek: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    buring: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    bv: [\n        -20,\n        -20,\n        -20,\n        -20,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    by: [\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    byacute: [\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    bydieresis: [\n        -20,\n        -20,\n        -20,\n        -20\n    ],\n    ch: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        -10,\n        -15\n    ],\n    ck: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    ckcommaaccent: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    cl: [\n        -20,\n        -20\n    ],\n    clacute: [\n        -20,\n        -20\n    ],\n    clcommaaccent: [\n        -20,\n        -20\n    ],\n    clslash: [\n        -20,\n        -20\n    ],\n    cy: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    cyacute: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    cydieresis: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    cacuteh: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        -10,\n        -15\n    ],\n    cacutek: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    cacutekcommaaccent: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    cacutel: [\n        -20,\n        -20\n    ],\n    cacutelacute: [\n        -20,\n        -20\n    ],\n    cacutelcommaaccent: [\n        -20,\n        -20\n    ],\n    cacutelslash: [\n        -20,\n        -20\n    ],\n    cacutey: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    cacuteyacute: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    cacuteydieresis: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccaronh: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        -10,\n        -15\n    ],\n    ccaronk: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    ccaronkcommaaccent: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    ccaronl: [\n        -20,\n        -20\n    ],\n    ccaronlacute: [\n        -20,\n        -20\n    ],\n    ccaronlcommaaccent: [\n        -20,\n        -20\n    ],\n    ccaronlslash: [\n        -20,\n        -20\n    ],\n    ccarony: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccaronyacute: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccaronydieresis: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccedillah: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        -10,\n        -15\n    ],\n    ccedillak: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    ccedillakcommaaccent: [\n        -20,\n        -20,\n        -20,\n        -20,\n        0,\n        -10,\n        -20\n    ],\n    ccedillal: [\n        -20,\n        -20\n    ],\n    ccedillalacute: [\n        -20,\n        -20\n    ],\n    ccedillalcommaaccent: [\n        -20,\n        -20\n    ],\n    ccedillalslash: [\n        -20,\n        -20\n    ],\n    ccedillay: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccedillayacute: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ccedillaydieresis: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -15\n    ],\n    colonspace: [\n        -40,\n        -40,\n        -50,\n        -50\n    ],\n    commaquotedblright: [\n        -120,\n        -120,\n        -100,\n        -100,\n        -45,\n        -95,\n        -140,\n        -70\n    ],\n    commaquoteright: [\n        -120,\n        -120,\n        -100,\n        -100,\n        -55,\n        -95,\n        -140,\n        -70\n    ],\n    commaspace: [\n        -40,\n        -40\n    ],\n    dd: [\n        -10,\n        -10\n    ],\n    ddcroat: [\n        -10,\n        -10\n    ],\n    dv: [\n        -15,\n        -15\n    ],\n    dw: [\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    dy: [\n        -15,\n        -15\n    ],\n    dyacute: [\n        -15,\n        -15\n    ],\n    dydieresis: [\n        -15,\n        -15\n    ],\n    dcroatd: [\n        -10,\n        -10\n    ],\n    dcroatdcroat: [\n        -10,\n        -10\n    ],\n    dcroatv: [\n        -15,\n        -15\n    ],\n    dcroatw: [\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    dcroaty: [\n        -15,\n        -15\n    ],\n    dcroatyacute: [\n        -15,\n        -15\n    ],\n    dcroatydieresis: [\n        -15,\n        -15\n    ],\n    ecomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    eperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    ev: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    ew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    ex: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    ey: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eacutecomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    eacuteperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    eacutev: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    eacutew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    eacutex: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    eacutey: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eacuteyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eacuteydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecaroncomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    ecaronperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    ecaronv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    ecaronw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    ecaronx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    ecarony: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecaronyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecaronydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecircumflexcomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    ecircumflexperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    ecircumflexv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    ecircumflexw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    ecircumflexx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    ecircumflexy: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecircumflexyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    ecircumflexydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edieresiscomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    edieresisperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    edieresisv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    edieresisw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    edieresisx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    edieresisy: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edieresisyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edieresisydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edotaccentcomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    edotaccentperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    edotaccentv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    edotaccentw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    edotaccentx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    edotaccenty: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edotaccentyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    edotaccentydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    egravecomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    egraveperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    egravev: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    egravew: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    egravex: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    egravey: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    egraveyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    egraveydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    emacroncomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    emacronperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    emacronv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    emacronw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    emacronx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    emacrony: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    emacronyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    emacronydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eogonekcomma: [\n        10,\n        10,\n        -15,\n        -15,\n        0,\n        0,\n        -10\n    ],\n    eogonekperiod: [\n        20,\n        20,\n        -15,\n        -15,\n        0,\n        0,\n        -15\n    ],\n    eogonekv: [\n        -15,\n        -15,\n        -30,\n        -30,\n        -15,\n        0,\n        -15,\n        -25\n    ],\n    eogonekw: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -15,\n        -25\n    ],\n    eogonekx: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        -20,\n        -15\n    ],\n    eogoneky: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eogonekyacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    eogonekydieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        0,\n        0,\n        -30,\n        -15\n    ],\n    fcomma: [\n        -10,\n        -10,\n        -30,\n        -30,\n        -15,\n        -10,\n        -10\n    ],\n    fe: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    feacute: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    fecaron: [\n        -10,\n        -10,\n        -30,\n        -30\n    ],\n    fecircumflex: [\n        -10,\n        -10,\n        -30,\n        -30\n    ],\n    fedieresis: [\n        -10,\n        -10,\n        -30,\n        -30\n    ],\n    fedotaccent: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    fegrave: [\n        -10,\n        -10,\n        -30,\n        -30\n    ],\n    femacron: [\n        -10,\n        -10,\n        -30,\n        -30\n    ],\n    feogonek: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    fo: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    foacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    focircumflex: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    fodieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25\n    ],\n    fograve: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    fohungarumlaut: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    fomacron: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25\n    ],\n    foslash: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    fotilde: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -25,\n        -10\n    ],\n    fperiod: [\n        -10,\n        -10,\n        -30,\n        -30,\n        -15,\n        -10,\n        -15\n    ],\n    fquotedblright: [\n        30,\n        30,\n        60,\n        60,\n        50\n    ],\n    fquoteright: [\n        30,\n        30,\n        50,\n        50,\n        55,\n        55,\n        92,\n        55\n    ],\n    ge: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    geacute: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gecaron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gecircumflex: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gedieresis: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gedotaccent: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gegrave: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gemacron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    geogonek: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ggbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ggcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbrevee: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveeacute: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveecaron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveecircumflex: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveedieresis: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveedotaccent: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveegrave: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveemacron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveeogonek: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbreveg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbrevegbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbrevegcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccente: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccenteacute: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentecaron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentecircumflex: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentedieresis: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentedotaccent: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentegrave: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentemacron: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccenteogonek: [\n        10,\n        10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentg: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentgbreve: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentgcommaaccent: [\n        -10,\n        -10,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    hy: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -15,\n        0,\n        0,\n        -5\n    ],\n    hyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -15,\n        0,\n        0,\n        -5\n    ],\n    hydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        -15,\n        0,\n        0,\n        -5\n    ],\n    ko: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    koacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kocircumflex: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kodieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kograve: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kohungarumlaut: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    komacron: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    koslash: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kotilde: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccento: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentoacute: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentocircumflex: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentodieresis: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentograve: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentohungarumlaut: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentomacron: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentoslash: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    kcommaaccentotilde: [\n        -15,\n        -15,\n        -20,\n        -20,\n        -15,\n        -10,\n        -10,\n        -10\n    ],\n    lw: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ly: [\n        -15,\n        -15\n    ],\n    lyacute: [\n        -15,\n        -15\n    ],\n    lydieresis: [\n        -15,\n        -15\n    ],\n    lacutew: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    lacutey: [\n        -15,\n        -15\n    ],\n    lacuteyacute: [\n        -15,\n        -15\n    ],\n    lacuteydieresis: [\n        -15,\n        -15\n    ],\n    lcommaaccentw: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    lcommaaccenty: [\n        -15,\n        -15\n    ],\n    lcommaaccentyacute: [\n        -15,\n        -15\n    ],\n    lcommaaccentydieresis: [\n        -15,\n        -15\n    ],\n    lslashw: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    lslashy: [\n        -15,\n        -15\n    ],\n    lslashyacute: [\n        -15,\n        -15\n    ],\n    lslashydieresis: [\n        -15,\n        -15\n    ],\n    mu: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    muacute: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    mucircumflex: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    mudieresis: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    mugrave: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    muhungarumlaut: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    mumacron: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    muogonek: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    muring: [\n        -20,\n        -20,\n        -10,\n        -10\n    ],\n    my: [\n        -30,\n        -30,\n        -15,\n        -15\n    ],\n    myacute: [\n        -30,\n        -30,\n        -15,\n        -15\n    ],\n    mydieresis: [\n        -30,\n        -30,\n        -15,\n        -15\n    ],\n    nu: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nuacute: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nucircumflex: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nudieresis: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nugrave: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nuhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    numacron: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nuogonek: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nuring: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nv: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    ny: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    nyacute: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    nydieresis: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    nacuteu: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteuacute: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteucircumflex: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteudieresis: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteugrave: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteuhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteumacron: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteuogonek: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacuteuring: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    nacutev: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    nacutey: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    nacuteyacute: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    nacuteydieresis: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncaronu: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronuacute: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronucircumflex: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronudieresis: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronugrave: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronuhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronumacron: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronuogonek: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronuring: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncaronv: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    ncarony: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncaronyacute: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncaronydieresis: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncommaaccentu: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentuacute: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentucircumflex: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentudieresis: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentugrave: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentuhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentumacron: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentuogonek: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccenturing: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ncommaaccentv: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    ncommaaccenty: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncommaaccentyacute: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ncommaaccentydieresis: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ntildeu: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeuacute: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeucircumflex: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeudieresis: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeugrave: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeuhungarumlaut: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeumacron: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeuogonek: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildeuring: [\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    ntildev: [\n        -40,\n        -40,\n        -20,\n        -20,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    ntildey: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ntildeyacute: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ntildeydieresis: [\n        -20,\n        -20,\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        -15\n    ],\n    ov: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    ow: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    ox: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    oy: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oacutev: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    oacutew: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    oacutex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    oacutey: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oacuteyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oacuteydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ocircumflexv: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    ocircumflexw: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    ocircumflexx: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    ocircumflexy: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ocircumflexyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ocircumflexydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    odieresisv: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    odieresisw: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    odieresisx: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    odieresisy: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    odieresisyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    odieresisydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ogravev: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    ogravew: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    ogravex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    ogravey: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ograveyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ograveydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ohungarumlautv: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    ohungarumlautw: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    ohungarumlautx: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    ohungarumlauty: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ohungarumlautyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    ohungarumlautydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    omacronv: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    omacronw: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    omacronx: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    omacrony: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    omacronyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    omacronydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oslashv: [\n        -20,\n        -20,\n        -70,\n        -70,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    oslashw: [\n        -15,\n        -15,\n        -70,\n        -70,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    oslashx: [\n        -30,\n        -30,\n        -85,\n        -85,\n        0,\n        -10\n    ],\n    oslashy: [\n        -20,\n        -20,\n        -70,\n        -70,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oslashyacute: [\n        -20,\n        -20,\n        -70,\n        -70,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    oslashydieresis: [\n        -20,\n        -20,\n        -70,\n        -70,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    otildev: [\n        -20,\n        -20,\n        -15,\n        -15,\n        -10,\n        -15,\n        -10,\n        -15\n    ],\n    otildew: [\n        -15,\n        -15,\n        -15,\n        -15,\n        -10,\n        -25,\n        0,\n        -25\n    ],\n    otildex: [\n        -30,\n        -30,\n        -30,\n        -30,\n        0,\n        -10\n    ],\n    otildey: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    otildeyacute: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    otildeydieresis: [\n        -20,\n        -20,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    py: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    pyacute: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    pydieresis: [\n        -15,\n        -15,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    periodquotedblright: [\n        -120,\n        -120,\n        -100,\n        -100,\n        -55,\n        -95,\n        -140,\n        -70\n    ],\n    periodquoteright: [\n        -120,\n        -120,\n        -100,\n        -100,\n        -55,\n        -95,\n        -140,\n        -70\n    ],\n    periodspace: [\n        -40,\n        -40,\n        -60,\n        -60\n    ],\n    quotedblrightspace: [\n        -80,\n        -80,\n        -40,\n        -40\n    ],\n    quoteleftquoteleft: [\n        -46,\n        -46,\n        -57,\n        -57,\n        -63,\n        -74,\n        -111,\n        -74\n    ],\n    quoterightd: [\n        -80,\n        -80,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterightdcroat: [\n        -80,\n        -80,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterightl: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    quoterightlacute: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    quoterightlcommaaccent: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    quoterightlslash: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    quoterightquoteright: [\n        -46,\n        -46,\n        -57,\n        -57,\n        -63,\n        -74,\n        -111,\n        -74\n    ],\n    quoterightr: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterightracute: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterightrcaron: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterightrcommaaccent: [\n        -40,\n        -40,\n        -50,\n        -50,\n        -20,\n        -15,\n        -25,\n        -50\n    ],\n    quoterights: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -37,\n        -74,\n        -40,\n        -55\n    ],\n    quoterightsacute: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -37,\n        -74,\n        -40,\n        -55\n    ],\n    quoterightscaron: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -37,\n        -74,\n        -40,\n        -55\n    ],\n    quoterightscedilla: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -37,\n        -74,\n        -40,\n        -55\n    ],\n    quoterightscommaaccent: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -37,\n        -74,\n        -40,\n        -55\n    ],\n    quoterightspace: [\n        -80,\n        -80,\n        -70,\n        -70,\n        -74,\n        -74,\n        -111,\n        -74\n    ],\n    quoterightv: [\n        -20,\n        -20,\n        0,\n        0,\n        -20,\n        -15,\n        -10,\n        -50\n    ],\n    rc: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rccaron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rccedilla: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcomma: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -92,\n        -65,\n        -111,\n        -40\n    ],\n    rd: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rdcroat: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rg: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rgbreve: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rgcommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rhyphen: [\n        -20,\n        -20,\n        0,\n        0,\n        -37,\n        0,\n        -20,\n        -20\n    ],\n    ro: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    roacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rocircumflex: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rodieresis: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rograve: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rohungarumlaut: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    romacron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    roslash: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rotilde: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rperiod: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -100,\n        -65,\n        -111,\n        -55\n    ],\n    rq: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rs: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rsacute: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rscaron: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rscedilla: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rscommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rt: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rtcommaaccent: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rv: [\n        10,\n        10,\n        30,\n        30,\n        -10\n    ],\n    ry: [\n        10,\n        10,\n        30,\n        30\n    ],\n    ryacute: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rydieresis: [\n        10,\n        10,\n        30,\n        30\n    ],\n    racutec: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racutecacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteccaron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteccedilla: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racutecomma: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -92,\n        -65,\n        -111,\n        -40\n    ],\n    racuted: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    racutedcroat: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    racuteg: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    racutegbreve: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    racutegcommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    racutehyphen: [\n        -20,\n        -20,\n        0,\n        0,\n        -37,\n        0,\n        -20,\n        -20\n    ],\n    racuteo: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteoacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteocircumflex: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteodieresis: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteograve: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteohungarumlaut: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteomacron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteoslash: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteotilde: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    racuteperiod: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -100,\n        -65,\n        -111,\n        -55\n    ],\n    racuteq: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racutes: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    racutesacute: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    racutescaron: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    racutescedilla: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    racutescommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    racutet: [\n        20,\n        20,\n        40,\n        40\n    ],\n    racutetcommaaccent: [\n        20,\n        20,\n        40,\n        40\n    ],\n    racutev: [\n        10,\n        10,\n        30,\n        30,\n        -10\n    ],\n    racutey: [\n        10,\n        10,\n        30,\n        30\n    ],\n    racuteyacute: [\n        10,\n        10,\n        30,\n        30\n    ],\n    racuteydieresis: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcaronc: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaroncacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronccaron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronccedilla: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaroncomma: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -92,\n        -65,\n        -111,\n        -40\n    ],\n    rcarond: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rcarondcroat: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rcarong: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcarongbreve: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcarongcommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcaronhyphen: [\n        -20,\n        -20,\n        0,\n        0,\n        -37,\n        0,\n        -20,\n        -20\n    ],\n    rcarono: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronoacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronocircumflex: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronodieresis: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronograve: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronohungarumlaut: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronomacron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronoslash: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronotilde: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcaronperiod: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -100,\n        -65,\n        -111,\n        -55\n    ],\n    rcaronq: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcarons: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcaronsacute: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcaronscaron: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcaronscedilla: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcaronscommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcaront: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rcarontcommaaccent: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rcaronv: [\n        10,\n        10,\n        30,\n        30,\n        -10\n    ],\n    rcarony: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcaronyacute: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcaronydieresis: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcommaaccentc: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentcacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentccaron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentccedilla: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentcomma: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -92,\n        -65,\n        -111,\n        -40\n    ],\n    rcommaaccentd: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rcommaaccentdcroat: [\n        -20,\n        -20,\n        0,\n        0,\n        0,\n        0,\n        -37\n    ],\n    rcommaaccentg: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcommaaccentgbreve: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcommaaccentgcommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        -10,\n        0,\n        -37,\n        -18\n    ],\n    rcommaaccenthyphen: [\n        -20,\n        -20,\n        0,\n        0,\n        -37,\n        0,\n        -20,\n        -20\n    ],\n    rcommaaccento: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentoacute: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentocircumflex: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentodieresis: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentograve: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentohungarumlaut: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentomacron: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentoslash: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentotilde: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -45\n    ],\n    rcommaaccentperiod: [\n        -60,\n        -60,\n        -50,\n        -50,\n        -100,\n        -65,\n        -111,\n        -55\n    ],\n    rcommaaccentq: [\n        -20,\n        -20,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccents: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcommaaccentsacute: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcommaaccentscaron: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcommaaccentscedilla: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcommaaccentscommaaccent: [\n        -15,\n        -15,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    rcommaaccentt: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rcommaaccenttcommaaccent: [\n        20,\n        20,\n        40,\n        40\n    ],\n    rcommaaccentv: [\n        10,\n        10,\n        30,\n        30,\n        -10\n    ],\n    rcommaaccenty: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcommaaccentyacute: [\n        10,\n        10,\n        30,\n        30\n    ],\n    rcommaaccentydieresis: [\n        10,\n        10,\n        30,\n        30\n    ],\n    sw: [\n        -15,\n        -15,\n        -30,\n        -30\n    ],\n    sacutew: [\n        -15,\n        -15,\n        -30,\n        -30\n    ],\n    scaronw: [\n        -15,\n        -15,\n        -30,\n        -30\n    ],\n    scedillaw: [\n        -15,\n        -15,\n        -30,\n        -30\n    ],\n    scommaaccentw: [\n        -15,\n        -15,\n        -30,\n        -30\n    ],\n    semicolonspace: [\n        -40,\n        -40,\n        -50,\n        -50\n    ],\n    spaceT: [\n        -100,\n        -100,\n        -50,\n        -50,\n        -30,\n        0,\n        -18,\n        -18\n    ],\n    spaceTcaron: [\n        -100,\n        -100,\n        -50,\n        -50,\n        -30,\n        0,\n        -18,\n        -18\n    ],\n    spaceTcommaaccent: [\n        -100,\n        -100,\n        -50,\n        -50,\n        -30,\n        0,\n        -18,\n        -18\n    ],\n    spaceV: [\n        -80,\n        -80,\n        -50,\n        -50,\n        -45,\n        -70,\n        -35,\n        -50\n    ],\n    spaceW: [\n        -80,\n        -80,\n        -40,\n        -40,\n        -30,\n        -70,\n        -40,\n        -30\n    ],\n    spaceY: [\n        -120,\n        -120,\n        -90,\n        -90,\n        -55,\n        -70,\n        -75,\n        -90\n    ],\n    spaceYacute: [\n        -120,\n        -120,\n        -90,\n        -90,\n        -55,\n        -70,\n        -75,\n        -90\n    ],\n    spaceYdieresis: [\n        -120,\n        -120,\n        -90,\n        -90,\n        -55,\n        -70,\n        -75,\n        -90\n    ],\n    spacequotedblleft: [\n        -80,\n        -80,\n        -30,\n        -30\n    ],\n    spacequoteleft: [\n        -60,\n        -60,\n        -60,\n        -60\n    ],\n    va: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vaacute: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vabreve: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vacircumflex: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vadieresis: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vagrave: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vamacron: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vaogonek: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    varing: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vatilde: [\n        -20,\n        -20,\n        -25,\n        -25,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    vcomma: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -55,\n        -37,\n        -74,\n        -65\n    ],\n    vo: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    voacute: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vocircumflex: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vodieresis: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vograve: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vohungarumlaut: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vomacron: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    voslash: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    votilde: [\n        -30,\n        -30,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -20\n    ],\n    vperiod: [\n        -80,\n        -80,\n        -80,\n        -80,\n        -70,\n        -37,\n        -74,\n        -65\n    ],\n    wcomma: [\n        -40,\n        -40,\n        -60,\n        -60,\n        -55,\n        -37,\n        -74,\n        -65\n    ],\n    wo: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    woacute: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wocircumflex: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wodieresis: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wograve: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wohungarumlaut: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    womacron: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    woslash: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wotilde: [\n        -20,\n        -20,\n        -10,\n        -10,\n        -10,\n        -15,\n        0,\n        -10\n    ],\n    wperiod: [\n        -40,\n        -40,\n        -60,\n        -60,\n        -70,\n        -37,\n        -74,\n        -65\n    ],\n    xe: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xeacute: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xecaron: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xecircumflex: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xedieresis: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xedotaccent: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xegrave: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xemacron: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    xeogonek: [\n        -10,\n        -10,\n        -30,\n        -30,\n        0,\n        -10,\n        0,\n        -15\n    ],\n    ya: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yaacute: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yabreve: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacircumflex: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yadieresis: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yagrave: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yamacron: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yaogonek: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yaring: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yatilde: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ycomma: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -55,\n        -37,\n        -55,\n        -65\n    ],\n    ye: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yeacute: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yecaron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yecircumflex: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yedieresis: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yedotaccent: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yegrave: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yemacron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yeogonek: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yo: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yoacute: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yocircumflex: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yodieresis: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yograve: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yohungarumlaut: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yomacron: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yoslash: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yotilde: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yperiod: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -70,\n        -37,\n        -55,\n        -65\n    ],\n    yacutea: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteaacute: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteabreve: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteacircumflex: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteadieresis: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteagrave: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteamacron: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteaogonek: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacutearing: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacuteatilde: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    yacutecomma: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -55,\n        -37,\n        -55,\n        -65\n    ],\n    yacutee: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteeacute: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteecaron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteecircumflex: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteedieresis: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteedotaccent: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteegrave: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteemacron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteeogonek: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    yacuteo: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteoacute: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteocircumflex: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteodieresis: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteograve: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteohungarumlaut: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteomacron: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteoslash: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteotilde: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    yacuteperiod: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -70,\n        -37,\n        -55,\n        -65\n    ],\n    ydieresisa: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisaacute: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisabreve: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisacircumflex: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisadieresis: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisagrave: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisamacron: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisaogonek: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisaring: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresisatilde: [\n        -30,\n        -30,\n        -20,\n        -20\n    ],\n    ydieresiscomma: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -55,\n        -37,\n        -55,\n        -65\n    ],\n    ydieresise: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresiseacute: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisecaron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisecircumflex: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisedieresis: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisedotaccent: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisegrave: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresisemacron: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresiseogonek: [\n        -10,\n        -10,\n        -20,\n        -20,\n        -10\n    ],\n    ydieresiso: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisoacute: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisocircumflex: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisodieresis: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisograve: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisohungarumlaut: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisomacron: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisoslash: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisotilde: [\n        -25,\n        -25,\n        -20,\n        -20,\n        -25\n    ],\n    ydieresisperiod: [\n        -80,\n        -80,\n        -100,\n        -100,\n        -70,\n        -37,\n        -55,\n        -65\n    ],\n    ze: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zeacute: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zecaron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zecircumflex: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zedieresis: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zedotaccent: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zegrave: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zemacron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zeogonek: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacutee: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteeacute: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteecaron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteecircumflex: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteedieresis: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteedotaccent: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteegrave: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteemacron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zacuteeogonek: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcarone: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaroneacute: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronecaron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronecircumflex: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronedieresis: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronedotaccent: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronegrave: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaronemacron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zcaroneogonek: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccente: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccenteacute: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentecaron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentecircumflex: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentedieresis: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentedotaccent: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentegrave: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccentemacron: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    zdotaccenteogonek: [\n        10,\n        10,\n        -15,\n        -15\n    ],\n    Bcomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Bperiod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Ccomma: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Cperiod: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Cacutecomma: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Cacuteperiod: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Ccaroncomma: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Ccaronperiod: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Ccedillacomma: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Ccedillaperiod: [\n        0,\n        0,\n        -30,\n        -30\n    ],\n    Fe: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Feacute: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fecaron: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fecircumflex: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fedieresis: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fedotaccent: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fegrave: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Femacron: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Feogonek: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -100,\n        -75\n    ],\n    Fo: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Foacute: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Focircumflex: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fodieresis: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fograve: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fohungarumlaut: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fomacron: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Foslash: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fotilde: [\n        0,\n        0,\n        -30,\n        -30,\n        -25,\n        -70,\n        -105,\n        -15\n    ],\n    Fr: [\n        0,\n        0,\n        -45,\n        -45,\n        0,\n        -50,\n        -55\n    ],\n    Fracute: [\n        0,\n        0,\n        -45,\n        -45,\n        0,\n        -50,\n        -55\n    ],\n    Frcaron: [\n        0,\n        0,\n        -45,\n        -45,\n        0,\n        -50,\n        -55\n    ],\n    Frcommaaccent: [\n        0,\n        0,\n        -45,\n        -45,\n        0,\n        -50,\n        -55\n    ],\n    Ja: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jaacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jabreve: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jacircumflex: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jadieresis: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jagrave: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jamacron: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jaogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jaring: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    Jatilde: [\n        0,\n        0,\n        -20,\n        -20,\n        -15,\n        -40,\n        -35\n    ],\n    LcaronT: [\n        0,\n        0,\n        -110,\n        -110\n    ],\n    LcaronTcaron: [\n        0,\n        0,\n        -110,\n        -110\n    ],\n    LcaronTcommaaccent: [\n        0,\n        0,\n        -110,\n        -110\n    ],\n    LcaronV: [\n        0,\n        0,\n        -110,\n        -110\n    ],\n    LcaronW: [\n        0,\n        0,\n        -70,\n        -70\n    ],\n    LcaronY: [\n        0,\n        0,\n        -140,\n        -140\n    ],\n    LcaronYacute: [\n        0,\n        0,\n        -140,\n        -140\n    ],\n    LcaronYdieresis: [\n        0,\n        0,\n        -140,\n        -140\n    ],\n    Lcaronquotedblright: [\n        0,\n        0,\n        -140,\n        -140\n    ],\n    Lcaronquoteright: [\n        0,\n        0,\n        -160,\n        -160,\n        0,\n        0,\n        0,\n        -92\n    ],\n    Lcarony: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -55\n    ],\n    Lcaronyacute: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -55\n    ],\n    Lcaronydieresis: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -55\n    ],\n    Scomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Speriod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Sacutecomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Sacuteperiod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scaroncomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scaronperiod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scedillacomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scedillaperiod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scommaaccentcomma: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Scommaaccentperiod: [\n        0,\n        0,\n        -20,\n        -20\n    ],\n    Trcaron: [\n        0,\n        0,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaronrcaron: [\n        0,\n        0,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentrcaron: [\n        0,\n        0,\n        -120,\n        -120,\n        -74,\n        -37,\n        -55,\n        -35\n    ],\n    Yhyphen: [\n        0,\n        0,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -111\n    ],\n    Yi: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Yiacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Yiogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Yacutehyphen: [\n        0,\n        0,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -111\n    ],\n    Yacutei: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Yacuteiacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Yacuteiogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Ydieresishyphen: [\n        0,\n        0,\n        -140,\n        -140,\n        -92,\n        -92,\n        -74,\n        -111\n    ],\n    Ydieresisi: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Ydieresisiacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    Ydieresisiogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -37,\n        -55,\n        -74,\n        -55\n    ],\n    bb: [\n        0,\n        0,\n        -10,\n        -10,\n        -10,\n        -10\n    ],\n    bcomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    bperiod: [\n        0,\n        0,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40,\n        -40\n    ],\n    ccomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    cacutecomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    ccaroncomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    ccedillacomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    fa: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    faacute: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fabreve: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    facircumflex: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fadieresis: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fagrave: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    famacron: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    faogonek: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    faring: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fatilde: [\n        0,\n        0,\n        -30,\n        -30,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fdotlessi: [\n        0,\n        0,\n        -28,\n        -28,\n        -35,\n        -30,\n        -60,\n        -50\n    ],\n    gr: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gracute: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    grcaron: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    grcommaaccent: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gbrever: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gbreveracute: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gbrevercaron: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gbrevercommaaccent: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gcommaaccentr: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gcommaaccentracute: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gcommaaccentrcaron: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    gcommaaccentrcommaaccent: [\n        0,\n        0,\n        -10,\n        -10\n    ],\n    ke: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    keacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kecaron: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kecircumflex: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kedieresis: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kedotaccent: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kegrave: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kemacron: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    keogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccente: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccenteacute: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentecaron: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentecircumflex: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentedieresis: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentedotaccent: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentegrave: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccentemacron: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    kcommaaccenteogonek: [\n        0,\n        0,\n        -20,\n        -20,\n        -10,\n        -30,\n        -10,\n        -10\n    ],\n    ocomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    operiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    oacutecomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    oacuteperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ocircumflexcomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ocircumflexperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    odieresiscomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    odieresisperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ogravecomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ograveperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ohungarumlautcomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    ohungarumlautperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    omacroncomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    omacronperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    oslasha: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashaacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashabreve: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashacircumflex: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashadieresis: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashagrave: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashamacron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashaogonek: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslasharing: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashatilde: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashb: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashc: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashcacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashccaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashccedilla: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashcomma: [\n        0,\n        0,\n        -95,\n        -95\n    ],\n    oslashd: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashdcroat: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashe: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslasheacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashecaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashecircumflex: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashedieresis: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashedotaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashegrave: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashemacron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslasheogonek: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashf: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashg: [\n        0,\n        0,\n        -55,\n        -55,\n        0,\n        0,\n        -10\n    ],\n    oslashgbreve: [\n        0,\n        0,\n        -55,\n        -55,\n        0,\n        0,\n        -10\n    ],\n    oslashgcommaaccent: [\n        0,\n        0,\n        -55,\n        -55,\n        0,\n        0,\n        -10\n    ],\n    oslashh: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashi: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashiacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashicircumflex: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashidieresis: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashigrave: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashimacron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashiogonek: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashj: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashk: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashkcommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashl: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashlacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashlcommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashlslash: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashm: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashn: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashnacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashncaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashncommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashntilde: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslasho: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashoacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashocircumflex: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashodieresis: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashograve: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashohungarumlaut: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashomacron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashoslash: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashotilde: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashp: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashperiod: [\n        0,\n        0,\n        -95,\n        -95\n    ],\n    oslashq: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashr: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashracute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashrcaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashrcommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashs: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashsacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashscaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashscedilla: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashscommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslasht: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashtcommaaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashu: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashuacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashucircumflex: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashudieresis: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashugrave: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashuhungarumlaut: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashumacron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashuogonek: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashuring: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashz: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashzacute: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashzcaron: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    oslashzdotaccent: [\n        0,\n        0,\n        -55,\n        -55\n    ],\n    otildecomma: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    otildeperiod: [\n        0,\n        0,\n        -40,\n        -40\n    ],\n    pcomma: [\n        0,\n        0,\n        -35,\n        -35\n    ],\n    pperiod: [\n        0,\n        0,\n        -35,\n        -35\n    ],\n    ra: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    raacute: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rabreve: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racircumflex: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    radieresis: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    ragrave: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    ramacron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    raogonek: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    raring: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    ratilde: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    ri: [\n        0,\n        0,\n        15,\n        15\n    ],\n    riacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ricircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ridieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rigrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rimacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    riogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rk: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rkcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rl: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rlacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rlcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rlslash: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rm: [\n        0,\n        0,\n        25,\n        25\n    ],\n    rn: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rnacute: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rncaron: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rncommaaccent: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rntilde: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rp: [\n        0,\n        0,\n        30,\n        30,\n        -10\n    ],\n    rsemicolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    ru: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ruacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rucircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rudieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rugrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ruhungarumlaut: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rumacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ruogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    ruring: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutea: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteaacute: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteabreve: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteacircumflex: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteadieresis: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteagrave: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteamacron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteaogonek: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racutearing: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racuteatilde: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    racutecolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    racutei: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteiacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteicircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteidieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteigrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteimacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteiogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutekcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutel: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutelacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutelcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutelslash: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racutem: [\n        0,\n        0,\n        25,\n        25\n    ],\n    racuten: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    racutenacute: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    racutencaron: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    racutencommaaccent: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    racutentilde: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    racutep: [\n        0,\n        0,\n        30,\n        30,\n        -10\n    ],\n    racutesemicolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    racuteu: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteuacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteucircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteudieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteugrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteuhungarumlaut: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteumacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteuogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    racuteuring: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcarona: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronaacute: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronabreve: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronacircumflex: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronadieresis: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronagrave: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronamacron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronaogonek: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronaring: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaronatilde: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcaroncolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    rcaroni: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaroniacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronicircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronidieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronigrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronimacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaroniogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronk: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronkcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronl: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronlacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronlcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronlslash: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronm: [\n        0,\n        0,\n        25,\n        25\n    ],\n    rcaronn: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcaronnacute: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcaronncaron: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcaronncommaaccent: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcaronntilde: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcaronp: [\n        0,\n        0,\n        30,\n        30,\n        -10\n    ],\n    rcaronsemicolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    rcaronu: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronuacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronucircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronudieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronugrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronuhungarumlaut: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronumacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronuogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcaronuring: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccenta: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentaacute: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentabreve: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentacircumflex: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentadieresis: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentagrave: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentamacron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentaogonek: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentaring: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentatilde: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        0,\n        -15\n    ],\n    rcommaaccentcolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    rcommaaccenti: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentiacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccenticircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentidieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentigrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentimacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentiogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentk: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentkcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentl: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentlacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentlcommaaccent: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentlslash: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentm: [\n        0,\n        0,\n        25,\n        25\n    ],\n    rcommaaccentn: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcommaaccentnacute: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcommaaccentncaron: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcommaaccentncommaaccent: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcommaaccentntilde: [\n        0,\n        0,\n        25,\n        25,\n        -15\n    ],\n    rcommaaccentp: [\n        0,\n        0,\n        30,\n        30,\n        -10\n    ],\n    rcommaaccentsemicolon: [\n        0,\n        0,\n        30,\n        30\n    ],\n    rcommaaccentu: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentuacute: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentucircumflex: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentudieresis: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentugrave: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentuhungarumlaut: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentumacron: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccentuogonek: [\n        0,\n        0,\n        15,\n        15\n    ],\n    rcommaaccenturing: [\n        0,\n        0,\n        15,\n        15\n    ],\n    scomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    speriod: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    sacutecomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    sacuteperiod: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scaroncomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scaronperiod: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scedillacomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scedillaperiod: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scommaaccentcomma: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    scommaaccentperiod: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    ve: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    veacute: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vecaron: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vecircumflex: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vedieresis: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vedotaccent: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vegrave: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    vemacron: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    veogonek: [\n        0,\n        0,\n        -25,\n        -25,\n        -10,\n        -15,\n        0,\n        -15\n    ],\n    wa: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    waacute: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    wabreve: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    wacircumflex: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    wadieresis: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    wagrave: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    wamacron: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    waogonek: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    waring: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    watilde: [\n        0,\n        0,\n        -15,\n        -15,\n        0,\n        -10,\n        0,\n        -10\n    ],\n    we: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    weacute: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wecaron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wecircumflex: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wedieresis: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wedotaccent: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wegrave: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    wemacron: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    weogonek: [\n        0,\n        0,\n        -10,\n        -10,\n        0,\n        -10\n    ],\n    zo: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zoacute: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zocircumflex: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zodieresis: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zograve: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zohungarumlaut: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zomacron: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zoslash: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zotilde: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteo: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteoacute: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteocircumflex: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteodieresis: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteograve: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteohungarumlaut: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteomacron: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteoslash: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zacuteotilde: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcarono: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronoacute: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronocircumflex: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronodieresis: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronograve: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronohungarumlaut: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronomacron: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronoslash: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zcaronotilde: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccento: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentoacute: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentocircumflex: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentodieresis: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentograve: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentohungarumlaut: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentomacron: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentoslash: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    zdotaccentotilde: [\n        0,\n        0,\n        -15,\n        -15\n    ],\n    Ap: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Aquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Aacutep: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Aacutequoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Abrevep: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Abrevequoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Acircumflexp: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Acircumflexquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Adieresisp: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Adieresisquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Agravep: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Agravequoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Amacronp: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Amacronquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Aogonekp: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Aogonekquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Aringp: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Aringquoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Atildep: [\n        0,\n        0,\n        0,\n        0,\n        -25\n    ],\n    Atildequoteright: [\n        0,\n        0,\n        0,\n        0,\n        -74,\n        -74,\n        -37,\n        -111\n    ],\n    Je: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jeacute: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jecaron: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jecircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jedieresis: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jedotaccent: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jegrave: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jemacron: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jeogonek: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jo: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Joacute: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jocircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jodieresis: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jograve: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Johungarumlaut: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jomacron: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Joslash: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    Jotilde: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        -40,\n        -25\n    ],\n    NA: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAacute: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAring: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteA: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAacute: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAring: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NacuteAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronA: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAacute: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAring: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcaronAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentA: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAacute: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAring: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NcommaaccentAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeA: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAacute: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAring: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    NtildeAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -20,\n        -30,\n        -27,\n        -35\n    ],\n    Ti: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tiacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tiogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaroni: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaroniacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcaroniogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccenti: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentiacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Tcommaaccentiogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -35\n    ],\n    Vi: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        -55,\n        -74,\n        -60\n    ],\n    Viacute: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        -55,\n        -74,\n        -60\n    ],\n    Vicircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        0,\n        -34,\n        -20\n    ],\n    Vidieresis: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        0,\n        -34,\n        -20\n    ],\n    Vigrave: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        0,\n        -34,\n        -20\n    ],\n    Vimacron: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        0,\n        -34,\n        -20\n    ],\n    Viogonek: [\n        0,\n        0,\n        0,\n        0,\n        -37,\n        -55,\n        -74,\n        -60\n    ],\n    Wi: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -40\n    ],\n    Wiacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -40\n    ],\n    Wiogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -37,\n        -55,\n        -40\n    ],\n    fi: [\n        0,\n        0,\n        0,\n        0,\n        -25,\n        0,\n        -20,\n        -20\n    ],\n    gperiod: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -15\n    ],\n    gbreveperiod: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -15\n    ],\n    gcommaaccentperiod: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -15\n    ],\n    iv: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    iacutev: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    icircumflexv: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    idieresisv: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    igravev: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    imacronv: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    iogonekv: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -25\n    ],\n    ky: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    kyacute: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    kydieresis: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    kcommaaccenty: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    kcommaaccentyacute: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    kcommaaccentydieresis: [\n        0,\n        0,\n        0,\n        0,\n        -15,\n        0,\n        -10,\n        -15\n    ],\n    quotedblleftA: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAacute: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAring: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quotedblleftAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftA: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAacute: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAring: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    quoteleftAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -10,\n        0,\n        0,\n        -80\n    ],\n    re: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    reacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    recaron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    recircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    redieresis: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    redotaccent: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    regrave: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    remacron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    reogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racutee: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteeacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteecaron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteecircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteedieresis: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteedotaccent: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteegrave: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteemacron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    racuteeogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcarone: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaroneacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronecaron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronecircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronedieresis: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronedotaccent: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronegrave: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaronemacron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcaroneogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccente: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccenteacute: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentecaron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentecircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentedieresis: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentedotaccent: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentegrave: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccentemacron: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    rcommaaccenteogonek: [\n        0,\n        0,\n        0,\n        0,\n        -18,\n        0,\n        -37\n    ],\n    spaceA: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAacute: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAbreve: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAcircumflex: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAdieresis: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAgrave: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAmacron: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAogonek: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAring: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    spaceAtilde: [\n        0,\n        0,\n        0,\n        0,\n        -55,\n        -37,\n        -18,\n        -55\n    ],\n    Fi: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Fiacute: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Ficircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Fidieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Figrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Fimacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    Fiogonek: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -45\n    ],\n    eb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    eacuteb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ecaronb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ecircumflexb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    edieresisb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    edotaccentb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    egraveb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    emacronb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    eogonekb: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ff: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -18,\n        -18,\n        -25\n    ],\n    quoterightt: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -37,\n        -30,\n        -18\n    ],\n    quoterighttcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        -37,\n        -30,\n        -18\n    ],\n    Yicircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yidieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yigrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yimacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yacuteicircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yacuteidieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yacuteigrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Yacuteimacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Ydieresisicircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Ydieresisidieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Ydieresisigrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    Ydieresisimacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -34\n    ],\n    eg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    egbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    egcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eacuteg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eacutegbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eacutegcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecarong: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecarongbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecarongcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecircumflexg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecircumflexgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    ecircumflexgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edieresisg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edieresisgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edieresisgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edotaccentg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edotaccentgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    edotaccentgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    egraveg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    egravegbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    egravegcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    emacrong: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    emacrongbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    emacrongcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eogonekg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eogonekgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    eogonekgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -40,\n        -15\n    ],\n    fiogonek: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -20\n    ],\n    gcomma: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gbrevecomma: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    gcommaaccentcomma: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    og: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ogbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ogcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    oacuteg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    oacutegbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    oacutegcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ocircumflexg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ocircumflexgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ocircumflexgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    odieresisg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    odieresisgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    odieresisgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ograveg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ogravegbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ogravegcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ohungarumlautg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ohungarumlautgbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    ohungarumlautgcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    omacrong: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    omacrongbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    omacrongcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    otildeg: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    otildegbreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    otildegcommaaccent: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -10\n    ],\n    fiacute: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -20\n    ],\n    ga: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gaacute: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gabreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gacircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gadieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gagrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gamacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gaogonek: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    garing: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gatilde: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbrevea: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveaacute: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveabreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveacircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveadieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveagrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveamacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveaogonek: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbrevearing: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gbreveatilde: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccenta: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentaacute: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentabreve: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentacircumflex: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentadieresis: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentagrave: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentamacron: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentaogonek: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentaring: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ],\n    gcommaaccentatilde: [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        -5\n    ]\n};\nvar data = {\n    attributes: attributes,\n    glyphWidths: glyphWidths,\n    kernPairs: kernPairs\n};\nvar initFont = function initFont(font) {\n    return [\n        font.FontName,\n        {\n            attributes: font,\n            glyphWidths: {},\n            kernPairs: {}\n        }\n    ];\n};\nvar expandData = function expandData(data) {\n    var attributes = data.attributes, glyphWidths = data.glyphWidths, kernPairs = data.kernPairs;\n    var fonts = attributes.map(initFont);\n    Object.keys(glyphWidths).forEach(function(key) {\n        glyphWidths[key].forEach(function(value, index) {\n            if (value) fonts[index][1].glyphWidths[key] = value;\n        });\n    });\n    Object.keys(kernPairs).forEach(function(key) {\n        kernPairs[key].forEach(function(value, index) {\n            if (value) fonts[index][1].kernPairs[key] = value;\n        });\n    });\n    return Object.fromEntries(fonts);\n};\nvar STANDARD_FONTS = expandData(data);\nvar createStandardFont = function createStandardFont(PDFFont) {\n    return /*#__PURE__*/ function(_PDFFont) {\n        _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(StandardFont, _PDFFont);\n        function StandardFont(document, name, id) {\n            var _this;\n            _this = _PDFFont.call(this) || this;\n            _this.document = document;\n            _this.name = name;\n            _this.id = id;\n            _this.font = AFMFont.fromJson(STANDARD_FONTS[_this.name]);\n            _this.ascender = _this.font.ascender;\n            _this.descender = _this.font.descender;\n            _this.bbox = _this.font.bbox;\n            _this.lineGap = _this.font.lineGap;\n            return _this;\n        }\n        var _proto = StandardFont.prototype;\n        _proto.embed = function embed() {\n            this.dictionary.data = {\n                Type: \"Font\",\n                BaseFont: this.name,\n                Subtype: \"Type1\",\n                Encoding: \"WinAnsiEncoding\"\n            };\n            return this.dictionary.end();\n        };\n        _proto.encode = function encode(text) {\n            var encoded = this.font.encodeText(text);\n            var glyphs = this.font.glyphsForString(\"\" + text);\n            var advances = this.font.advancesForGlyphs(glyphs);\n            var positions = [];\n            for(var i = 0; i < glyphs.length; i++){\n                var glyph = glyphs[i];\n                positions.push({\n                    xAdvance: advances[i],\n                    yAdvance: 0,\n                    xOffset: 0,\n                    yOffset: 0,\n                    advanceWidth: this.font.widthOfGlyph(glyph)\n                });\n            }\n            return [\n                encoded,\n                positions\n            ];\n        };\n        _proto.encodeGlyphs = function encodeGlyphs(glyphs) {\n            var res = [];\n            for(var _i = 0, _Array$from = Array.from(glyphs); _i < _Array$from.length; _i++){\n                var glyph = _Array$from[_i];\n                res.push((\"00\" + glyph.id.toString(16)).slice(-2));\n            }\n            return res;\n        };\n        _proto.widthOfString = function widthOfString(string, size) {\n            var glyphs = this.font.glyphsForString(\"\" + string);\n            var advances = this.font.advancesForGlyphs(glyphs);\n            var width = 0;\n            for(var _i2 = 0, _Array$from2 = Array.from(advances); _i2 < _Array$from2.length; _i2++){\n                var advance = _Array$from2[_i2];\n                width += advance;\n            }\n            var scale = size / 1000;\n            return width * scale;\n        };\n        StandardFont.isStandardFont = function isStandardFont(name) {\n            return name in STANDARD_FONTS;\n        };\n        return StandardFont;\n    }(PDFFont);\n};\nvar toHex = function toHex() {\n    for(var _len = arguments.length, codePoints = new Array(_len), _key = 0; _key < _len; _key++){\n        codePoints[_key] = arguments[_key];\n    }\n    var codes = Array.from(codePoints).map(function(code) {\n        return (\"0000\" + code.toString(16)).slice(-4);\n    });\n    return codes.join(\"\");\n};\nvar createEmbeddedFont = function createEmbeddedFont(PDFFont) {\n    return /*#__PURE__*/ function(_PDFFont) {\n        _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(EmbeddedFont, _PDFFont);\n        function EmbeddedFont(document, font, id) {\n            var _this;\n            _this = _PDFFont.call(this) || this;\n            _this.document = document;\n            _this.font = font;\n            _this.id = id;\n            _this.subset = _this.font.createSubset();\n            _this.unicode = [\n                [\n                    0\n                ]\n            ];\n            _this.widths = [\n                _this.font.getGlyph(0).advanceWidth\n            ];\n            _this.name = _this.font.postscriptName;\n            _this.scale = 1000 / _this.font.unitsPerEm;\n            _this.ascender = _this.font.ascent * _this.scale;\n            _this.descender = _this.font.descent * _this.scale;\n            _this.xHeight = _this.font.xHeight * _this.scale;\n            _this.capHeight = _this.font.capHeight * _this.scale;\n            _this.lineGap = _this.font.lineGap * _this.scale;\n            _this.bbox = _this.font.bbox;\n            _this.layoutCache = Object.create(null);\n            return _this;\n        }\n        var _proto = EmbeddedFont.prototype;\n        _proto.layoutRun = function layoutRun(text, features) {\n            var run = this.font.layout(text, features);\n            // Normalize position values\n            for(var i = 0; i < run.positions.length; i++){\n                var position = run.positions[i];\n                for(var key in position){\n                    position[key] *= this.scale;\n                }\n                position.advanceWidth = run.glyphs[i].advanceWidth * this.scale;\n            }\n            return run;\n        };\n        _proto.layoutCached = function layoutCached(text) {\n            var cached;\n            if (cached = this.layoutCache[text]) {\n                return cached;\n            }\n            var run = this.layoutRun(text);\n            this.layoutCache[text] = run;\n            return run;\n        };\n        _proto.layout = function layout(text, features, onlyWidth) {\n            // Skip the cache if any user defined features are applied\n            if (onlyWidth == null) {\n                onlyWidth = false;\n            }\n            if (features) {\n                return this.layoutRun(text, features);\n            }\n            var glyphs = onlyWidth ? null : [];\n            var positions = onlyWidth ? null : [];\n            var advanceWidth = 0;\n            // Split the string by words to increase cache efficiency.\n            // For this purpose, spaces and tabs are a good enough delimeter.\n            var last = 0;\n            var index = 0;\n            while(index <= text.length){\n                var needle = void 0;\n                if (index === text.length && last < index || (needle = text.charAt(index), [\n                    \" \",\n                    \"\t\"\n                ].includes(needle))) {\n                    var run = this.layoutCached(text.slice(last, ++index));\n                    if (!onlyWidth) {\n                        glyphs.push.apply(glyphs, Array.from(run.glyphs || []));\n                        positions.push.apply(positions, Array.from(run.positions || []));\n                    }\n                    advanceWidth += run.advanceWidth;\n                    last = index;\n                } else {\n                    index++;\n                }\n            }\n            return {\n                glyphs: glyphs,\n                positions: positions,\n                advanceWidth: advanceWidth\n            };\n        };\n        _proto.encode = function encode(text, features) {\n            var _this$layout = this.layout(text, features), glyphs = _this$layout.glyphs, positions = _this$layout.positions;\n            var res = [];\n            for(var i = 0; i < glyphs.length; i++){\n                var glyph = glyphs[i];\n                var gid = this.subset.includeGlyph(glyph.id);\n                res.push((\"0000\" + gid.toString(16)).slice(-4));\n                if (this.widths[gid] == null) {\n                    this.widths[gid] = glyph.advanceWidth * this.scale;\n                }\n                if (this.unicode[gid] == null) {\n                    this.unicode[gid] = glyph.codePoints;\n                }\n            }\n            return [\n                res,\n                positions\n            ];\n        };\n        _proto.encodeGlyphs = function encodeGlyphs(glyphs) {\n            var res = [];\n            for(var i = 0; i < glyphs.length; i++){\n                var glyph = glyphs[i];\n                var gid = this.subset.includeGlyph(glyph.id);\n                res.push((\"0000\" + gid.toString(16)).slice(-4));\n                if (this.widths[gid] == null) {\n                    this.widths[gid] = glyph.advanceWidth * this.scale;\n                }\n                if (this.unicode[gid] == null) {\n                    this.unicode[gid] = glyph.codePoints;\n                }\n            }\n            return res;\n        };\n        _proto.widthOfString = function widthOfString(string, size, features) {\n            var width = this.layout(string, features, true).advanceWidth;\n            var scale = size / 1000;\n            return width * scale;\n        };\n        _proto.embed = function embed() {\n            var isCFF = this.subset.cff != null;\n            var fontFile = this.document.ref();\n            if (isCFF) {\n                fontFile.data.Subtype = \"CIDFontType0C\";\n            }\n            fontFile.end(this.subset.encode());\n            var familyClass = ((this.font[\"OS/2\"] != null ? this.font[\"OS/2\"].sFamilyClass : undefined) || 0) >> 8;\n            var flags = 0;\n            if (this.font.post.isFixedPitch) {\n                flags |= 1 << 0;\n            }\n            if (1 <= familyClass && familyClass <= 7) {\n                flags |= 1 << 1;\n            }\n            flags |= 1 << 2; // assume the font uses non-latin characters\n            if (familyClass === 10) {\n                flags |= 1 << 3;\n            }\n            if (this.font.head.macStyle.italic) {\n                flags |= 1 << 6;\n            }\n            // generate a random tag (6 uppercase letters. 65 is the char code for 'A')\n            var tag = [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5\n            ].map(function() {\n                return String.fromCharCode(Math.random() * 26 + 65);\n            }).join(\"\");\n            var name = tag + \"+\" + this.font.postscriptName;\n            var bbox = this.font.bbox;\n            var descriptor = this.document.ref({\n                Type: \"FontDescriptor\",\n                FontName: name,\n                Flags: flags,\n                FontBBox: [\n                    bbox.minX * this.scale,\n                    bbox.minY * this.scale,\n                    bbox.maxX * this.scale,\n                    bbox.maxY * this.scale\n                ],\n                ItalicAngle: this.font.italicAngle,\n                Ascent: this.ascender,\n                Descent: this.descender,\n                CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,\n                XHeight: (this.font.xHeight || 0) * this.scale,\n                StemV: 0\n            }); // not sure how to calculate this\n            if (isCFF) {\n                descriptor.data.FontFile3 = fontFile;\n            } else {\n                descriptor.data.FontFile2 = fontFile;\n            }\n            descriptor.end();\n            var descendantFontData = {\n                Type: \"Font\",\n                Subtype: \"CIDFontType0\",\n                BaseFont: name,\n                CIDSystemInfo: {\n                    Registry: new String(\"Adobe\"),\n                    Ordering: new String(\"Identity\"),\n                    Supplement: 0\n                },\n                FontDescriptor: descriptor,\n                W: [\n                    0,\n                    this.widths\n                ]\n            };\n            if (!isCFF) {\n                descendantFontData.Subtype = \"CIDFontType2\";\n                descendantFontData.CIDToGIDMap = \"Identity\";\n            }\n            var descendantFont = this.document.ref(descendantFontData);\n            descendantFont.end();\n            this.dictionary.data = {\n                Type: \"Font\",\n                Subtype: \"Type0\",\n                BaseFont: name,\n                Encoding: \"Identity-H\",\n                DescendantFonts: [\n                    descendantFont\n                ],\n                ToUnicode: this.toUnicodeCmap()\n            };\n            return this.dictionary.end();\n        };\n        _proto.toUnicodeCmap = function toUnicodeCmap() {\n            var cmap = this.document.ref();\n            var entries = [];\n            var unicodeMap = \"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\";\n            for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(this.unicode.entries()), _step; !(_step = _iterator()).done;){\n                var _step$value = _step.value, index = _step$value[0], codePoints = _step$value[1];\n                var encoded = [];\n                if (entries.length >= 100) {\n                    unicodeMap += \"\\n\" + entries.length + \" beginbfchar\\n\" + entries.join(\"\\n\") + \"\\nendbfchar\";\n                    entries = [];\n                }\n                // encode codePoints to utf16\n                for(var _iterator2 = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(codePoints), _step2; !(_step2 = _iterator2()).done;){\n                    var value = _step2.value;\n                    if (value > 0xffff) {\n                        value -= 0x10000;\n                        encoded.push(toHex(value >>> 10 & 0x3ff | 0xd800));\n                        value = 0xdc00 | value & 0x3ff;\n                    }\n                    encoded.push(toHex(value));\n                }\n                // eslint-disable-next-line no-useless-concat\n                entries.push(\"<\" + toHex(index) + \">\" + \"<\" + encoded.join(\" \") + \">\");\n            }\n            if (entries.length) {\n                unicodeMap += \"\\n\" + entries.length + \" beginbfchar\\n\" + entries.join(\"\\n\") + \"\\nendbfchar\\n\";\n            }\n            unicodeMap += \"endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\";\n            cmap.end(unicodeMap);\n            return cmap;\n        };\n        return EmbeddedFont;\n    }(PDFFont);\n};\nvar PDFFont = /*#__PURE__*/ function() {\n    function PDFFont() {}\n    PDFFont.open = function open(document, src, family, id) {\n        var font;\n        if (typeof src === \"string\") {\n            if (StandardFont.isStandardFont(src)) {\n                return new StandardFont(document, src, id);\n            }\n            {\n                font = fontkit__WEBPACK_IMPORTED_MODULE_7__.openSync(src, family);\n            }\n        } else if (src instanceof Uint8Array) {\n            font = fontkit__WEBPACK_IMPORTED_MODULE_7__.create(src, family);\n        } else if (src instanceof ArrayBuffer) {\n            font = fontkit__WEBPACK_IMPORTED_MODULE_7__.create(new Uint8Array(src), family);\n        } else if (typeof src === \"object\") {\n            font = src;\n        }\n        if (font == null) {\n            throw new Error(\"Not a supported font format or standard PDF font.\");\n        }\n        return new EmbeddedFont(document, font, id);\n    };\n    var _proto = PDFFont.prototype;\n    _proto.encode = function encode() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    _proto.widthOfString = function widthOfString() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    _proto.ref = function ref() {\n        return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();\n    };\n    _proto.finalize = function finalize() {\n        if (this.embedded || this.dictionary == null) {\n            return;\n        }\n        this.embed();\n        return this.embedded = true;\n    };\n    _proto.embed = function embed() {\n        throw new Error(\"Must be implemented by subclasses\");\n    };\n    _proto.lineHeight = function lineHeight(size, includeGap) {\n        if (includeGap == null) {\n            includeGap = false;\n        }\n        var gap = includeGap ? this.lineGap : 0;\n        return (this.ascender + gap - this.descender) / 1000 * size;\n    };\n    return PDFFont;\n}();\nvar StandardFont = createStandardFont(PDFFont);\nvar EmbeddedFont = createEmbeddedFont(PDFFont);\nvar FontsMixin = {\n    initFonts: function initFonts() {\n        // Lookup table for embedded fonts\n        this._fontFamilies = {};\n        this._fontCount = 0;\n        // Font state\n        this._fontSize = 12;\n        this._font = null;\n        this._registeredFonts = {};\n        // Set the default font\n        return this.font(\"Helvetica\");\n    },\n    font: function font(src, family, size) {\n        var cacheKey, font;\n        if (typeof family === \"number\") {\n            size = family;\n            family = null;\n        }\n        // check registered fonts if src is a string\n        if (typeof src === \"string\" && this._registeredFonts[src]) {\n            cacheKey = src;\n            var _this$_registeredFont = this._registeredFonts[src];\n            src = _this$_registeredFont.src;\n            family = _this$_registeredFont.family;\n        } else {\n            cacheKey = family || src;\n            if (typeof cacheKey !== \"string\") {\n                cacheKey = null;\n            }\n        }\n        if (size != null) {\n            this.fontSize(size);\n        }\n        // fast path: check if the font is already in the PDF\n        if (font = this._fontFamilies[cacheKey]) {\n            this._font = font;\n            return this;\n        }\n        // load the font\n        var id = \"F\" + ++this._fontCount;\n        this._font = PDFFont.open(this, src, family, id);\n        // check for existing font familes with the same name already in the PDF\n        // useful if the font was passed as a buffer\n        if (font = this._fontFamilies[this._font.name]) {\n            this._font = font;\n            return this;\n        }\n        // save the font for reuse later\n        if (cacheKey) {\n            this._fontFamilies[cacheKey] = this._font;\n        }\n        if (this._font.name) {\n            this._fontFamilies[this._font.name] = this._font;\n        }\n        return this;\n    },\n    fontSize: function fontSize(_fontSize) {\n        this._fontSize = _fontSize;\n        return this;\n    },\n    currentLineHeight: function currentLineHeight(includeGap) {\n        if (includeGap == null) {\n            includeGap = false;\n        }\n        return this._font.lineHeight(this._fontSize, includeGap);\n    },\n    registerFont: function registerFont(name, src, family) {\n        this._registeredFonts[name] = {\n            src: src,\n            family: family\n        };\n        return this;\n    }\n};\nvar number = PDFObject$1.number;\nvar TextMixin = {\n    initText: function initText() {\n        this._line = this._line.bind(this);\n        // Current coordinates\n        this.x = 0;\n        this.y = 0;\n        return this._lineGap = 0;\n    },\n    _text: function _text(text, x, y, options, lineCallback) {\n        var _this = this;\n        options = this._initOptions(x, y, options);\n        // Convert text to a string\n        text = text == null ? \"\" : \"\" + text;\n        // if the wordSpacing option is specified, remove multiple consecutive spaces\n        if (options.wordSpacing) {\n            text = text.replace(/\\s{2,}/g, \" \");\n        }\n        var addStructure = function addStructure() {\n            if (options.structParent) {\n                options.structParent.add(_this.struct(options.structType || \"P\", [\n                    _this.markStructureContent(options.structType || \"P\")\n                ]));\n            }\n        };\n        for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(text.split(\"\\n\")), _step; !(_step = _iterator()).done;){\n            var line = _step.value;\n            addStructure();\n            lineCallback(line, options);\n        }\n        return this;\n    },\n    text: function text(_text2, x, y, options) {\n        return this._text(_text2, x, y, options, this._line);\n    },\n    widthOfString: function widthOfString(string, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this._font.widthOfString(string, this._fontSize, options.features) + (options.characterSpacing || 0) * (string.length - 1);\n    },\n    _initOptions: function _initOptions(x, y, options) {\n        if (x === void 0) {\n            x = {};\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        if (typeof x === \"object\") {\n            options = x;\n            x = null;\n        }\n        // shallow clone options object\n        /**\n     * @type {Object}\n     */ var result = Object.assign({}, options);\n        // extend options with previous values for continued text\n        if (this._textOptions) {\n            for(var key in this._textOptions){\n                var val = this._textOptions[key];\n                if (key !== \"continued\") {\n                    if (result[key] === undefined) {\n                        result[key] = val;\n                    }\n                }\n            }\n        }\n        // Update the current position\n        if (x != null) {\n            this.x = x;\n        }\n        if (y != null) {\n            this.y = y;\n        }\n        // wrap to margins if no x or y position passed\n        if (result.lineBreak !== false) {\n            if (result.width == null) {\n                result.width = this.page.width - this.x - this.page.margins.right;\n            }\n            result.width = Math.max(result.width, 0);\n        }\n        if (!result.columns) {\n            result.columns = 0;\n        }\n        if (result.columnGap == null) {\n            result.columnGap = 18;\n        } // 1/4 inch\n        return result;\n    },\n    _line: function _line(text, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        this._fragment(text, this.x, this.y, options);\n        return this.x += this.widthOfString(text);\n    },\n    _fragment: function _fragment(text, x, y, options) {\n        text = (\"\" + text).replace(/\\n/g, \"\");\n        if (text.length === 0) return;\n        var _this$_font$encode = this._font.encode(text, options.features), encoded = _this$_font$encode[0], positions = _this$_font$encode[1];\n        var dy = this._font.ascender / 1000 * this._fontSize;\n        this._glyphs(encoded, positions, x, y + dy, options);\n    },\n    _glyphs: function _glyphs(encoded, positions, x, y, options) {\n        var _this2 = this;\n        var commands = [];\n        var scale = this._fontSize / 1000;\n        var i;\n        var last = 0;\n        var hadOffset = false;\n        this.save();\n        // flip coordinate system\n        this.transform(1, 0, 0, -1, 0, this.page.height);\n        y = this.page.height - y;\n        // add current font to page if necessary\n        if (this.page.fonts[this._font.id] == null) {\n            this.page.fonts[this._font.id] = this._font.ref();\n        }\n        // begin the text object\n        this.addContent(\"BT\");\n        // text position\n        this.addContent(\"1 0 0 1 \" + number(x) + \" \" + number(y) + \" Tm\");\n        // font and font size\n        this.addContent(\"/\" + this._font.id + \" \" + number(this._fontSize) + \" Tf\");\n        // rendering mode\n        var mode = options.fill && options.stroke ? 2 : options.stroke ? 1 : 0;\n        if (mode) {\n            this.addContent(mode + \" Tr\");\n        }\n        // Adds a segment of text to the TJ command buffer\n        var addSegment = function addSegment(cur) {\n            if (last < cur) {\n                var hex = encoded.slice(last, cur).join(\"\");\n                var advance = positions[cur - 1].xAdvance - positions[cur - 1].advanceWidth;\n                commands.push(\"<\" + hex + \"> \" + number(-advance));\n            }\n            return last = cur;\n        };\n        // Flushes the current TJ commands to the output stream\n        var flush = function flush(i) {\n            addSegment(i);\n            if (commands.length > 0) {\n                _this2.addContent(\"[\" + commands.join(\" \") + \"] TJ\");\n                return commands.length = 0;\n            }\n        };\n        for(i = 0; i < positions.length; i++){\n            // If we have an x or y offset, we have to break out of the current TJ command\n            // so we can move the text position.\n            var pos = positions[i];\n            if (pos.xOffset || pos.yOffset) {\n                // Flush the current buffer\n                flush(i);\n                // Move the text position and flush just the current character\n                this.addContent(\"1 0 0 1 \" + number(x + pos.xOffset * scale) + \" \" + number(y + pos.yOffset * scale) + \" Tm\");\n                flush(i + 1);\n                hadOffset = true;\n            } else {\n                // If the last character had an offset, reset the text position\n                if (hadOffset) {\n                    this.addContent(\"1 0 0 1 \" + number(x) + \" \" + number(y) + \" Tm\");\n                    hadOffset = false;\n                }\n                // Group segments that don't have any advance adjustments\n                if (pos.xAdvance - pos.advanceWidth !== 0) {\n                    addSegment(i + 1);\n                }\n            }\n            x += pos.xAdvance * scale;\n        }\n        // Flush any remaining commands\n        flush(i);\n        // end the text object\n        this.addContent(\"ET\");\n        // restore flipped coordinate system\n        return this.restore();\n    }\n};\nvar MARKERS = [\n    0xffc0,\n    0xffc1,\n    0xffc2,\n    0xffc3,\n    0xffc5,\n    0xffc6,\n    0xffc7,\n    0xffc8,\n    0xffc9,\n    0xffca,\n    0xffcb,\n    0xffcc,\n    0xffcd,\n    0xffce,\n    0xffcf\n];\nvar COLOR_SPACE_MAP = {\n    1: \"DeviceGray\",\n    3: \"DeviceRGB\",\n    4: \"DeviceCMYK\"\n};\nvar JPEG = /*#__PURE__*/ function() {\n    function JPEG(data, label) {\n        var marker;\n        this.data = data;\n        this.label = label;\n        if (this.data.readUInt16BE(0) !== 0xffd8) {\n            throw \"SOI not found in JPEG\";\n        }\n        // Parse the EXIF orientation\n        this.orientation = jpeg_exif__WEBPACK_IMPORTED_MODULE_9__.fromBuffer(this.data).Orientation || 1;\n        var pos = 2;\n        while(pos < this.data.length){\n            marker = this.data.readUInt16BE(pos);\n            pos += 2;\n            if (MARKERS.includes(marker)) {\n                break;\n            }\n            pos += this.data.readUInt16BE(pos);\n        }\n        if (!MARKERS.includes(marker)) {\n            throw \"Invalid JPEG.\";\n        }\n        pos += 2;\n        this.bits = this.data[pos++];\n        this.height = this.data.readUInt16BE(pos);\n        pos += 2;\n        this.width = this.data.readUInt16BE(pos);\n        pos += 2;\n        var channels = this.data[pos++];\n        this.colorSpace = COLOR_SPACE_MAP[channels];\n        this.obj = null;\n    }\n    var _proto = JPEG.prototype;\n    _proto.embed = function embed(document) {\n        if (this.obj) {\n            return;\n        }\n        this.obj = document.ref({\n            Type: \"XObject\",\n            Subtype: \"Image\",\n            BitsPerComponent: this.bits,\n            Width: this.width,\n            Height: this.height,\n            ColorSpace: this.colorSpace,\n            Filter: \"DCTDecode\"\n        });\n        // add extra decode params for CMYK images. By swapping the\n        // min and max values from the default, we invert the colors. See\n        // section 4.8.4 of the spec.\n        if (this.colorSpace === \"DeviceCMYK\") {\n            this.obj.data[\"Decode\"] = [\n                1.0,\n                0.0,\n                1.0,\n                0.0,\n                1.0,\n                0.0,\n                1.0,\n                0.0\n            ];\n        }\n        this.obj.end(this.data);\n        // free memory\n        return this.data = null;\n    };\n    return JPEG;\n}();\nvar PNGImage = /*#__PURE__*/ function() {\n    function PNGImage(data, label) {\n        this.label = label;\n        this.image = new _react_pdf_png_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](data);\n        this.width = this.image.width;\n        this.height = this.image.height;\n        this.imgData = this.image.imgData;\n        this.obj = null;\n    }\n    var _proto = PNGImage.prototype;\n    _proto.embed = function embed(document) {\n        var dataDecoded = false;\n        this.document = document;\n        if (this.obj) {\n            return;\n        }\n        var hasAlphaChannel = this.image.hasAlphaChannel;\n        var isInterlaced = this.image.interlaceMethod === 1;\n        this.obj = this.document.ref({\n            Type: \"XObject\",\n            Subtype: \"Image\",\n            BitsPerComponent: hasAlphaChannel ? 8 : this.image.bits,\n            Width: this.width,\n            Height: this.height,\n            Filter: \"FlateDecode\"\n        });\n        if (!hasAlphaChannel) {\n            var params = this.document.ref({\n                Predictor: isInterlaced ? 1 : 15,\n                Colors: this.image.colors,\n                BitsPerComponent: this.image.bits,\n                Columns: this.width\n            });\n            this.obj.data[\"DecodeParms\"] = params;\n            params.end();\n        }\n        if (this.image.palette.length === 0) {\n            this.obj.data[\"ColorSpace\"] = this.image.colorSpace;\n        } else {\n            // embed the color palette in the PDF as an object stream\n            var palette = this.document.ref();\n            palette.end(Buffer.from(this.image.palette));\n            // build the color space array for the image\n            this.obj.data[\"ColorSpace\"] = [\n                \"Indexed\",\n                \"DeviceRGB\",\n                this.image.palette.length / 3 - 1,\n                palette\n            ];\n        }\n        // For PNG color types 0, 2 and 3, the transparency data is stored in\n        // a dedicated PNG chunk.\n        if (this.image.transparency.grayscale != null) {\n            // Use Color Key Masking (spec section 4.8.5)\n            // An array with N elements, where N is two times the number of color components.\n            var val = this.image.transparency.grayscale;\n            this.obj.data[\"Mask\"] = [\n                val,\n                val\n            ];\n        } else if (this.image.transparency.rgb) {\n            // Use Color Key Masking (spec section 4.8.5)\n            // An array with N elements, where N is two times the number of color components.\n            var rgb = this.image.transparency.rgb;\n            var mask = [];\n            for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_4__(rgb), _step; !(_step = _iterator()).done;){\n                var x = _step.value;\n                mask.push(x, x);\n            }\n            this.obj.data[\"Mask\"] = mask;\n        } else if (this.image.transparency.indexed) {\n            // Create a transparency SMask for the image based on the data\n            // in the PLTE and tRNS sections. See below for details on SMasks.\n            dataDecoded = true;\n            return this.loadIndexedAlphaChannel();\n        } else if (hasAlphaChannel) {\n            // For PNG color types 4 and 6, the transparency data is stored as a alpha\n            // channel mixed in with the main image data. Separate this data out into an\n            // SMask object and store it separately in the PDF.\n            dataDecoded = true;\n            return this.splitAlphaChannel();\n        }\n        if (isInterlaced && !dataDecoded) {\n            return this.decodeData();\n        }\n        this.finalize();\n    };\n    _proto.finalize = function finalize() {\n        if (this.alphaChannel) {\n            var sMask = this.document.ref({\n                Type: \"XObject\",\n                Subtype: \"Image\",\n                Height: this.height,\n                Width: this.width,\n                BitsPerComponent: 8,\n                Filter: \"FlateDecode\",\n                ColorSpace: \"DeviceGray\",\n                Decode: [\n                    0,\n                    1\n                ]\n            });\n            sMask.end(this.alphaChannel);\n            this.obj.data[\"SMask\"] = sMask;\n        }\n        // add the actual image data\n        this.obj.end(this.imgData);\n        // free memory\n        this.image = null;\n        return this.imgData = null;\n    };\n    _proto.splitAlphaChannel = function splitAlphaChannel() {\n        var _this = this;\n        return this.image.decodePixels(function(pixels) {\n            var a, p;\n            var colorCount = _this.image.colors;\n            var pixelCount = _this.width * _this.height;\n            var imgData = Buffer.alloc(pixelCount * colorCount);\n            var alphaChannel = Buffer.alloc(pixelCount);\n            var i = p = a = 0;\n            var len = pixels.length;\n            // For 16bit images copy only most significant byte (MSB) - PNG data is always stored in network byte order (MSB first)\n            var skipByteCount = _this.image.bits === 16 ? 1 : 0;\n            while(i < len){\n                for(var colorIndex = 0; colorIndex < colorCount; colorIndex++){\n                    imgData[p++] = pixels[i++];\n                    i += skipByteCount;\n                }\n                alphaChannel[a++] = pixels[i++];\n                i += skipByteCount;\n            }\n            _this.imgData = zlib__WEBPACK_IMPORTED_MODULE_3__.deflateSync(imgData);\n            _this.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_3__.deflateSync(alphaChannel);\n            return _this.finalize();\n        });\n    };\n    _proto.loadIndexedAlphaChannel = function loadIndexedAlphaChannel() {\n        var _this2 = this;\n        var transparency = this.image.transparency.indexed;\n        return this.image.decodePixels(function(pixels) {\n            var alphaChannel = Buffer.alloc(_this2.width * _this2.height);\n            var i = 0;\n            for(var j = 0, end = pixels.length; j < end; j++){\n                alphaChannel[i++] = transparency[pixels[j]];\n            }\n            _this2.alphaChannel = zlib__WEBPACK_IMPORTED_MODULE_3__.deflateSync(alphaChannel);\n            return _this2.finalize();\n        });\n    };\n    _proto.decodeData = function decodeData() {\n        var _this3 = this;\n        this.image.decodePixels(function(pixels) {\n            _this3.imgData = zlib__WEBPACK_IMPORTED_MODULE_3__.deflateSync(pixels);\n            _this3.finalize();\n        });\n    };\n    return PNGImage;\n}();\n/*\nPDFImage - embeds images in PDF documents\nBy Devon Govett\n*/ var PDFImage = /*#__PURE__*/ function() {\n    function PDFImage() {}\n    PDFImage.open = function open(src, label) {\n        var data;\n        if (Buffer.isBuffer(src)) {\n            data = src;\n        } else if (src instanceof ArrayBuffer) {\n            data = Buffer.from(new Uint8Array(src));\n        } else {\n            var match;\n            if (match = /^data:.+?;base64,(.*)$/.exec(src)) {\n                data = Buffer.from(match[1], \"base64\");\n            } else {\n                data = fs__WEBPACK_IMPORTED_MODULE_8__.readFileSync(src);\n                if (!data) {\n                    return;\n                }\n            }\n        }\n        if (data[0] === 0xff && data[1] === 0xd8) {\n            return new JPEG(data, label);\n        } else if (data[0] === 0x89 && data.toString(\"ascii\", 1, 4) === \"PNG\") {\n            return new PNGImage(data, label);\n        } else {\n            throw new Error(\"Unknown image format.\");\n        }\n    };\n    return PDFImage;\n}();\nvar ImagesMixin = {\n    initImages: function initImages() {\n        this._imageRegistry = {};\n        return this._imageCount = 0;\n    },\n    embedImage: function embedImage(src) {\n        var image;\n        if (typeof src === \"string\") {\n            image = this._imageRegistry[src];\n        }\n        if (!image) {\n            if (src.width && src.height) {\n                image = src;\n            } else {\n                image = this.openImage(src);\n            }\n        }\n        if (!image.obj) {\n            image.embed(this);\n        }\n        return image;\n    },\n    image: function image(src, x, y, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var bh, bp, bw, image, ip, left, left1, rotateAngle, originX, originY;\n        if (typeof x === \"object\") {\n            options = x;\n            x = null;\n        }\n        // Ignore orientation based on document options or image options\n        var ignoreOrientation = options.ignoreOrientation || options.ignoreOrientation !== false && this.options.ignoreOrientation;\n        x = (left = x != null ? x : options.x) != null ? left : this.x;\n        y = (left1 = y != null ? y : options.y) != null ? left1 : this.y;\n        if (typeof src === \"string\") {\n            image = this._imageRegistry[src];\n        }\n        if (!image) {\n            if (src.width && src.height) {\n                image = src;\n            } else {\n                image = this.openImage(src);\n            }\n        }\n        if (!image.obj) {\n            image.embed(this);\n        }\n        if (this.page.xobjects[image.label] == null) {\n            this.page.xobjects[image.label] = image.obj;\n        }\n        var _image = image, width = _image.width, height = _image.height;\n        // If EXIF orientation calls for it, swap width and height\n        if (!ignoreOrientation && image.orientation > 4) {\n            var _ref = [\n                height,\n                width\n            ];\n            width = _ref[0];\n            height = _ref[1];\n        }\n        var w = options.width || width;\n        var h = options.height || height;\n        if (options.width && !options.height) {\n            var wp = w / width;\n            w = width * wp;\n            h = height * wp;\n        } else if (options.height && !options.width) {\n            var hp = h / height;\n            w = width * hp;\n            h = height * hp;\n        } else if (options.scale) {\n            w = width * options.scale;\n            h = height * options.scale;\n        } else if (options.fit) {\n            var _options$fit = options.fit;\n            bw = _options$fit[0];\n            bh = _options$fit[1];\n            bp = bw / bh;\n            ip = width / height;\n            if (ip > bp) {\n                w = bw;\n                h = bw / ip;\n            } else {\n                h = bh;\n                w = bh * ip;\n            }\n        } else if (options.cover) {\n            var _options$cover = options.cover;\n            bw = _options$cover[0];\n            bh = _options$cover[1];\n            bp = bw / bh;\n            ip = width / height;\n            if (ip > bp) {\n                h = bh;\n                w = bh * ip;\n            } else {\n                w = bw;\n                h = bw / ip;\n            }\n        }\n        if (options.fit || options.cover) {\n            if (options.align === \"center\") {\n                x = x + bw / 2 - w / 2;\n            } else if (options.align === \"right\") {\n                x = x + bw - w;\n            }\n            if (options.valign === \"center\") {\n                y = y + bh / 2 - h / 2;\n            } else if (options.valign === \"bottom\") {\n                y = y + bh - h;\n            }\n        }\n        if (!ignoreOrientation) {\n            switch(image.orientation){\n                // No orientation (need to flip image, though, because of the default transform matrix on the document)\n                default:\n                case 1:\n                    h = -h;\n                    y -= h;\n                    rotateAngle = 0;\n                    break;\n                // Flip Horizontal\n                case 2:\n                    w = -w;\n                    h = -h;\n                    x -= w;\n                    y -= h;\n                    rotateAngle = 0;\n                    break;\n                // Rotate 180 degrees\n                case 3:\n                    originX = x;\n                    originY = y;\n                    h = -h;\n                    x -= w;\n                    rotateAngle = 180;\n                    break;\n                // Flip vertical\n                case 4:\n                    break;\n                // Flip horizontally and rotate 270 degrees CW\n                case 5:\n                    originX = x;\n                    originY = y;\n                    var _ref2 = [\n                        h,\n                        w\n                    ];\n                    w = _ref2[0];\n                    h = _ref2[1];\n                    y -= h;\n                    rotateAngle = 90;\n                    break;\n                // Rotate 90 degrees CW\n                case 6:\n                    originX = x;\n                    originY = y;\n                    var _ref3 = [\n                        h,\n                        w\n                    ];\n                    w = _ref3[0];\n                    h = _ref3[1];\n                    h = -h;\n                    rotateAngle = 90;\n                    break;\n                // Flip horizontally and rotate 90 degrees CW\n                case 7:\n                    originX = x;\n                    originY = y;\n                    var _ref4 = [\n                        h,\n                        w\n                    ];\n                    w = _ref4[0];\n                    h = _ref4[1];\n                    h = -h;\n                    w = -w;\n                    x -= w;\n                    rotateAngle = 90;\n                    break;\n                // Rotate 270 degrees CW\n                case 8:\n                    originX = x;\n                    originY = y;\n                    var _ref5 = [\n                        h,\n                        w\n                    ];\n                    w = _ref5[0];\n                    h = _ref5[1];\n                    h = -h;\n                    x -= w;\n                    y -= h;\n                    rotateAngle = -90;\n                    break;\n            }\n        } else {\n            h = -h;\n            y -= h;\n            rotateAngle = 0;\n        }\n        // Set the current y position to below the image if it is in the document flow\n        if (this.y === y) {\n            this.y += h;\n        }\n        this.save();\n        if (rotateAngle) {\n            this.rotate(rotateAngle, {\n                origin: [\n                    originX,\n                    originY\n                ]\n            });\n        }\n        this.transform(w, 0, 0, h, x, y);\n        this.addContent(\"/\" + image.label + \" Do\");\n        this.restore();\n        return this;\n    },\n    openImage: function openImage(src) {\n        var image;\n        if (typeof src === \"string\") {\n            image = this._imageRegistry[src];\n        }\n        if (!image) {\n            image = PDFImage.open(src, \"I\" + ++this._imageCount);\n            if (typeof src === \"string\") {\n                this._imageRegistry[src] = image;\n            }\n        }\n        return image;\n    }\n};\nvar AnnotationsMixin = {\n    annotate: function annotate(x, y, w, h, options) {\n        options.Type = \"Annot\";\n        options.Rect = this._convertRect(x, y, w, h);\n        options.Border = [\n            0,\n            0,\n            0\n        ];\n        if (options.Subtype === \"Link\" && typeof options.F === \"undefined\") {\n            options.F = 1 << 2; // Print Annotation Flag\n        }\n        if (options.Subtype !== \"Link\") {\n            if (options.C == null) {\n                options.C = this._normalizeColor(options.color || [\n                    0,\n                    0,\n                    0\n                ]);\n            }\n        } // convert colors\n        delete options.color;\n        if (typeof options.Dest === \"string\") {\n            options.Dest = new String(options.Dest);\n        }\n        // Capitalize keys\n        for(var key in options){\n            var val = options[key];\n            options[key[0].toUpperCase() + key.slice(1)] = val;\n        }\n        var ref = this.ref(options);\n        this.page.annotations.push(ref);\n        ref.end();\n        return this;\n    },\n    note: function note(x, y, w, h, contents, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Text\";\n        options.Contents = new String(contents);\n        options.Name = \"Comment\";\n        if (options.color == null) {\n            options.color = [\n                243,\n                223,\n                92\n            ];\n        }\n        return this.annotate(x, y, w, h, options);\n    },\n    goTo: function goTo(x, y, w, h, name, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Link\";\n        options.A = this.ref({\n            S: \"GoTo\",\n            D: new String(name)\n        });\n        options.A.end();\n        return this.annotate(x, y, w, h, options);\n    },\n    link: function link(x, y, w, h, url, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Link\";\n        if (typeof url === \"number\") {\n            // Link to a page in the document (the page must already exist)\n            var pages = this._root.data.Pages.data;\n            if (url >= 0 && url < pages.Kids.length) {\n                options.A = this.ref({\n                    S: \"GoTo\",\n                    D: [\n                        pages.Kids[url],\n                        \"XYZ\",\n                        null,\n                        null,\n                        null\n                    ]\n                });\n                options.A.end();\n            } else {\n                throw new Error(\"The document has no page \" + url);\n            }\n        } else {\n            // Link to an external url\n            options.A = this.ref({\n                S: \"URI\",\n                URI: new String(url)\n            });\n            options.A.end();\n        }\n        return this.annotate(x, y, w, h, options);\n    },\n    _markup: function _markup(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var _this$_convertRect = this._convertRect(x, y, w, h), x1 = _this$_convertRect[0], y1 = _this$_convertRect[1], x2 = _this$_convertRect[2], y2 = _this$_convertRect[3];\n        options.QuadPoints = [\n            x1,\n            y2,\n            x2,\n            y2,\n            x1,\n            y1,\n            x2,\n            y1\n        ];\n        options.Contents = new String();\n        return this.annotate(x, y, w, h, options);\n    },\n    highlight: function highlight(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Highlight\";\n        if (options.color == null) {\n            options.color = [\n                241,\n                238,\n                148\n            ];\n        }\n        return this._markup(x, y, w, h, options);\n    },\n    underline: function underline(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Underline\";\n        return this._markup(x, y, w, h, options);\n    },\n    strike: function strike(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"StrikeOut\";\n        return this._markup(x, y, w, h, options);\n    },\n    lineAnnotation: function lineAnnotation(x1, y1, x2, y2, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Line\";\n        options.Contents = new String();\n        options.L = [\n            x1,\n            this.page.height - y1,\n            x2,\n            this.page.height - y2\n        ];\n        return this.annotate(x1, y1, x2, y2, options);\n    },\n    rectAnnotation: function rectAnnotation(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Square\";\n        options.Contents = new String();\n        return this.annotate(x, y, w, h, options);\n    },\n    ellipseAnnotation: function ellipseAnnotation(x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"Circle\";\n        options.Contents = new String();\n        return this.annotate(x, y, w, h, options);\n    },\n    textAnnotation: function textAnnotation(x, y, w, h, text, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.Subtype = \"FreeText\";\n        options.Contents = new String(text);\n        options.DA = new String();\n        return this.annotate(x, y, w, h, options);\n    },\n    fileAnnotation: function fileAnnotation(x, y, w, h, file, options) {\n        if (file === void 0) {\n            file = {};\n        }\n        if (options === void 0) {\n            options = {};\n        }\n        // create hidden file\n        var filespec = this.file(file.src, Object.assign({\n            hidden: true\n        }, file));\n        options.Subtype = \"FileAttachment\";\n        options.FS = filespec;\n        // add description from filespec unless description (Contents) has already been set\n        if (options.Contents) {\n            options.Contents = new String(options.Contents);\n        } else if (filespec.data.Desc) {\n            options.Contents = filespec.data.Desc;\n        }\n        return this.annotate(x, y, w, h, options);\n    },\n    _convertRect: function _convertRect(x1, y1, w, h) {\n        // flip y1 and y2\n        var y2 = y1;\n        y1 += h;\n        // make x2\n        var x2 = x1 + w;\n        // apply current transformation matrix to points\n        var _this$_ctm = this._ctm, m0 = _this$_ctm[0], m1 = _this$_ctm[1], m2 = _this$_ctm[2], m3 = _this$_ctm[3], m4 = _this$_ctm[4], m5 = _this$_ctm[5];\n        x1 = m0 * x1 + m2 * y1 + m4;\n        y1 = m1 * x1 + m3 * y1 + m5;\n        x2 = m0 * x2 + m2 * y2 + m4;\n        y2 = m1 * x2 + m3 * y2 + m5;\n        return [\n            x1,\n            y1,\n            x2,\n            y2\n        ];\n    }\n};\nvar PDFOutline = /*#__PURE__*/ function() {\n    function PDFOutline(document, parent, title, dest, options) {\n        if (options === void 0) {\n            options = {\n                expanded: false\n            };\n        }\n        this.document = document;\n        this.options = options;\n        this.outlineData = {};\n        if (dest !== null) {\n            this.outlineData[\"Dest\"] = [\n                dest.dictionary,\n                \"Fit\"\n            ];\n        }\n        if (parent !== null) {\n            this.outlineData[\"Parent\"] = parent;\n        }\n        if (title !== null) {\n            this.outlineData[\"Title\"] = new String(title);\n        }\n        this.dictionary = this.document.ref(this.outlineData);\n        this.children = [];\n    }\n    var _proto = PDFOutline.prototype;\n    _proto.addItem = function addItem(title, options) {\n        if (options === void 0) {\n            options = {\n                expanded: false\n            };\n        }\n        var result = new PDFOutline(this.document, this.dictionary, title, this.document.page, options);\n        this.children.push(result);\n        return result;\n    };\n    _proto.endOutline = function endOutline() {\n        if (this.children.length > 0) {\n            if (this.options.expanded) {\n                this.outlineData.Count = this.children.length;\n            }\n            var first = this.children[0], last = this.children[this.children.length - 1];\n            this.outlineData.First = first.dictionary;\n            this.outlineData.Last = last.dictionary;\n            for(var i = 0, len = this.children.length; i < len; i++){\n                var child = this.children[i];\n                if (i > 0) {\n                    child.outlineData.Prev = this.children[i - 1].dictionary;\n                }\n                if (i < this.children.length - 1) {\n                    child.outlineData.Next = this.children[i + 1].dictionary;\n                }\n                child.endOutline();\n            }\n        }\n        return this.dictionary.end();\n    };\n    return PDFOutline;\n}();\nvar OutlineMixin = {\n    initOutline: function initOutline() {\n        return this.outline = new PDFOutline(this, null, null, null);\n    },\n    endOutline: function endOutline() {\n        this.outline.endOutline();\n        if (this.outline.children.length > 0) {\n            this._root.data.Outlines = this.outline.dictionary;\n            return this._root.data.PageMode = \"UseOutlines\";\n        }\n    }\n};\n/*\nPDFStructureContent - a reference to a marked structure content\nBy Ben Schmidt\n*/ var PDFStructureContent = /*#__PURE__*/ function() {\n    function PDFStructureContent(pageRef, mcid) {\n        this.refs = [\n            {\n                pageRef: pageRef,\n                mcid: mcid\n            }\n        ];\n    }\n    var _proto = PDFStructureContent.prototype;\n    _proto.push = function push(structContent) {\n        var _this = this;\n        structContent.refs.forEach(function(ref) {\n            return _this.refs.push(ref);\n        });\n    };\n    return PDFStructureContent;\n}();\n/*\nPDFStructureElement - represents an element in the PDF logical structure tree\nBy Ben Schmidt\n*/ var PDFStructureElement = /*#__PURE__*/ function() {\n    function PDFStructureElement(document, type, options, children) {\n        var _this = this;\n        if (options === void 0) {\n            options = {};\n        }\n        if (children === void 0) {\n            children = null;\n        }\n        this.document = document;\n        this._attached = false;\n        this._ended = false;\n        this._flushed = false;\n        this.dictionary = document.ref({\n            // Type: \"StructElem\",\n            S: type\n        });\n        var data = this.dictionary.data;\n        if (Array.isArray(options) || this._isValidChild(options)) {\n            children = options;\n            options = {};\n        }\n        if (typeof options.title !== \"undefined\") {\n            data.T = new String(options.title);\n        }\n        if (typeof options.lang !== \"undefined\") {\n            data.Lang = new String(options.lang);\n        }\n        if (typeof options.alt !== \"undefined\") {\n            data.Alt = new String(options.alt);\n        }\n        if (typeof options.expanded !== \"undefined\") {\n            data.E = new String(options.expanded);\n        }\n        if (typeof options.actual !== \"undefined\") {\n            data.ActualText = new String(options.actual);\n        }\n        this._children = [];\n        if (children) {\n            if (!Array.isArray(children)) {\n                children = [\n                    children\n                ];\n            }\n            children.forEach(function(child) {\n                return _this.add(child);\n            });\n            this.end();\n        }\n    }\n    var _proto = PDFStructureElement.prototype;\n    _proto.add = function add(child) {\n        if (this._ended) {\n            throw new Error(\"Cannot add child to already-ended structure element\");\n        }\n        if (!this._isValidChild(child)) {\n            throw new Error(\"Invalid structure element child\");\n        }\n        if (child instanceof PDFStructureElement) {\n            child.setParent(this.dictionary);\n            if (this._attached) {\n                child.setAttached();\n            }\n        }\n        if (child instanceof PDFStructureContent) {\n            this._addContentToParentTree(child);\n        }\n        if (typeof child === \"function\" && this._attached) {\n            // _contentForClosure() adds the content to the parent tree\n            child = this._contentForClosure(child);\n        }\n        this._children.push(child);\n        return this;\n    };\n    _proto._addContentToParentTree = function _addContentToParentTree(content) {\n        var _this2 = this;\n        content.refs.forEach(function(_ref) {\n            var pageRef = _ref.pageRef, mcid = _ref.mcid;\n            var pageStructParents = _this2.document.getStructParentTree().get(pageRef.data.StructParents);\n            pageStructParents[mcid] = _this2.dictionary;\n        });\n    };\n    _proto.setParent = function setParent(parentRef) {\n        if (this.dictionary.data.P) {\n            throw new Error(\"Structure element added to more than one parent\");\n        }\n        this.dictionary.data.P = parentRef;\n        this._flush();\n    };\n    _proto.setAttached = function setAttached() {\n        var _this3 = this;\n        if (this._attached) {\n            return;\n        }\n        this._children.forEach(function(child, index) {\n            if (child instanceof PDFStructureElement) {\n                child.setAttached();\n            }\n            if (typeof child === \"function\") {\n                _this3._children[index] = _this3._contentForClosure(child);\n            }\n        });\n        this._attached = true;\n        this._flush();\n    };\n    _proto.end = function end() {\n        if (this._ended) {\n            return;\n        }\n        this._children.filter(function(child) {\n            return child instanceof PDFStructureElement;\n        }).forEach(function(child) {\n            return child.end();\n        });\n        this._ended = true;\n        this._flush();\n    };\n    _proto._isValidChild = function _isValidChild(child) {\n        return child instanceof PDFStructureElement || child instanceof PDFStructureContent || typeof child === \"function\";\n    };\n    _proto._contentForClosure = function _contentForClosure(closure) {\n        var content = this.document.markStructureContent(this.dictionary.data.S);\n        closure();\n        this.document.endMarkedContent();\n        this._addContentToParentTree(content);\n        return content;\n    };\n    _proto._isFlushable = function _isFlushable() {\n        if (!this.dictionary.data.P || !this._ended) {\n            return false;\n        }\n        return this._children.every(function(child) {\n            if (typeof child === \"function\") {\n                return false;\n            }\n            if (child instanceof PDFStructureElement) {\n                return child._isFlushable();\n            }\n            return true;\n        });\n    };\n    _proto._flush = function _flush() {\n        var _this4 = this;\n        if (this._flushed || !this._isFlushable()) {\n            return;\n        }\n        this.dictionary.data.K = [];\n        this._children.forEach(function(child) {\n            return _this4._flushChild(child);\n        });\n        this.dictionary.end();\n        // free memory used by children; the dictionary itself may still be\n        // referenced by a parent structure element or root, but we can\n        // at least trim the tree here\n        this._children = [];\n        this.dictionary.data.K = null;\n        this._flushed = true;\n    };\n    _proto._flushChild = function _flushChild(child) {\n        var _this5 = this;\n        if (child instanceof PDFStructureElement) {\n            this.dictionary.data.K.push(child.dictionary);\n        }\n        if (child instanceof PDFStructureContent) {\n            child.refs.forEach(function(_ref2) {\n                var pageRef = _ref2.pageRef, mcid = _ref2.mcid;\n                if (!_this5.dictionary.data.Pg) {\n                    _this5.dictionary.data.Pg = pageRef;\n                }\n                if (_this5.dictionary.data.Pg === pageRef) {\n                    _this5.dictionary.data.K.push(mcid);\n                } else {\n                    _this5.dictionary.data.K.push({\n                        Type: \"MCR\",\n                        Pg: pageRef,\n                        MCID: mcid\n                    });\n                }\n            });\n        }\n    };\n    return PDFStructureElement;\n}();\nvar PDFNumberTree = /*#__PURE__*/ function(_PDFTree) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFNumberTree, _PDFTree);\n    function PDFNumberTree() {\n        return _PDFTree.apply(this, arguments) || this;\n    }\n    var _proto = PDFNumberTree.prototype;\n    _proto._compareKeys = function _compareKeys(a, b) {\n        return parseInt(a) - parseInt(b);\n    };\n    _proto._keysName = function _keysName() {\n        return \"Nums\";\n    };\n    _proto._dataForKey = function _dataForKey(k) {\n        return parseInt(k);\n    };\n    return PDFNumberTree;\n}(PDFTree);\nvar MarkingsMixin = {\n    initMarkings: function initMarkings(options) {\n        this.structChildren = [];\n        if (options.tagged) {\n            this.getMarkInfoDictionary().data.Marked = true;\n            this.getStructTreeRoot();\n        }\n    },\n    markContent: function markContent(tag, options) {\n        if (options === void 0) {\n            options = null;\n        }\n        if (tag === \"Artifact\" || options && options.mcid) {\n            var toClose = 0;\n            this.page.markings.forEach(function(marking) {\n                if (toClose || marking.structContent || marking.tag === \"Artifact\") {\n                    toClose++;\n                }\n            });\n            while(toClose--){\n                this.endMarkedContent();\n            }\n        }\n        if (!options) {\n            this.page.markings.push({\n                tag: tag\n            });\n            this.addContent(\"/\" + tag + \" BMC\");\n            return this;\n        }\n        this.page.markings.push({\n            tag: tag,\n            options: options\n        });\n        var dictionary = {};\n        if (typeof options.mcid !== \"undefined\") {\n            dictionary.MCID = options.mcid;\n        }\n        if (tag === \"Artifact\") {\n            if (typeof options.type === \"string\") {\n                dictionary.Type = options.type;\n            }\n            if (Array.isArray(options.bbox)) {\n                dictionary.BBox = [\n                    options.bbox[0],\n                    this.page.height - options.bbox[3],\n                    options.bbox[2],\n                    this.page.height - options.bbox[1]\n                ];\n            }\n            if (Array.isArray(options.attached) && options.attached.every(function(val) {\n                return typeof val === \"string\";\n            })) {\n                dictionary.Attached = options.attached;\n            }\n        }\n        if (tag === \"Span\") {\n            if (options.lang) {\n                dictionary.Lang = new String(options.lang);\n            }\n            if (options.alt) {\n                dictionary.Alt = new String(options.alt);\n            }\n            if (options.expanded) {\n                dictionary.E = new String(options.expanded);\n            }\n            if (options.actual) {\n                dictionary.ActualText = new String(options.actual);\n            }\n        }\n        this.addContent(\"/\" + tag + \" \" + PDFObject$1.convert(dictionary) + \" BDC\");\n        return this;\n    },\n    markStructureContent: function markStructureContent(tag, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var pageStructParents = this.getStructParentTree().get(this.page.structParentTreeKey);\n        var mcid = pageStructParents.length;\n        pageStructParents.push(null);\n        this.markContent(tag, _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_11__({}, options, {\n            mcid: mcid\n        }));\n        var structContent = new PDFStructureContent(this.page.dictionary, mcid);\n        this.page.markings.slice(-1)[0].structContent = structContent;\n        return structContent;\n    },\n    endMarkedContent: function endMarkedContent() {\n        this.page.markings.pop();\n        this.addContent(\"EMC\");\n        return this;\n    },\n    struct: function struct(type, options, children) {\n        if (options === void 0) {\n            options = {};\n        }\n        if (children === void 0) {\n            children = null;\n        }\n        return new PDFStructureElement(this, type, options, children);\n    },\n    addStructure: function addStructure(structElem) {\n        var structTreeRoot = this.getStructTreeRoot();\n        structElem.setParent(structTreeRoot);\n        structElem.setAttached();\n        this.structChildren.push(structElem);\n        if (!structTreeRoot.data.K) {\n            structTreeRoot.data.K = [];\n        }\n        structTreeRoot.data.K.push(structElem.dictionary);\n        return this;\n    },\n    initPageMarkings: function initPageMarkings(pageMarkings) {\n        var _this = this;\n        pageMarkings.forEach(function(marking) {\n            if (marking.structContent) {\n                var structContent = marking.structContent;\n                var newStructContent = _this.markStructureContent(marking.tag, marking.options);\n                structContent.push(newStructContent);\n                _this.page.markings.slice(-1)[0].structContent = structContent;\n            } else {\n                _this.markContent(marking.tag, marking.options);\n            }\n        });\n    },\n    endPageMarkings: function endPageMarkings(page) {\n        var pageMarkings = page.markings;\n        pageMarkings.forEach(function() {\n            return page.write(\"EMC\");\n        });\n        page.markings = [];\n        return pageMarkings;\n    },\n    getMarkInfoDictionary: function getMarkInfoDictionary() {\n        if (!this._root.data.MarkInfo) {\n            this._root.data.MarkInfo = this.ref({});\n        }\n        return this._root.data.MarkInfo;\n    },\n    getStructTreeRoot: function getStructTreeRoot() {\n        if (!this._root.data.StructTreeRoot) {\n            this._root.data.StructTreeRoot = this.ref({\n                Type: \"StructTreeRoot\",\n                ParentTree: new PDFNumberTree(),\n                ParentTreeNextKey: 0\n            });\n        }\n        return this._root.data.StructTreeRoot;\n    },\n    getStructParentTree: function getStructParentTree() {\n        return this.getStructTreeRoot().data.ParentTree;\n    },\n    createStructParentTreeNextKey: function createStructParentTreeNextKey() {\n        // initialise the MarkInfo dictionary\n        this.getMarkInfoDictionary();\n        var structTreeRoot = this.getStructTreeRoot();\n        var key = structTreeRoot.data.ParentTreeNextKey++;\n        structTreeRoot.data.ParentTree.add(key, []);\n        return key;\n    },\n    endMarkings: function endMarkings() {\n        var structTreeRoot = this._root.data.StructTreeRoot;\n        if (structTreeRoot) {\n            structTreeRoot.end();\n            this.structChildren.forEach(function(structElem) {\n                return structElem.end();\n            });\n        }\n        if (this._root.data.MarkInfo) {\n            this._root.data.MarkInfo.end();\n        }\n    }\n};\nvar FIELD_FLAGS = {\n    readOnly: 1,\n    required: 2,\n    noExport: 4,\n    multiline: 0x1000,\n    password: 0x2000,\n    toggleToOffButton: 0x4000,\n    radioButton: 0x8000,\n    pushButton: 0x10000,\n    combo: 0x20000,\n    edit: 0x40000,\n    sort: 0x80000,\n    multiSelect: 0x200000,\n    noSpell: 0x400000\n};\nvar FIELD_JUSTIFY = {\n    left: 0,\n    center: 1,\n    right: 2\n};\nvar VALUE_MAP = {\n    value: \"V\",\n    defaultValue: \"DV\"\n};\nvar FORMAT_SPECIAL = {\n    zip: \"0\",\n    zipPlus4: \"1\",\n    zip4: \"1\",\n    phone: \"2\",\n    ssn: \"3\"\n};\nvar FORMAT_DEFAULT = {\n    number: {\n        nDec: 0,\n        sepComma: false,\n        negStyle: \"MinusBlack\",\n        currency: \"\",\n        currencyPrepend: true\n    },\n    percent: {\n        nDec: 0,\n        sepComma: false\n    }\n};\nvar AcroFormMixin = {\n    /**\n   * Must call if adding AcroForms to a document. Must also call font() before\n   * this method to set the default font.\n   */ initForm: function initForm() {\n        if (!this._font) {\n            throw new Error(\"Must set a font before calling initForm method\");\n        }\n        this._acroform = {\n            fonts: {},\n            defaultFont: this._font.name\n        };\n        this._acroform.fonts[this._font.id] = this._font.ref();\n        var data = {\n            Fields: [],\n            NeedAppearances: true,\n            DA: new String(\"/\" + this._font.id + \" 0 Tf 0 g\"),\n            DR: {\n                Font: {}\n            }\n        };\n        data.DR.Font[this._font.id] = this._font.ref();\n        var AcroForm = this.ref(data);\n        this._root.data.AcroForm = AcroForm;\n        return this;\n    },\n    /**\n   * Called automatically by document.js\n   */ endAcroForm: function endAcroForm() {\n        var _this = this;\n        if (this._root.data.AcroForm) {\n            if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont) {\n                throw new Error(\"No fonts specified for PDF form\");\n            }\n            var fontDict = this._root.data.AcroForm.data.DR.Font;\n            Object.keys(this._acroform.fonts).forEach(function(name) {\n                fontDict[name] = _this._acroform.fonts[name];\n            });\n            this._root.data.AcroForm.data.Fields.forEach(function(fieldRef) {\n                _this._endChild(fieldRef);\n            });\n            this._root.data.AcroForm.end();\n        }\n        return this;\n    },\n    _endChild: function _endChild(ref) {\n        var _this2 = this;\n        if (Array.isArray(ref.data.Kids)) {\n            ref.data.Kids.forEach(function(childRef) {\n                _this2._endChild(childRef);\n            });\n            ref.end();\n        }\n        return this;\n    },\n    /**\n   * Creates and adds a form field to the document. Form fields are intermediate\n   * nodes in a PDF form that are used to specify form name heirarchy and form\n   * value defaults.\n   * @param {string} name - field name (T attribute in field dictionary)\n   * @param {object} options  - other attributes to include in field dictionary\n   */ formField: function formField(name, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var fieldDict = this._fieldDict(name, null, options);\n        var fieldRef = this.ref(fieldDict);\n        this._addToParent(fieldRef);\n        return fieldRef;\n    },\n    /**\n   * Creates and adds a Form Annotation to the document. Form annotations are\n   * called Widget annotations internally within a PDF file.\n   * @param {string} name - form field name (T attribute of widget annotation\n   * dictionary)\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @param {object} options\n   */ formAnnotation: function formAnnotation(name, type, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var fieldDict = this._fieldDict(name, type, options);\n        fieldDict.Subtype = \"Widget\";\n        if (fieldDict.F === undefined) {\n            fieldDict.F = 4; // print the annotation\n        }\n        // Add Field annot to page, and get it's ref\n        this.annotate(x, y, w, h, fieldDict);\n        var annotRef = this.page.annotations[this.page.annotations.length - 1];\n        return this._addToParent(annotRef);\n    },\n    formText: function formText(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"text\", x, y, w, h, options);\n    },\n    formPushButton: function formPushButton(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"pushButton\", x, y, w, h, options);\n    },\n    formCombo: function formCombo(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"combo\", x, y, w, h, options);\n    },\n    formList: function formList(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"list\", x, y, w, h, options);\n    },\n    formRadioButton: function formRadioButton(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"radioButton\", x, y, w, h, options);\n    },\n    formCheckbox: function formCheckbox(name, x, y, w, h, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        return this.formAnnotation(name, \"checkbox\", x, y, w, h, options);\n    },\n    _addToParent: function _addToParent(fieldRef) {\n        var parent = fieldRef.data.Parent;\n        if (parent) {\n            if (!parent.data.Kids) {\n                parent.data.Kids = [];\n            }\n            parent.data.Kids.push(fieldRef);\n        } else {\n            this._root.data.AcroForm.data.Fields.push(fieldRef);\n        }\n        return this;\n    },\n    _fieldDict: function _fieldDict(name, type, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        if (!this._acroform) {\n            throw new Error(\"Call document.initForms() method before adding form elements to document\");\n        }\n        var opts = Object.assign({}, options);\n        if (type !== null) {\n            opts = this._resolveType(type, options);\n        }\n        opts = this._resolveFlags(opts);\n        opts = this._resolveJustify(opts);\n        opts = this._resolveFont(opts);\n        opts = this._resolveStrings(opts);\n        opts = this._resolveColors(opts);\n        opts = this._resolveFormat(opts);\n        opts.T = new String(name);\n        if (opts.parent) {\n            opts.Parent = opts.parent;\n            delete opts.parent;\n        }\n        return opts;\n    },\n    _resolveType: function _resolveType(type, opts) {\n        if (type === \"text\") {\n            opts.FT = \"Tx\";\n        } else if (type === \"pushButton\") {\n            opts.FT = \"Btn\";\n            opts.pushButton = true;\n        } else if (type === \"radioButton\") {\n            opts.FT = \"Btn\";\n            opts.radioButton = true;\n        } else if (type === \"checkbox\") {\n            opts.FT = \"Btn\";\n        } else if (type === \"combo\") {\n            opts.FT = \"Ch\";\n            opts.combo = true;\n        } else if (type === \"list\") {\n            opts.FT = \"Ch\";\n        } else {\n            throw new Error(\"Invalid form annotation type '\" + type + \"'\");\n        }\n        return opts;\n    },\n    _resolveFormat: function _resolveFormat(opts) {\n        var f = opts.format;\n        if (f && f.type) {\n            var fnKeystroke;\n            var fnFormat;\n            var params = \"\";\n            if (FORMAT_SPECIAL[f.type] !== undefined) {\n                fnKeystroke = \"AFSpecial_Keystroke\";\n                fnFormat = \"AFSpecial_Format\";\n                params = FORMAT_SPECIAL[f.type];\n            } else {\n                var format = f.type.charAt(0).toUpperCase() + f.type.slice(1);\n                fnKeystroke = \"AF\" + format + \"_Keystroke\";\n                fnFormat = \"AF\" + format + \"_Format\";\n                if (f.type === \"date\") {\n                    fnKeystroke += \"Ex\";\n                    params = String(f.param);\n                } else if (f.type === \"time\") {\n                    params = String(f.param);\n                } else if (f.type === \"number\") {\n                    var p = Object.assign({}, FORMAT_DEFAULT.number, f);\n                    params = String([\n                        String(p.nDec),\n                        p.sepComma ? \"0\" : \"1\",\n                        '\"' + p.negStyle + '\"',\n                        \"null\",\n                        '\"' + p.currency + '\"',\n                        String(p.currencyPrepend)\n                    ].join(\",\"));\n                } else if (f.type === \"percent\") {\n                    var _p = Object.assign({}, FORMAT_DEFAULT.percent, f);\n                    params = String([\n                        String(_p.nDec),\n                        _p.sepComma ? \"0\" : \"1\"\n                    ].join(\",\"));\n                }\n            }\n            opts.AA = opts.AA ? opts.AA : {};\n            opts.AA.K = {\n                S: \"JavaScript\",\n                JS: new String(fnKeystroke + \"(\" + params + \");\")\n            };\n            opts.AA.F = {\n                S: \"JavaScript\",\n                JS: new String(fnFormat + \"(\" + params + \");\")\n            };\n        }\n        delete opts.format;\n        return opts;\n    },\n    _resolveColors: function _resolveColors(opts) {\n        var color = this._normalizeColor(opts.backgroundColor);\n        if (color) {\n            if (!opts.MK) {\n                opts.MK = {};\n            }\n            opts.MK.BG = color;\n        }\n        color = this._normalizeColor(opts.borderColor);\n        if (color) {\n            if (!opts.MK) {\n                opts.MK = {};\n            }\n            opts.MK.BC = color;\n        }\n        delete opts.backgroundColor;\n        delete opts.borderColor;\n        return opts;\n    },\n    _resolveFlags: function _resolveFlags(options) {\n        var result = 0;\n        Object.keys(options).forEach(function(key) {\n            if (FIELD_FLAGS[key]) {\n                result |= FIELD_FLAGS[key];\n                delete options[key];\n            }\n        });\n        if (result !== 0) {\n            options.Ff = options.Ff ? options.Ff : 0;\n            options.Ff |= result;\n        }\n        return options;\n    },\n    _resolveJustify: function _resolveJustify(options) {\n        var result = 0;\n        if (options.align !== undefined) {\n            if (typeof FIELD_JUSTIFY[options.align] === \"number\") {\n                result = FIELD_JUSTIFY[options.align];\n            }\n            delete options.align;\n        }\n        if (result !== 0) {\n            options.Q = result; // default\n        }\n        return options;\n    },\n    _resolveFont: function _resolveFont(options) {\n        // add current font to document-level AcroForm dict if necessary\n        if (this._acroform.fonts[this._font.id] === null) {\n            this._acroform.fonts[this._font.id] = this._font.ref();\n        }\n        // add current font to field's resource dict (RD) if not the default acroform font\n        if (this._acroform.defaultFont !== this._font.name) {\n            options.DR = {\n                Font: {}\n            };\n            // Get the fontSize option. If not set use auto sizing\n            var fontSize = options.fontSize || 0;\n            options.DR.Font[this._font.id] = this._font.ref();\n            options.DA = new String(\"/\" + this._font.id + \" \" + fontSize + \" Tf 0 g\");\n        }\n        return options;\n    },\n    _resolveStrings: function _resolveStrings(options) {\n        var select = [];\n        function appendChoices(a) {\n            if (Array.isArray(a)) {\n                for(var idx = 0; idx < a.length; idx++){\n                    if (typeof a[idx] === \"string\") {\n                        select.push(new String(a[idx]));\n                    } else {\n                        select.push(a[idx]);\n                    }\n                }\n            }\n        }\n        appendChoices(options.Opt);\n        if (options.select) {\n            appendChoices(options.select);\n            delete options.select;\n        }\n        if (select.length) {\n            options.Opt = select;\n        }\n        Object.keys(VALUE_MAP).forEach(function(key) {\n            if (options[key] !== undefined) {\n                options[VALUE_MAP[key]] = options[key];\n                delete options[key];\n            }\n        });\n        [\n            \"V\",\n            \"DV\"\n        ].forEach(function(key) {\n            if (typeof options[key] === \"string\") {\n                options[key] = new String(options[key]);\n            }\n        });\n        if (options.MK && options.MK.CA) {\n            options.MK.CA = new String(options.MK.CA);\n        }\n        if (options.label) {\n            options.MK = options.MK ? options.MK : {};\n            options.MK.CA = new String(options.label);\n            delete options.label;\n        }\n        return options;\n    }\n};\nvar AttachmentsMixin = {\n    /**\n   * Embed contents of `src` in PDF\n   * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file\n   * @param {object} options\n   *  * options.name: filename to be shown in PDF, will use `src` if none set\n   *  * options.type: filetype to be shown in PDF\n   *  * options.description: description to be shown in PDF\n   *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations\n   *  * options.creationDate: override creation date\n   *  * options.modifiedDate: override modified date\n   * @returns filespec reference\n   */ file: function file(src, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        options.name = options.name || src;\n        var refBody = {\n            Type: \"EmbeddedFile\",\n            Params: {}\n        };\n        var data;\n        if (!src) {\n            throw new Error(\"No src specified\");\n        }\n        if (Buffer.isBuffer(src)) {\n            data = src;\n        } else if (src instanceof ArrayBuffer) {\n            data = Buffer.from(new Uint8Array(src));\n        } else {\n            var match;\n            if (match = /^data:(.*);base64,(.*)$/.exec(src)) {\n                if (match[1]) {\n                    refBody.Subtype = match[1].replace(\"/\", \"#2F\");\n                }\n                data = Buffer.from(match[2], \"base64\");\n            } else {\n                data = fs__WEBPACK_IMPORTED_MODULE_8__.readFileSync(src);\n                if (!data) {\n                    throw new Error(\"Could not read contents of file at filepath \" + src);\n                }\n                // update CreationDate and ModDate\n                var _fs$statSync = fs__WEBPACK_IMPORTED_MODULE_8__.statSync(src), birthtime = _fs$statSync.birthtime, ctime = _fs$statSync.ctime;\n                refBody.Params.CreationDate = birthtime;\n                refBody.Params.ModDate = ctime;\n            }\n        }\n        // override creation date and modified date\n        if (options.creationDate instanceof Date) {\n            refBody.Params.CreationDate = options.creationDate;\n        }\n        if (options.modifiedDate instanceof Date) {\n            refBody.Params.ModDate = options.modifiedDate;\n        }\n        // add optional subtype\n        if (options.type) {\n            refBody.Subtype = options.type.replace(\"/\", \"#2F\");\n        }\n        // add checksum and size information\n        var checksum = crypto_js_md5_js__WEBPACK_IMPORTED_MODULE_6__(crypto_js_core_js__WEBPACK_IMPORTED_MODULE_12__.lib.WordArray.create(new Uint8Array(data)));\n        refBody.Params.CheckSum = new String(checksum);\n        refBody.Params.Size = data.byteLength;\n        // save some space when embedding the same file again\n        // if a file with the same name and metadata exists, reuse its reference\n        var ref;\n        if (!this._fileRegistry) this._fileRegistry = {};\n        var file = this._fileRegistry[options.name];\n        if (file && isEqual(refBody, file)) {\n            ref = file.ref;\n        } else {\n            ref = this.ref(refBody);\n            ref.end(data);\n            this._fileRegistry[options.name] = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_11__({}, refBody, {\n                ref: ref\n            });\n        }\n        // add filespec for embedded file\n        var fileSpecBody = {\n            Type: \"Filespec\",\n            F: new String(options.name),\n            EF: {\n                F: ref\n            },\n            UF: new String(options.name)\n        };\n        if (options.description) {\n            fileSpecBody.Desc = new String(options.description);\n        }\n        var filespec = this.ref(fileSpecBody);\n        filespec.end();\n        if (!options.hidden) {\n            this.addNamedEmbeddedFile(options.name, filespec);\n        }\n        return filespec;\n    }\n};\n/** check two embedded file metadata objects for equality */ function isEqual(a, b) {\n    return a.Subtype === b.Subtype && a.Params.CheckSum.toString() === b.Params.CheckSum.toString() && a.Params.Size === b.Params.Size && a.Params.CreationDate === b.Params.CreationDate && a.Params.ModDate === b.Params.ModDate;\n}\nvar PDFMetadata = /*#__PURE__*/ function() {\n    function PDFMetadata() {\n        this._metadata = '\\n        <?xpacket begin=\"\\uFEFF\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\\n            <x:xmpmeta xmlns:x=\"adobe:ns:meta/\">\\n                <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n        ';\n    }\n    var _proto = PDFMetadata.prototype;\n    _proto._closeTags = function _closeTags() {\n        this._metadata = this._metadata.concat('\\n                </rdf:RDF>\\n            </x:xmpmeta>\\n        <?xpacket end=\"w\"?>\\n        ');\n    };\n    _proto.append = function append(xml, newline) {\n        if (newline === void 0) {\n            newline = true;\n        }\n        this._metadata = this._metadata.concat(xml);\n        if (newline) this._metadata = this._metadata.concat(\"\\n\");\n    };\n    _proto.getXML = function getXML() {\n        return this._metadata;\n    };\n    _proto.getLength = function getLength() {\n        return this._metadata.length;\n    };\n    _proto.end = function end() {\n        this._closeTags();\n        this._metadata = this._metadata.trim();\n    };\n    return PDFMetadata;\n}();\nvar MetadataMixin = {\n    initMetadata: function initMetadata() {\n        this.metadata = new PDFMetadata();\n    },\n    appendXML: function appendXML(xml, newline) {\n        if (newline === void 0) {\n            newline = true;\n        }\n        this.metadata.append(xml, newline);\n    },\n    _addInfo: function _addInfo() {\n        this.appendXML('\\n        <rdf:Description rdf:about=\"\" xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\">\\n            <xmp:CreateDate>' + (this.info.CreationDate.toISOString().split(\".\")[0] + \"Z\") + \"</xmp:CreateDate>\\n            <xmp:CreatorTool>\" + this.info.Creator + \"</xmp:CreatorTool>\\n        </rdf:Description>\\n        \");\n        if (this.info.Title || this.info.Author || this.info.Subject) {\n            this.appendXML('\\n            <rdf:Description rdf:about=\"\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\\n            ');\n            if (this.info.Title) {\n                this.appendXML('\\n                <dc:title>\\n                    <rdf:Alt>\\n                        <rdf:li xml:lang=\"x-default\">' + this.info.Title + \"</rdf:li>\\n                    </rdf:Alt>\\n                </dc:title>\\n                \");\n            }\n            if (this.info.Author) {\n                this.appendXML(\"\\n                <dc:creator>\\n                    <rdf:Seq>\\n                        <rdf:li>\" + this.info.Author + \"</rdf:li>\\n                    </rdf:Seq>\\n                </dc:creator>\\n                \");\n            }\n            if (this.info.Subject) {\n                this.appendXML('\\n                <dc:description>\\n                    <rdf:Alt>\\n                        <rdf:li xml:lang=\"x-default\">' + this.info.Subject + \"</rdf:li>\\n                    </rdf:Alt>\\n                </dc:description>\\n                \");\n            }\n            this.appendXML(\"\\n            </rdf:Description>\\n            \");\n        }\n        this.appendXML('\\n        <rdf:Description rdf:about=\"\" xmlns:pdf=\"http://ns.adobe.com/pdf/1.3/\">\\n            <pdf:Producer>' + this.info.Creator + \"</pdf:Producer>\", false);\n        if (this.info.Keywords) {\n            this.appendXML(\"\\n            <pdf:Keywords>\" + this.info.Keywords + \"</pdf:Keywords>\", false);\n        }\n        this.appendXML(\"\\n        </rdf:Description>\\n        \");\n    },\n    endMetadata: function endMetadata() {\n        this._addInfo();\n        this.metadata.end();\n        /*\n        Metadata was introduced in PDF 1.4, so adding it to 1.3\n        will likely only take up more space.\n        */ if (this.version !== 1.3) {\n            this.metadataRef = this.ref({\n                length: this.metadata.getLength(),\n                Type: \"Metadata\",\n                Subtype: \"XML\"\n            });\n            this.metadataRef.compress = false;\n            this.metadataRef.write(Buffer.from(this.metadata.getXML(), \"utf-8\"));\n            this.metadataRef.end();\n            this._root.data.Metadata = this.metadataRef;\n        }\n    }\n};\nvar capitalize = function capitalize(v) {\n    return v[0].toUpperCase() + v.slice(1);\n};\nvar PDFDocument = /*#__PURE__*/ function(_stream$Readable) {\n    _babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__(PDFDocument, _stream$Readable);\n    function PDFDocument(options) {\n        var _this;\n        if (options === void 0) {\n            options = {};\n        }\n        _this = _stream$Readable.call(this) || this;\n        _this.options = options;\n        // PDF version\n        switch(options.pdfVersion){\n            case \"1.4\":\n                _this.version = 1.4;\n                break;\n            case \"1.5\":\n                _this.version = 1.5;\n                break;\n            case \"1.6\":\n                _this.version = 1.6;\n                break;\n            case \"1.7\":\n            case \"1.7ext3\":\n                _this.version = 1.7;\n                break;\n            default:\n                _this.version = 1.3;\n                break;\n        }\n        // Whether streams should be compressed\n        _this.compress = _this.options.compress != null ? _this.options.compress : true;\n        _this._pageBuffer = [];\n        _this._pageBufferStart = 0;\n        // The PDF object store\n        _this._offsets = [];\n        _this._waiting = 0;\n        _this._ended = false;\n        _this._offset = 0;\n        var Pages = _this.ref({\n            Type: \"Pages\",\n            Count: 0,\n            Kids: []\n        });\n        var Names = _this.ref({\n            Dests: new PDFNameTree()\n        });\n        _this._root = _this.ref({\n            Type: \"Catalog\",\n            Pages: Pages,\n            Names: Names\n        });\n        if (_this.options.lang) {\n            _this._root.data.Lang = new String(_this.options.lang);\n        }\n        if (_this.options.pageLayout) {\n            _this._root.data.PageLayout = capitalize(_this.options.pageLayout);\n        }\n        if (_this.options.pageMode) {\n            _this._root.data.PageMode = capitalize(_this.options.pageMode);\n        }\n        // The current page\n        _this.page = null;\n        // Initialize mixins\n        _this.initColor();\n        _this.initVector();\n        _this.initFonts();\n        _this.initText();\n        _this.initImages();\n        _this.initOutline();\n        // this.initMarkings(options)\n        // Initialize the metadata\n        _this.info = {\n            Producer: \"PDFKit\",\n            Creator: \"PDFKit\",\n            CreationDate: new Date()\n        };\n        if (_this.options.info) {\n            for(var key in _this.options.info){\n                var val = _this.options.info[key];\n                _this.info[key] = val;\n            }\n        }\n        if (_this.options.displayTitle) {\n            _this._root.data.ViewerPreferences = _this.ref({\n                DisplayDocTitle: true\n            });\n        }\n        // Generate file ID\n        _this._id = PDFSecurity.generateFileID(_this.info);\n        // Initialize security settings\n        // this._security = PDFSecurity.create(this, options);\n        // Write the header PDF version\n        _this._write(\"%PDF-\" + _this.version);\n        // 4 binary chars, as recommended by the spec\n        _this._write(\"%\\xff\\xff\\xff\\xff\");\n        // Add the first page\n        if (_this.options.autoFirstPage !== false) {\n            _this.addPage();\n        }\n        return _this;\n    }\n    var _proto = PDFDocument.prototype;\n    _proto.addPage = function addPage(options) {\n        // end the current page if needed\n        if (options == null) {\n            options = this.options;\n        }\n        // end the current page if needed\n        if (!this.options.bufferPages) {\n            this.flushPages();\n        }\n        // create a page object\n        this.page = new PDFPage(this, options);\n        this._pageBuffer.push(this.page);\n        // add the page to the object store\n        var pages = this._root.data.Pages.data;\n        pages.Kids.push(this.page.dictionary);\n        pages.Count++;\n        // flip PDF coordinate system so that the origin is in\n        // the top left rather than the bottom left\n        this._ctm = [\n            1,\n            0,\n            0,\n            1,\n            0,\n            0\n        ];\n        this.transform(1, 0, 0, -1, 0, this.page.height);\n        // this.emit('pageAdded');\n        return this;\n    };\n    _proto.flushPages = function flushPages() {\n        // this local variable exists so we're future-proof against\n        // reentrant calls to flushPages.\n        var pages = this._pageBuffer;\n        this._pageBuffer = [];\n        this._pageBufferStart += pages.length;\n        for(var _i = 0, _Array$from = Array.from(pages); _i < _Array$from.length; _i++){\n            var page = _Array$from[_i];\n            // this.endPageMarkings(page);\n            page.end();\n        }\n    };\n    _proto.addNamedDestination = function addNamedDestination(name) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            args[_key - 1] = arguments[_key];\n        }\n        if (args.length === 0) {\n            args = [\n                \"XYZ\",\n                null,\n                null,\n                null\n            ];\n        }\n        if (args[0] === \"XYZ\" && args[2] !== null) {\n            args[2] = this.page.height - args[2];\n        }\n        args.unshift(this.page.dictionary);\n        this._root.data.Names.data.Dests.add(name, args);\n    };\n    _proto.addNamedEmbeddedFile = function addNamedEmbeddedFile(name, ref) {\n        if (!this._root.data.Names.data.EmbeddedFiles) {\n            // disabling /Limits for this tree fixes attachments not showing in Adobe Reader\n            this._root.data.Names.data.EmbeddedFiles = new PDFNameTree({\n                limits: false\n            });\n        }\n        // add filespec to EmbeddedFiles\n        this._root.data.Names.data.EmbeddedFiles.add(name, ref);\n    };\n    _proto.addNamedJavaScript = function addNamedJavaScript(name, js) {\n        if (!this._root.data.Names.data.JavaScript) {\n            this._root.data.Names.data.JavaScript = new PDFNameTree();\n        }\n        var data = {\n            JS: new String(js),\n            S: \"JavaScript\"\n        };\n        this._root.data.Names.data.JavaScript.add(name, data);\n    };\n    _proto.ref = function ref(data) {\n        var ref = new PDFReference(this, this._offsets.length + 1, data);\n        this._offsets.push(null); // placeholder for this object's offset once it is finalized\n        this._waiting++;\n        return ref;\n    };\n    _proto._read = function _read() {\n    // do nothing, but this method is required by node\n    };\n    _proto._write = function _write(data) {\n        if (!Buffer.isBuffer(data)) {\n            data = Buffer.from(data + \"\\n\", \"binary\");\n        }\n        this.push(data);\n        return this._offset += data.length;\n    };\n    _proto.addContent = function addContent(data) {\n        this.page.write(data);\n        return this;\n    };\n    _proto._refEnd = function _refEnd(ref) {\n        this._offsets[ref.id - 1] = ref.offset;\n        if (--this._waiting === 0 && this._ended) {\n            this._finalize();\n            return this._ended = false;\n        }\n    };\n    _proto.end = function end() {\n        this.flushPages();\n        this._info = this.ref();\n        for(var key in this.info){\n            var val = this.info[key];\n            if (typeof val === \"string\") {\n                val = new String(val);\n            }\n            var entry = this.ref(val);\n            entry.end();\n            this._info.data[key] = entry;\n        }\n        this._info.end();\n        for(var name in this._fontFamilies){\n            var font = this._fontFamilies[name];\n            font.finalize();\n        }\n        this.endOutline();\n        // this.endMarkings();\n        this._root.end();\n        this._root.data.Pages.end();\n        this._root.data.Names.end();\n        this.endAcroForm();\n        if (this._root.data.ViewerPreferences) {\n            this._root.data.ViewerPreferences.end();\n        }\n        // if (this._security) {\n        //   this._security.end();\n        // }\n        if (this._waiting === 0) {\n            return this._finalize();\n        }\n        this._ended = true;\n    };\n    _proto._finalize = function _finalize() {\n        // generate xref\n        var xRefOffset = this._offset;\n        this._write(\"xref\");\n        this._write(\"0 \" + (this._offsets.length + 1));\n        this._write(\"0000000000 65535 f \");\n        for(var _i2 = 0, _Array$from2 = Array.from(this._offsets); _i2 < _Array$from2.length; _i2++){\n            var offset = _Array$from2[_i2];\n            offset = (\"0000000000\" + offset).slice(-10);\n            this._write(offset + \" 00000 n \");\n        }\n        // trailer\n        var trailer = {\n            Size: this._offsets.length + 1,\n            Root: this._root,\n            Info: this._info,\n            ID: [\n                this._id,\n                this._id\n            ]\n        };\n        // if (this._security) {\n        //   trailer.Encrypt = this._security.dictionary;\n        // }\n        this._write(\"trailer\");\n        this._write(PDFObject$1.convert(trailer));\n        this._write(\"startxref\");\n        this._write(\"\" + xRefOffset);\n        this._write(\"%%EOF\");\n        // end the stream\n        return this.push(null);\n    };\n    _proto.toString = function toString() {\n        return \"[object PDFDocument]\";\n    };\n    _proto.initColor = function initColor() {};\n    _proto.initVector = function initVector() {};\n    _proto.initFonts = function initFonts() {};\n    _proto.initText = function initText() {};\n    _proto.initImages = function initImages() {};\n    _proto.initOutline = function initOutline() {};\n    _proto.transform = function transform(m11, m12, m21, m22, dx, dy) {};\n    _proto.endOutline = function endOutline() {};\n    _proto.endAcroForm = function endAcroForm() {};\n    return PDFDocument;\n}(stream__WEBPACK_IMPORTED_MODULE_1__.Readable);\nvar mixin = function mixin(methods) {\n    Object.assign(PDFDocument.prototype, methods);\n};\n// Load mixins\nmixin(MetadataMixin);\nmixin(ColorMixin);\nmixin(VectorMixin);\nmixin(FontsMixin);\nmixin(TextMixin);\nmixin(ImagesMixin);\nmixin(AnnotationsMixin);\nmixin(OutlineMixin);\nmixin(MarkingsMixin);\nmixin(AcroFormMixin);\nmixin(AttachmentsMixin);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js":
/*!******************************************************!*\
  !*** ./node_modules/@react-pdf/png-js/lib/png-js.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PNG)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zlib */ \"zlib\");\n\n\nvar PNG = /*#__PURE__*/ function() {\n    PNG.decode = function decode(path, fn) {\n        {\n            return fs__WEBPACK_IMPORTED_MODULE_0__.readFile(path, function(err, file) {\n                var png = new PNG(file);\n                return png.decode(function(pixels) {\n                    return fn(pixels);\n                });\n            });\n        }\n    };\n    PNG.load = function load(path) {\n        {\n            var file = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(path);\n            return new PNG(file);\n        }\n    };\n    function PNG(data) {\n        var i;\n        this.data = data;\n        this.pos = 8; // Skip the default header\n        this.palette = [];\n        this.imgData = [];\n        this.transparency = {};\n        this.text = {};\n        while(true){\n            var chunkSize = this.readUInt32();\n            var section = \"\";\n            for(i = 0; i < 4; i++){\n                section += String.fromCharCode(this.data[this.pos++]);\n            }\n            switch(section){\n                case \"IHDR\":\n                    // we can grab  interesting values from here (like width, height, etc)\n                    this.width = this.readUInt32();\n                    this.height = this.readUInt32();\n                    this.bits = this.data[this.pos++];\n                    this.colorType = this.data[this.pos++];\n                    this.compressionMethod = this.data[this.pos++];\n                    this.filterMethod = this.data[this.pos++];\n                    this.interlaceMethod = this.data[this.pos++];\n                    break;\n                case \"PLTE\":\n                    this.palette = this.read(chunkSize);\n                    break;\n                case \"IDAT\":\n                    for(i = 0; i < chunkSize; i++){\n                        this.imgData.push(this.data[this.pos++]);\n                    }\n                    break;\n                case \"tRNS\":\n                    // This chunk can only occur once and it must occur after the\n                    // PLTE chunk and before the IDAT chunk.\n                    this.transparency = {};\n                    switch(this.colorType){\n                        case 3:\n                            // Indexed color, RGB. Each byte in this chunk is an alpha for\n                            // the palette index in the PLTE (\"palette\") chunk up until the\n                            // last non-opaque entry. Set up an array, stretching over all\n                            // palette entries which will be 0 (opaque) or 1 (transparent).\n                            this.transparency.indexed = this.read(chunkSize);\n                            var short = 255 - this.transparency.indexed.length;\n                            if (short > 0) {\n                                for(i = 0; i < short; i++){\n                                    this.transparency.indexed.push(255);\n                                }\n                            }\n                            break;\n                        case 0:\n                            // Greyscale. Corresponding to entries in the PLTE chunk.\n                            // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n                            this.transparency.grayscale = this.read(chunkSize)[0];\n                            break;\n                        case 2:\n                            // True color with proper alpha channel.\n                            this.transparency.rgb = this.read(chunkSize);\n                            break;\n                    }\n                    break;\n                case \"tEXt\":\n                    var text = this.read(chunkSize);\n                    var index = text.indexOf(0);\n                    var key = String.fromCharCode.apply(String, text.slice(0, index));\n                    this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\n                    break;\n                case \"IEND\":\n                    // we've got everything we need!\n                    switch(this.colorType){\n                        case 0:\n                        case 3:\n                        case 4:\n                            this.colors = 1;\n                            break;\n                        case 2:\n                        case 6:\n                            this.colors = 3;\n                            break;\n                    }\n                    this.hasAlphaChannel = [\n                        4,\n                        6\n                    ].includes(this.colorType);\n                    var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n                    this.pixelBitlength = this.bits * colors;\n                    switch(this.colors){\n                        case 1:\n                            this.colorSpace = \"DeviceGray\";\n                            break;\n                        case 3:\n                            this.colorSpace = \"DeviceRGB\";\n                            break;\n                    }\n                    this.imgData = Buffer.from(this.imgData);\n                    return;\n                default:\n                    // unknown (or unimportant) section, skip it\n                    this.pos += chunkSize;\n            }\n            this.pos += 4; // Skip the CRC\n            if (this.pos > this.data.length) {\n                throw new Error(\"Incomplete or corrupt PNG file\");\n            }\n        }\n    }\n    var _proto = PNG.prototype;\n    _proto.read = function read(bytes) {\n        var result = new Array(bytes);\n        for(var i = 0; i < bytes; i++){\n            result[i] = this.data[this.pos++];\n        }\n        return result;\n    };\n    _proto.readUInt32 = function readUInt32() {\n        var b1 = this.data[this.pos++] << 24;\n        var b2 = this.data[this.pos++] << 16;\n        var b3 = this.data[this.pos++] << 8;\n        var b4 = this.data[this.pos++];\n        return b1 | b2 | b3 | b4;\n    };\n    _proto.readUInt16 = function readUInt16() {\n        var b1 = this.data[this.pos++] << 8;\n        var b2 = this.data[this.pos++];\n        return b1 | b2;\n    };\n    _proto.decodePixels = function decodePixels(fn) {\n        var _this = this;\n        return zlib__WEBPACK_IMPORTED_MODULE_1__.inflate(this.imgData, function(err, data) {\n            if (err) throw err;\n            var pos = 0;\n            var width = _this.width, height = _this.height;\n            var pixelBytes = _this.pixelBitlength / 8;\n            var pixels = Buffer.alloc(width * height * pixelBytes);\n            function pass(x0, y0, dx, dy, singlePass) {\n                if (singlePass === void 0) {\n                    singlePass = false;\n                }\n                var w = Math.ceil((width - x0) / dx);\n                var h = Math.ceil((height - y0) / dy);\n                var scanlineLength = pixelBytes * w;\n                var buffer = singlePass ? pixels : Buffer.alloc(scanlineLength * h);\n                var row = 0;\n                var c = 0;\n                while(row < h && pos < data.length){\n                    var byte;\n                    var col;\n                    var i;\n                    var left;\n                    var upper;\n                    switch(data[pos++]){\n                        case 0:\n                            // None\n                            for(i = 0; i < scanlineLength; i++){\n                                buffer[c++] = data[pos++];\n                            }\n                            break;\n                        case 1:\n                            // Sub\n                            for(i = 0; i < scanlineLength; i++){\n                                byte = data[pos++];\n                                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                                buffer[c++] = (byte + left) % 256;\n                            }\n                            break;\n                        case 2:\n                            // Up\n                            for(i = 0; i < scanlineLength; i++){\n                                byte = data[pos++];\n                                col = (i - i % pixelBytes) / pixelBytes;\n                                upper = row && buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                                buffer[c++] = (upper + byte) % 256;\n                            }\n                            break;\n                        case 3:\n                            // Average\n                            for(i = 0; i < scanlineLength; i++){\n                                byte = data[pos++];\n                                col = (i - i % pixelBytes) / pixelBytes;\n                                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                                upper = row && buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                                buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n                            }\n                            break;\n                        case 4:\n                            // Paeth\n                            for(i = 0; i < scanlineLength; i++){\n                                var paeth;\n                                var upperLeft;\n                                byte = data[pos++];\n                                col = (i - i % pixelBytes) / pixelBytes;\n                                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                                if (row === 0) {\n                                    upper = upperLeft = 0;\n                                } else {\n                                    upper = buffer[(row - 1) * scanlineLength + col * pixelBytes + i % pixelBytes];\n                                    upperLeft = col && buffer[(row - 1) * scanlineLength + (col - 1) * pixelBytes + i % pixelBytes];\n                                }\n                                var p = left + upper - upperLeft;\n                                var pa = Math.abs(p - left);\n                                var pb = Math.abs(p - upper);\n                                var pc = Math.abs(p - upperLeft);\n                                if (pa <= pb && pa <= pc) {\n                                    paeth = left;\n                                } else if (pb <= pc) {\n                                    paeth = upper;\n                                } else {\n                                    paeth = upperLeft;\n                                }\n                                buffer[c++] = (byte + paeth) % 256;\n                            }\n                            break;\n                        default:\n                            throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n                    }\n                    if (!singlePass) {\n                        var pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n                        var bufferPos = row * scanlineLength;\n                        for(i = 0; i < w; i++){\n                            for(var j = 0; j < pixelBytes; j++)pixels[pixelsPos++] = buffer[bufferPos++];\n                            pixelsPos += (dx - 1) * pixelBytes;\n                        }\n                    }\n                    row++;\n                }\n            }\n            if (_this.interlaceMethod === 1) {\n                /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */ pass(0, 0, 8, 8); // 1\n                pass(4, 0, 8, 8); // 2\n                pass(0, 4, 4, 8); // 3\n                pass(2, 0, 4, 4); // 4\n                pass(0, 2, 2, 4); // 5\n                pass(1, 0, 2, 2); // 6\n                pass(0, 1, 1, 2); // 7\n            } else {\n                pass(0, 0, 1, 1, true);\n            }\n            return fn(pixels);\n        });\n    };\n    _proto.decodePalette = function decodePalette() {\n        var palette = this.palette;\n        var length = palette.length;\n        var transparency = this.transparency.indexed || [];\n        var ret = Buffer.alloc(transparency.length + length);\n        var pos = 0;\n        var c = 0;\n        for(var i = 0; i < length; i += 3){\n            var left;\n            ret[pos++] = palette[i];\n            ret[pos++] = palette[i + 1];\n            ret[pos++] = palette[i + 2];\n            ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n        }\n        return ret;\n    };\n    _proto.copyToImageData = function copyToImageData(imageData, pixels) {\n        var j;\n        var k;\n        var colors = this.colors;\n        var palette = null;\n        var alpha = this.hasAlphaChannel;\n        if (this.palette.length) {\n            palette = this._decodedPalette || (this._decodedPalette = this.decodePalette());\n            colors = 4;\n            alpha = true;\n        }\n        var data = imageData.data || imageData;\n        var length = data.length;\n        var input = palette || pixels;\n        var i = j = 0;\n        if (colors === 1) {\n            while(i < length){\n                k = palette ? pixels[i / 4] * 4 : j;\n                var v = input[k++];\n                data[i++] = v;\n                data[i++] = v;\n                data[i++] = v;\n                data[i++] = alpha ? input[k++] : 255;\n                j = k;\n            }\n        } else {\n            while(i < length){\n                k = palette ? pixels[i / 4] * 4 : j;\n                data[i++] = input[k++];\n                data[i++] = input[k++];\n                data[i++] = input[k++];\n                data[i++] = alpha ? input[k++] : 255;\n                j = k;\n            }\n        }\n    };\n    _proto.decode = function decode(fn) {\n        var _this2 = this;\n        var ret = Buffer.alloc(this.width * this.height * 4);\n        return this.decodePixels(function(pixels) {\n            _this2.copyToImageData(ret, pixels);\n            return fn(ret);\n        });\n    };\n    return PNG;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/png-js/lib/png-js.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/primitives/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@react-pdf/primitives/src/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Canvas: () => (/* binding */ Canvas),\n/* harmony export */   Circle: () => (/* binding */ Circle),\n/* harmony export */   ClipPath: () => (/* binding */ ClipPath),\n/* harmony export */   Defs: () => (/* binding */ Defs),\n/* harmony export */   Document: () => (/* binding */ Document),\n/* harmony export */   Ellipse: () => (/* binding */ Ellipse),\n/* harmony export */   G: () => (/* binding */ G),\n/* harmony export */   Image: () => (/* binding */ Image),\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   LinearGradient: () => (/* binding */ LinearGradient),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   Note: () => (/* binding */ Note),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   Path: () => (/* binding */ Path),\n/* harmony export */   Polygon: () => (/* binding */ Polygon),\n/* harmony export */   Polyline: () => (/* binding */ Polyline),\n/* harmony export */   RadialGradient: () => (/* binding */ RadialGradient),\n/* harmony export */   Rect: () => (/* binding */ Rect),\n/* harmony export */   Stop: () => (/* binding */ Stop),\n/* harmony export */   Svg: () => (/* binding */ Svg),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   TextInstance: () => (/* binding */ TextInstance),\n/* harmony export */   Tspan: () => (/* binding */ Tspan),\n/* harmony export */   View: () => (/* binding */ View)\n/* harmony export */ });\nconst G = \"G\";\nconst Svg = \"SVG\";\nconst View = \"VIEW\";\nconst Text = \"TEXT\";\nconst Link = \"LINK\";\nconst Page = \"PAGE\";\nconst Note = \"NOTE\";\nconst Path = \"PATH\";\nconst Rect = \"RECT\";\nconst Line = \"LINE\";\nconst Stop = \"STOP\";\nconst Defs = \"DEFS\";\nconst Image = \"IMAGE\";\nconst Tspan = \"TSPAN\";\nconst Canvas = \"CANVAS\";\nconst Circle = \"CIRCLE\";\nconst Ellipse = \"ELLIPSE\";\nconst Polygon = \"POLYGON\";\nconst Document = \"DOCUMENT\";\nconst Polyline = \"POLYLINE\";\nconst ClipPath = \"CLIP_PATH\";\nconst TextInstance = \"TEXT_INSTANCE\";\nconst LinearGradient = \"LINEAR_GRADIENT\";\nconst RadialGradient = \"RADIAL_GRADIENT\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9wcmltaXRpdmVzL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxJQUFJLElBQUk7QUFDZCxNQUFNQyxNQUFNLE1BQU07QUFDbEIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLE9BQU8sT0FBTztBQUNwQixNQUFNQyxPQUFPLE9BQU87QUFDcEIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLE9BQU8sT0FBTztBQUNwQixNQUFNQyxPQUFPLE9BQU87QUFDcEIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLE9BQU8sT0FBTztBQUNwQixNQUFNQyxPQUFPLE9BQU87QUFDcEIsTUFBTUMsT0FBTyxPQUFPO0FBQ3BCLE1BQU1DLFFBQVEsUUFBUTtBQUN0QixNQUFNQyxRQUFRLFFBQVE7QUFDdEIsTUFBTUMsU0FBUyxTQUFTO0FBQ3hCLE1BQU1DLFNBQVMsU0FBUztBQUN4QixNQUFNQyxVQUFVLFVBQVU7QUFDMUIsTUFBTUMsVUFBVSxVQUFVO0FBQzFCLE1BQU1DLFdBQVcsV0FBVztBQUM1QixNQUFNQyxXQUFXLFdBQVc7QUFDNUIsTUFBTUMsV0FBVyxZQUFZO0FBQzdCLE1BQU1DLGVBQWUsZ0JBQWdCO0FBQ3JDLE1BQU1DLGlCQUFpQixrQkFBa0I7QUFDekMsTUFBTUMsaUJBQWlCLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1lY29tbWVyY2UtdWl0Ly4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYvcHJpbWl0aXZlcy9zcmMvaW5kZXguanM/MDY5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRyA9ICdHJztcbmV4cG9ydCBjb25zdCBTdmcgPSAnU1ZHJztcbmV4cG9ydCBjb25zdCBWaWV3ID0gJ1ZJRVcnO1xuZXhwb3J0IGNvbnN0IFRleHQgPSAnVEVYVCc7XG5leHBvcnQgY29uc3QgTGluayA9ICdMSU5LJztcbmV4cG9ydCBjb25zdCBQYWdlID0gJ1BBR0UnO1xuZXhwb3J0IGNvbnN0IE5vdGUgPSAnTk9URSc7XG5leHBvcnQgY29uc3QgUGF0aCA9ICdQQVRIJztcbmV4cG9ydCBjb25zdCBSZWN0ID0gJ1JFQ1QnO1xuZXhwb3J0IGNvbnN0IExpbmUgPSAnTElORSc7XG5leHBvcnQgY29uc3QgU3RvcCA9ICdTVE9QJztcbmV4cG9ydCBjb25zdCBEZWZzID0gJ0RFRlMnO1xuZXhwb3J0IGNvbnN0IEltYWdlID0gJ0lNQUdFJztcbmV4cG9ydCBjb25zdCBUc3BhbiA9ICdUU1BBTic7XG5leHBvcnQgY29uc3QgQ2FudmFzID0gJ0NBTlZBUyc7XG5leHBvcnQgY29uc3QgQ2lyY2xlID0gJ0NJUkNMRSc7XG5leHBvcnQgY29uc3QgRWxsaXBzZSA9ICdFTExJUFNFJztcbmV4cG9ydCBjb25zdCBQb2x5Z29uID0gJ1BPTFlHT04nO1xuZXhwb3J0IGNvbnN0IERvY3VtZW50ID0gJ0RPQ1VNRU5UJztcbmV4cG9ydCBjb25zdCBQb2x5bGluZSA9ICdQT0xZTElORSc7XG5leHBvcnQgY29uc3QgQ2xpcFBhdGggPSAnQ0xJUF9QQVRIJztcbmV4cG9ydCBjb25zdCBUZXh0SW5zdGFuY2UgPSAnVEVYVF9JTlNUQU5DRSc7XG5leHBvcnQgY29uc3QgTGluZWFyR3JhZGllbnQgPSAnTElORUFSX0dSQURJRU5UJztcbmV4cG9ydCBjb25zdCBSYWRpYWxHcmFkaWVudCA9ICdSQURJQUxfR1JBRElFTlQnO1xuIl0sIm5hbWVzIjpbIkciLCJTdmciLCJWaWV3IiwiVGV4dCIsIkxpbmsiLCJQYWdlIiwiTm90ZSIsIlBhdGgiLCJSZWN0IiwiTGluZSIsIlN0b3AiLCJEZWZzIiwiSW1hZ2UiLCJUc3BhbiIsIkNhbnZhcyIsIkNpcmNsZSIsIkVsbGlwc2UiLCJQb2x5Z29uIiwiRG9jdW1lbnQiLCJQb2x5bGluZSIsIkNsaXBQYXRoIiwiVGV4dEluc3RhbmNlIiwiTGluZWFyR3JhZGllbnQiLCJSYWRpYWxHcmFkaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/primitives/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/render/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@react-pdf/render/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/src/index.js\");\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var abs_svg_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! abs-svg-path */ \"(ssr)/./node_modules/abs-svg-path/index.js\");\n/* harmony import */ var parse_svg_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! parse-svg-path */ \"(ssr)/./node_modules/parse-svg-path/index.js\");\n/* harmony import */ var normalize_svg_path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! normalize-svg-path */ \"(ssr)/./node_modules/normalize-svg-path/index.mjs\");\n/* harmony import */ var color_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! color-string */ \"(ssr)/./node_modules/color-string/index.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n\n\n\n\n\n\n\nvar renderPath = function renderPath(ctx, node) {\n    var _node$props;\n    var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n    if (d) ctx.path(node.props.d);\n};\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar renderRect = function renderRect(ctx, node) {\n    var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n    var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n    var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n    var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n    var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n    var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n    var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n    if (!width || !height) return;\n    if (rx && ry) {\n        var krx = rx * KAPPA$3;\n        var kry = ry * KAPPA$3;\n        ctx.moveTo(x + rx, y);\n        ctx.lineTo(x - rx + width, y);\n        ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n        ctx.lineTo(x + width, y + height - ry);\n        ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n        ctx.lineTo(x + rx, y + height);\n        ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n        ctx.lineTo(x, y + ry);\n        ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n    } else {\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y);\n        ctx.lineTo(x + width, y + height);\n        ctx.lineTo(x, y + height);\n    }\n    ctx.closePath();\n};\nvar renderLine$1 = function renderLine(ctx, node) {\n    var _ref = node.props || {}, x1 = _ref.x1, x2 = _ref.x2, y1 = _ref.y1, y2 = _ref.y2;\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n};\nvar renderGroup = function renderGroup() {\n// noop\n};\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n    if (cx === void 0) {\n        cx = 0;\n    }\n    if (cy === void 0) {\n        cy = 0;\n    }\n    var x = cx - rx;\n    var y = cy - ry;\n    var ox = rx * KAPPA$2;\n    var oy = ry * KAPPA$2;\n    var xe = x + rx * 2;\n    var ye = y + ry * 2;\n    var xm = x + rx;\n    var ym = y + ry;\n    ctx.moveTo(x, ym);\n    ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n    ctx.closePath();\n};\nvar renderEllipse = function renderEllipse(ctx, node) {\n    var _ref = node.props || {}, cx = _ref.cx, cy = _ref.cy, rx = _ref.rx, ry = _ref.ry;\n    drawEllipse(ctx, cx, cy, rx, ry);\n};\nvar renderCircle = function renderCircle(ctx, node) {\n    var _node$props, _node$props2, _node$props3;\n    var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n    var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n    var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n    drawEllipse(ctx, cx, cy, r, r);\n};\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var scale = 1000 / ctx._fontSize;\n    var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n    var advanceWidthScale = 1000 / unitsPerEm;\n    // Glyph encoding and positioning\n    var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n    var encodedPositions = positions.map(function(pos, i) {\n        return {\n            xAdvance: pos.xAdvance * scale,\n            yAdvance: pos.yAdvance * scale,\n            xOffset: pos.xOffset,\n            yOffset: pos.yOffset,\n            advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n        };\n    });\n    return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\nvar renderRun$1 = function renderRun(ctx, run) {\n    var runAdvanceWidth = run.xAdvance;\n    var _run$attributes = run.attributes, font = _run$attributes.font, fontSize = _run$attributes.fontSize, color = _run$attributes.color, opacity = _run$attributes.opacity;\n    ctx.fillColor(color);\n    ctx.fillOpacity(opacity);\n    if (font.sbix || font.COLR && font.CPAL) {\n        ctx.save();\n        ctx.translate(0, -run.ascent);\n        for(var i = 0; i < run.glyphs.length; i += 1){\n            var position = run.positions[i];\n            var glyph = run.glyphs[i];\n            ctx.save();\n            ctx.translate(position.xOffset, position.yOffset);\n            glyph.render(ctx, fontSize);\n            ctx.restore();\n            ctx.translate(position.xAdvance, position.yAdvance);\n        }\n        ctx.restore();\n    } else {\n        ctx.font(typeof font.name === \"string\" ? font.name : font, fontSize);\n        try {\n            renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    ctx.translate(runAdvanceWidth, 0);\n};\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n    var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n    ctx.save();\n    var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n    var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n    var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n    var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n    var width = line.xAdvance;\n    var ascent = font.ascent * scale;\n    var xHeight = font.xHeight * scale;\n    var descent = font.descent * scale;\n    var capHeight = font.capHeight * scale;\n    var xTranslate = x;\n    var yTranslate = y;\n    switch(textAnchor){\n        case \"middle\":\n            xTranslate = x - width / 2;\n            break;\n        case \"end\":\n            xTranslate = x - width;\n            break;\n        default:\n            xTranslate = x;\n            break;\n    }\n    switch(dominantBaseline){\n        case \"middle\":\n        case \"central\":\n            yTranslate = y + capHeight / 2;\n            break;\n        case \"hanging\":\n            yTranslate = y + capHeight;\n            break;\n        case \"mathematical\":\n            yTranslate = y + xHeight;\n            break;\n        case \"text-after-edge\":\n            yTranslate = y + descent;\n            break;\n        case \"text-before-edge\":\n            yTranslate = y + ascent;\n            break;\n        default:\n            yTranslate = y;\n            break;\n    }\n    ctx.translate(xTranslate, yTranslate);\n    line.runs.forEach(function(run) {\n        return renderRun$1(ctx, run);\n    });\n    ctx.restore();\n};\nvar renderSvgText = function renderSvgText(ctx, node) {\n    node.children.forEach(function(span) {\n        return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n    });\n};\n/**\n * Create pairs from array\n *\n * @template T\n * @param {T[]} values array\n * @returns {T[][]} pairs\n */ var pairs = function pairs(values) {\n    var result = [];\n    for(var i = 0; i < values.length; i += 2){\n        result.push([\n            values[i],\n            values[i + 1]\n        ]);\n    }\n    return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param {string} points string ex. \"20,30 50,60\"\n * @returns {number[][]} points array ex. [[20, 30], [50, 60]]\n */ var parsePoints = function parsePoints(points) {\n    var values = (points || \"\").trim().replace(/,/g, \" \").replace(/(\\d)-(\\d)/g, \"$1 -$2\").split(/\\s+/);\n    if (values.length % 2 !== 0) {\n        values = values.slice(0, -1);\n    }\n    var mappedValues = values.map(parseFloat);\n    return pairs(mappedValues);\n};\nvar drawPolyline = function drawPolyline(ctx, points) {\n    if (points.length > 0) {\n        ctx.moveTo(points[0][0], points[0][1]);\n        points.slice(1).forEach(function(p) {\n            return ctx.lineTo(p[0], p[1]);\n        });\n    }\n};\nvar renderPolyline = function renderPolyline(ctx, node) {\n    var points = parsePoints(node.props.points || \"\");\n    drawPolyline(ctx, points);\n};\nvar renderPolygon = function renderPolygon(ctx, node) {\n    renderPolyline(ctx, node);\n    ctx.closePath();\n};\nvar renderImage$1 = function renderImage(ctx, node) {\n    if (!node.image.data) return;\n    var _node$props = node.props, x = _node$props.x, y = _node$props.y;\n    var _node$style = node.style, width = _node$style.width, height = _node$style.height, opacity = _node$style.opacity;\n    var paddingTop = node.box.paddingLeft || 0;\n    var paddingLeft = node.box.paddingLeft || 0;\n    if (width === 0 || height === 0) {\n        console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n        return;\n    }\n    ctx.save();\n    ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n        width: width,\n        height: height\n    });\n    ctx.restore();\n};\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipNode = function clipNode(ctx, node) {\n    if (!node.style) return;\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left, width = _node$box.width, height = _node$box.height;\n    var _node$style = node.style, _node$style$borderTop = _node$style.borderTopLeftRadius, borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop, _node$style$borderTop2 = _node$style.borderTopRightRadius, borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2, _node$style$borderBot = _node$style.borderBottomRightRadius, borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot, _node$style$borderBot2 = _node$style.borderBottomLeftRadius, borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2;\n    // Border top\n    var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    var ctr = rtr * (1.0 - KAPPA$1);\n    ctx.moveTo(left + rtr, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr);\n    // Border right\n    var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    var cbr = rbr * (1.0 - KAPPA$1);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height);\n    // Border bottom\n    var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    var cbl = rbl * (1.0 - KAPPA$1);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl);\n    // Border left\n    var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    var ctl = rtl * (1.0 - KAPPA$1);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n};\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n    var operation = transform.operation, value = transform.value;\n    switch(operation){\n        case \"scale\":\n            {\n                var scaleX = value[0], scaleY = value[1];\n                ctx.scale(scaleX, scaleY, {\n                    origin: origin\n                });\n                break;\n            }\n        case \"rotate\":\n            {\n                var angle = value[0];\n                ctx.rotate(angle, {\n                    origin: origin\n                });\n                break;\n            }\n        case \"translate\":\n            {\n                var x = value[0], _value$ = value[1], y = _value$ === void 0 ? 0 : _value$;\n                ctx.translate(x, y, {\n                    origin: origin\n                });\n                break;\n            }\n        case \"skew\":\n            {\n                var xAngle = value[0], yAngle = value[1];\n                ctx.skew(xAngle, yAngle, {\n                    origin: origin\n                });\n                break;\n            }\n        case \"matrix\":\n            {\n                ctx.transform.apply(ctx, value);\n                break;\n            }\n        default:\n            {\n                console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n            }\n    }\n};\nvar applyTransformations = function applyTransformations(ctx, node) {\n    var _node$style, _node$props;\n    if (!node.origin) return;\n    var origin = [\n        node.origin.left,\n        node.origin.top\n    ];\n    var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n    operations.forEach(function(operation) {\n        applySingleTransformation(ctx, operation, origin);\n    });\n};\nvar _boundingBoxFns;\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n    var _node$props;\n    var path = (0,normalize_svg_path__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(abs_svg_path__WEBPACK_IMPORTED_MODULE_2__(parse_svg_path__WEBPACK_IMPORTED_MODULE_3__(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || \"\")));\n    if (!path.length) return [\n        0,\n        0,\n        0,\n        0\n    ];\n    var bounds = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    for(var i = 0, l = path.length; i < l; i += 1){\n        var points = path[i].slice(1);\n        for(var j = 0; j < points.length; j += 2){\n            if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n            if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n            if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n            if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n        }\n    }\n    return bounds;\n};\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n    var _node$props2, _node$props3, _node$props4;\n    var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n    var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n    var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n    return [\n        cx - r,\n        cy - r,\n        cx + r,\n        cy + r\n    ];\n};\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n    var _node$props5, _node$props6, _node$props7, _node$props8;\n    var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n    var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n    var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n    var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n    return [\n        cx - rx,\n        cy - ry,\n        cx + rx,\n        cy + ry\n    ];\n};\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n    var _node$props9, _node$props10, _node$props11, _node$props12;\n    var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n    var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n    var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n    var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n    return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2)\n    ];\n};\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n    var _node$props13, _node$props14, _node$props15, _node$props16;\n    var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n    var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n    var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n    var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n    return [\n        x,\n        y,\n        x + width,\n        y + height\n    ];\n};\nvar max = function max(values) {\n    return Math.max.apply(Math, [\n        -Infinity\n    ].concat(values));\n};\nvar min = function min(values) {\n    return Math.min.apply(Math, [\n        Infinity\n    ].concat(values));\n};\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n    var _node$props17;\n    var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n    var xValues = points.map(function(p) {\n        return p[0];\n    });\n    var yValues = points.map(function(p) {\n        return p[1];\n    });\n    return [\n        min(xValues),\n        min(yValues),\n        max(xValues),\n        max(yValues)\n    ];\n};\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Rect] = getRectBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Line] = getLineBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Path] = getPathBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Circle] = getCircleBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polygon] = getPolylineBoundingBox, _boundingBoxFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\nvar getBoundingBox = function getBoundingBox(node) {\n    var boundingBoxFn = boundingBoxFns[node.type];\n    return boundingBoxFn ? boundingBoxFn(node) : [\n        0,\n        0,\n        0,\n        0\n    ];\n};\nvar _renderFns$1;\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n    var _node$props;\n    var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n    if (lineWidth) ctx.lineWidth(lineWidth);\n};\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n    var _node$props2;\n    var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n    if (strokeColor) ctx.strokeColor(strokeColor);\n};\nvar setOpacity = function setOpacity(ctx, node) {\n    var _node$props3;\n    var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(opacity)) ctx.opacity(opacity);\n};\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n    var _node$props4;\n    var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n    var _node$props5;\n    var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n    if (!(0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\nvar setLineJoin = function setLineJoin(ctx, node) {\n    var _node$props6;\n    var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n    if (lineJoin) ctx.lineJoin(lineJoin);\n};\nvar setLineCap = function setLineCap(ctx, node) {\n    var _node$props7;\n    var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n    if (lineCap) ctx.lineCap(lineCap);\n};\nvar setLineDash = function setLineDash(ctx, node) {\n    var _node$props8;\n    var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n    if (value) ctx.dash(value.split(\",\").map(Number));\n};\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n    var _node$props9, _node$props9$fill;\n    return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.LinearGradient;\n};\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n    var _node$props10, _node$props10$fill;\n    return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.RadialGradient;\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n    var _node$props11;\n    var bbox = getBoundingBox(node);\n    var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n    var x1 = gradient.props.x1 || 0;\n    var y1 = gradient.props.y1 || 0;\n    var x2 = gradient.props.x2 || 1;\n    var y2 = gradient.props.y2 || 0;\n    var m0 = bbox[2] - bbox[0];\n    var m3 = bbox[3] - bbox[1];\n    var m4 = bbox[0];\n    var m5 = bbox[1];\n    var gx1 = m0 * x1 + m4;\n    var gy1 = m3 * y1 + m5;\n    var gx2 = m0 * x2 + m4;\n    var gy2 = m3 * y2 + m5;\n    var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n    gradient.children.forEach(function(stop) {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n    var _node$props12;\n    var bbox = getBoundingBox(node);\n    var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n    var cx = gradient.props.cx || 0.5;\n    var cy = gradient.props.cy || 0.5;\n    var fx = gradient.props.fx || cx;\n    var fy = gradient.props.fy || cy;\n    var r = gradient.props.r || 0.5;\n    var m0 = bbox[2] - bbox[0];\n    var m3 = bbox[3] - bbox[1];\n    var m4 = bbox[0];\n    var m5 = bbox[1];\n    var gr = r * m0;\n    var gcx = m0 * cx + m4;\n    var gcy = m3 * cy + m5;\n    var gfx = m0 * fx + m4;\n    var gfy = m3 * fy + m5;\n    var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n    gradient.children.forEach(function(stop) {\n        grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n    });\n    ctx.fill(grad);\n};\nvar setFillColor = function setFillColor(ctx, node) {\n    var _node$props13;\n    var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n    if (fillColor) ctx.fillColor(fillColor);\n};\nvar setFill = function setFill(ctx, node) {\n    if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n    if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n    return setFillColor(ctx, node);\n};\nvar draw = function draw(ctx, node) {\n    var props = node.props || {};\n    if (props.fill && props.stroke) {\n        ctx.fillAndStroke(props.fillRule);\n    } else if (props.fill) {\n        ctx.fill(props.fillRule);\n    } else if (props.stroke) {\n        ctx.stroke();\n    } else {\n        ctx.save();\n        ctx.opacity(0);\n        ctx.fill(null);\n        ctx.restore();\n    }\n};\nvar noop = function noop() {};\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Tspan] = noop, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.TextInstance] = noop, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Path] = renderPath, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Rect] = renderRect, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Line] = renderLine$1, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.G] = renderGroup, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text] = renderSvgText, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Circle] = renderCircle, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Image] = renderImage$1, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Ellipse] = renderEllipse, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polygon] = renderPolygon, _renderFns$1[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Polyline] = renderPolyline, _renderFns$1);\nvar renderNode$1 = function renderNode(ctx, node) {\n    var renderFn = renderFns$1[node.type];\n    if (renderFns$1) {\n        renderFn(ctx, node);\n    } else {\n        console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n    }\n};\nvar drawNode = function drawNode(ctx, node) {\n    setLineCap(ctx, node);\n    setLineDash(ctx, node);\n    setLineJoin(ctx, node);\n    setStrokeWidth(ctx, node);\n    setStrokeColor(ctx, node);\n    setFill(ctx, node);\n    setStrokeOpacity(ctx, node);\n    setFillOpacity(ctx, node);\n    setOpacity(ctx, node);\n    applyTransformations(ctx, node);\n    renderNode$1(ctx, node);\n    draw(ctx, node);\n};\nvar clipPath = function clipPath(ctx, node) {\n    var _node$props14;\n    var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n    if (value) {\n        var children = value.children || [];\n        children.forEach(function(child) {\n            return renderNode$1(ctx, child);\n        });\n        ctx.clip();\n    }\n};\nvar drawChildren = function drawChildren(ctx, node) {\n    var children = node.children || [];\n    children.forEach(function(child) {\n        ctx.save();\n        clipPath(ctx, child);\n        drawNode(ctx, child);\n        drawChildren(ctx, child);\n        ctx.restore();\n    });\n};\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n    var _node$box = node.box, width = _node$box.width, height = _node$box.height;\n    var _node$props15 = node.props, viewBox = _node$props15.viewBox, _node$props15$preserv = _node$props15.preserveAspectRatio, preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n    var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice, meetOrSlice = _preserveAspectRatio$ === void 0 ? \"meet\" : _preserveAspectRatio$, _preserveAspectRatio$2 = preserveAspectRatio.align, align = _preserveAspectRatio$2 === void 0 ? \"xMidYMid\" : _preserveAspectRatio$2;\n    if (viewBox == null || width == null || height == null) return;\n    var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n    var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n    var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n    var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n    var logicalRatio = logicalWidth / logicalHeight;\n    var physicalRatio = width / height;\n    var scaleX = width / logicalWidth;\n    var scaleY = height / logicalHeight;\n    if (align === \"none\") {\n        ctx.scale(scaleX, scaleY);\n        ctx.translate(-x, -y);\n        return;\n    }\n    if (logicalRatio < physicalRatio && meetOrSlice === \"meet\" || logicalRatio >= physicalRatio && meetOrSlice === \"slice\") {\n        ctx.scale(scaleY, scaleY);\n        switch(align){\n            case \"xMinYMin\":\n            case \"xMinYMid\":\n            case \"xMinYMax\":\n                ctx.translate(-x, -y);\n                break;\n            case \"xMidYMin\":\n            case \"xMidYMid\":\n            case \"xMidYMax\":\n                ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n                break;\n            default:\n                ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n        }\n    } else {\n        ctx.scale(scaleX, scaleX);\n        switch(align){\n            case \"xMinYMin\":\n            case \"xMidYMin\":\n            case \"xMaxYMin\":\n                ctx.translate(-x, -y);\n                break;\n            case \"xMinYMid\":\n            case \"xMidYMid\":\n            case \"xMaxYMid\":\n                ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n                break;\n            default:\n                ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n        }\n    }\n};\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n    var _node$box2 = node.box, top = _node$box2.top, left = _node$box2.left;\n    var paddingLeft = node.box.paddingLeft || 0;\n    var paddingTop = node.box.paddingTop || 0;\n    ctx.translate(left + paddingLeft, top + paddingTop);\n};\nvar renderSvg = function renderSvg(ctx, node) {\n    ctx.save();\n    clipNode(ctx, node);\n    moveToOrigin(ctx, node);\n    resolveAspectRatio(ctx, node);\n    drawChildren(ctx, node);\n    ctx.restore();\n};\nvar black = {\n    value: [\n        0,\n        0,\n        0\n    ],\n    opacity: 1\n};\nvar parseColor = function parseColor(hex) {\n    var parsed = color_string__WEBPACK_IMPORTED_MODULE_5__.get(hex);\n    if (!parsed) return black;\n    var value = color_string__WEBPACK_IMPORTED_MODULE_5__.to.hex(parsed.value.slice(0, 3));\n    var opacity = parsed.value[3];\n    return {\n        value: value,\n        opacity: opacity\n    };\n};\n/* eslint-disable no-param-reassign */ var DEST_REGEXP = /^#.+/;\nvar isSrcId$1 = function isSrcId(src) {\n    return src.match(DEST_REGEXP);\n};\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n    var _attachment$xOffset = attachment.xOffset, xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset, _attachment$yOffset = attachment.yOffset, yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset, width = attachment.width, height = attachment.height, image = attachment.image;\n    ctx.translate(-width + xOffset, -height + yOffset);\n    ctx.image(image, 0, 0, {\n        fit: [\n            width,\n            height\n        ],\n        align: \"center\",\n        valign: \"bottom\"\n    });\n};\nvar renderAttachments = function renderAttachments(ctx, run) {\n    ctx.save();\n    var font = run.attributes.font;\n    var space = font.glyphForCodePoint(0x20);\n    var objectReplacement = font.glyphForCodePoint(0xfffc);\n    var attachmentAdvance = 0;\n    for(var i = 0; i < run.glyphs.length; i += 1){\n        var position = run.positions[i];\n        var glyph = run.glyphs[i];\n        attachmentAdvance += position.xAdvance || 0;\n        if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n            ctx.translate(attachmentAdvance, position.yOffset || 0);\n            renderAttachment(ctx, run.attributes.attachment);\n            run.glyphs[i] = space;\n            attachmentAdvance = 0;\n        }\n    }\n    ctx.restore();\n};\nvar renderRun = function renderRun(ctx, run, options) {\n    var _run$attributes = run.attributes, font = _run$attributes.font, fontSize = _run$attributes.fontSize, link = _run$attributes.link;\n    var color = parseColor(run.attributes.color);\n    var opacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n    var height = run.height, descent = run.descent, xAdvance = run.xAdvance;\n    if (options.outlineRuns) {\n        ctx.rect(0, -height, xAdvance, height).stroke();\n    }\n    ctx.fillColor(color.value);\n    ctx.fillOpacity(opacity);\n    if (link) {\n        if (isSrcId$1(link)) {\n            ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n        } else {\n            ctx.link(0, -height - descent, xAdvance, height, link);\n        }\n    }\n    renderAttachments(ctx, run);\n    if (font.sbix || font.COLR && font.CPAL) {\n        ctx.save();\n        ctx.translate(0, -run.ascent);\n        for(var i = 0; i < run.glyphs.length; i += 1){\n            var position = run.positions[i];\n            var glyph = run.glyphs[i];\n            ctx.save();\n            ctx.translate(position.xOffset, position.yOffset);\n            glyph.render(ctx, fontSize);\n            ctx.restore();\n            ctx.translate(position.xAdvance, position.yAdvance);\n        }\n        ctx.restore();\n    } else {\n        ctx.font(typeof font.name === \"string\" ? font.name : font, fontSize);\n        try {\n            renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    ctx.translate(xAdvance, 0);\n};\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n    var color = parseColor(backgroundColor);\n    ctx.save();\n    ctx.fillOpacity(color.opacity);\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill(color.value);\n    ctx.restore();\n};\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n    ctx.save();\n    ctx.lineWidth(line.rect.height);\n    ctx.strokeOpacity(line.opacity);\n    if (/dashed/.test(line.style)) {\n        ctx.dash(3 * line.rect.height);\n    } else if (/dotted/.test(line.style)) {\n        ctx.dash(line.rect.height);\n    }\n    if (/wavy/.test(line.style)) {\n        var dist = Math.max(2, line.rect.height);\n        var step = 1.1 * dist;\n        var stepCount = Math.floor(line.rect.width / (2 * step));\n        // Adjust step to fill entire width\n        var remainingWidth = line.rect.width - stepCount * 2 * step;\n        var adjustment = remainingWidth / stepCount / 2;\n        step += adjustment;\n        var cp1y = line.rect.y + dist;\n        var cp2y = line.rect.y - dist;\n        var x = line.rect.x;\n        ctx.moveTo(line.rect.x, line.rect.y);\n        for(var i = 0; i < stepCount; i += 1){\n            ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n            x += 2 * step;\n        }\n    } else {\n        ctx.moveTo(line.rect.x, line.rect.y);\n        ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n        if (/double/.test(line.style)) {\n            ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n            ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n        }\n    }\n    ctx.stroke(line.color);\n    ctx.restore();\n};\nvar renderLine = function renderLine(ctx, line, options) {\n    var lineAscent = line.ascent;\n    if (options.outlineLines) {\n        ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n    }\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y + lineAscent);\n    for(var i = 0; i < line.runs.length; i += 1){\n        var run = line.runs[i];\n        var isLastRun = i === line.runs.length - 1;\n        if (run.attributes.backgroundColor) {\n            var overflowRight = isLastRun ? line.overflowRight : 0;\n            var backgroundRect = {\n                x: 0,\n                y: -lineAscent,\n                height: line.box.height,\n                width: run.xAdvance - overflowRight\n            };\n            renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n        }\n        renderRun(ctx, run, options);\n    }\n    ctx.restore();\n    ctx.save();\n    ctx.translate(line.box.x, line.box.y);\n    for(var _i = 0; _i < line.decorationLines.length; _i += 1){\n        var decorationLine = line.decorationLines[_i];\n        renderDecorationLine(ctx, decorationLine);\n    }\n    ctx.restore();\n};\nvar renderBlock = function renderBlock(ctx, block, options) {\n    block.forEach(function(line) {\n        renderLine(ctx, line, options);\n    });\n};\nvar renderText = function renderText(ctx, node) {\n    var _node$box2, _node$box3;\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left;\n    var blocks = [\n        node.lines\n    ];\n    var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n    var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n    var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n    var offsetX = node.alignOffset || 0;\n    ctx.save();\n    ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n    blocks.forEach(function(block) {\n        renderBlock(ctx, block, {});\n    });\n    ctx.restore();\n};\nvar renderPage = function renderPage(ctx, node) {\n    var _node$props;\n    var _node$box = node.box, width = _node$box.width, height = _node$box.height;\n    var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n    var userUnit = dpi / 72;\n    ctx.addPage({\n        size: [\n            width,\n            height\n        ],\n        margin: 0,\n        userUnit: userUnit\n    });\n};\nvar renderNote = function renderNote(ctx, node) {\n    var _node$children, _node$style, _node$style2;\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left;\n    var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || \"\";\n    var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n    var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n    ctx.note(left, top, 0, 0, value, {\n        color: color,\n        borderWidth: borderWidth\n    });\n};\nvar isNumeric = function isNumeric(n) {\n    return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n    var cr = cw / ch;\n    var ir = iw / ih;\n    var pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px);\n    var pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py);\n    var pxv = pxp ? pxp.percent : 0.5;\n    var pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        var _height = ch;\n        var _width = _height * ir;\n        var _yOffset = isNumeric(py) ? py : 0;\n        var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n        return {\n            width: _width,\n            height: _height,\n            xOffset: _xOffset,\n            yOffset: _yOffset\n        };\n    }\n    var width = cw;\n    var height = width / ir;\n    var xOffset = isNumeric(px) ? px : 0;\n    var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return {\n        width: width,\n        height: height,\n        yOffset: yOffset,\n        xOffset: xOffset\n    };\n};\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n    var width = iw;\n    var height = ih;\n    var pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px);\n    var pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py);\n    var pxv = pxp ? pxp.percent : 0.5;\n    var pyv = pyp ? pyp.percent : 0.5;\n    var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return {\n        width: width,\n        height: height,\n        xOffset: xOffset,\n        yOffset: yOffset\n    };\n};\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n    var ir = iw / ih;\n    var cr = cw / ch;\n    var pxp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px);\n    var pyp = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py);\n    var pxv = pxp ? pxp.percent : 0.5;\n    var pyv = pyp ? pyp.percent : 0.5;\n    if (cr > ir) {\n        var _width2 = cw;\n        var _height2 = _width2 / ir;\n        var _xOffset2 = isNumeric(px) ? px : 0;\n        var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n        return {\n            width: _width2,\n            height: _height2,\n            yOffset: _yOffset2,\n            xOffset: _xOffset2\n        };\n    }\n    var height = ch;\n    var width = height * ir;\n    var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    var yOffset = isNumeric(py) ? py : 0;\n    return {\n        width: width,\n        height: height,\n        xOffset: xOffset,\n        yOffset: yOffset\n    };\n};\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n    var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n    var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n    return {\n        width: cw,\n        height: ch,\n        xOffset: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(px) ? 0 : px || 0,\n        yOffset: (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.matchPercent)(py) ? 0 : py || 0\n    };\n};\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n    if (type === void 0) {\n        type = \"fill\";\n    }\n    switch(type){\n        case \"contain\":\n            return applyContainObjectFit(cw, ch, iw, ih, px, py);\n        case \"cover\":\n            return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n        case \"none\":\n            return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n        case \"scale-down\":\n            return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n        default:\n            return applyFillObjectFit(cw, ch, px, py);\n    }\n};\nvar drawImage = function drawImage(ctx, node, options) {\n    var _node$style, _node$style2, _node$style3, _node$style4;\n    if (options === void 0) {\n        options = {};\n    }\n    var _node$box = node.box, left = _node$box.left, top = _node$box.top;\n    var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n    var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n    var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n    var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n    var paddingTop = node.box.paddingTop || 0;\n    var paddingRight = node.box.paddingRight || 0;\n    var paddingBottom = node.box.paddingBottom || 0;\n    var paddingLeft = node.box.paddingLeft || 0;\n    var imageCache = options.imageCache || new Map();\n    var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY), width = _resolveObjectFit.width, height = _resolveObjectFit.height, xOffset = _resolveObjectFit.xOffset, yOffset = _resolveObjectFit.yOffset;\n    if (node.image.data) {\n        if (width !== 0 && height !== 0) {\n            var cacheKey = node.image.key;\n            var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n            if (cacheKey) imageCache.set(cacheKey, image);\n            var imageOpacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)(opacity) ? 1 : opacity;\n            ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n                width: width,\n                height: height\n            });\n        } else {\n            console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n        }\n    }\n};\nvar renderImage = function renderImage(ctx, node, options) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawImage(ctx, node, options);\n    ctx.restore();\n};\nvar CONTENT_COLOR = \"#a1c6e7\";\nvar PADDING_COLOR = \"#c4deb9\";\nvar MARGIN_COLOR = \"#f8cca1\";\n// TODO: Draw debug boxes using clipping to enhance quality\nvar debugContent = function debugContent(ctx, node) {\n    var _node$box = node.box, left = _node$box.left, top = _node$box.top, width = _node$box.width, height = _node$box.height, _node$box$paddingLeft = _node$box.paddingLeft, paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft, _node$box$paddingTop = _node$box.paddingTop, paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop, _node$box$paddingRigh = _node$box.paddingRight, paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh, _node$box$paddingBott = _node$box.paddingBottom, paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott, _node$box$borderLeftW = _node$box.borderLeftWidth, borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW, _node$box$borderTopWi = _node$box.borderTopWidth, borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi, _node$box$borderRight = _node$box.borderRightWidth, borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight, _node$box$borderBotto = _node$box.borderBottomWidth, borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n    ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\nvar debugPadding = function debugPadding(ctx, node) {\n    var _node$box2 = node.box, left = _node$box2.left, top = _node$box2.top, width = _node$box2.width, height = _node$box2.height, _node$box2$paddingLef = _node$box2.paddingLeft, paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef, _node$box2$paddingTop = _node$box2.paddingTop, paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop, _node$box2$paddingRig = _node$box2.paddingRight, paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig, _node$box2$paddingBot = _node$box2.paddingBottom, paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot, _node$box2$borderLeft = _node$box2.borderLeftWidth, borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft, _node$box2$borderTopW = _node$box2.borderTopWidth, borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW, _node$box2$borderRigh = _node$box2.borderRightWidth, borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh, _node$box2$borderBott = _node$box2.borderBottomWidth, borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n    // Padding top\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill();\n    // Padding left\n    ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill();\n    // Padding right\n    ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill();\n    // Padding bottom\n    ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\nvar getMargin = function getMargin(box) {\n    var marginLeft = box.marginLeft === \"auto\" ? 0 : box.marginLeft;\n    var marginTop = box.marginTop === \"auto\" ? 0 : box.marginTop;\n    var marginRight = box.marginRight === \"auto\" ? 0 : box.marginRight;\n    var marginBottom = box.marginBottom === \"auto\" ? 0 : box.marginBottom;\n    return {\n        marginLeft: marginLeft,\n        marginTop: marginTop,\n        marginRight: marginRight,\n        marginBottom: marginBottom\n    };\n};\nvar debugMargin = function debugMargin(ctx, node) {\n    var _node$box3 = node.box, left = _node$box3.left, top = _node$box3.top, width = _node$box3.width, height = _node$box3.height;\n    var _getMargin = getMargin(node.box), _getMargin$marginLeft = _getMargin.marginLeft, marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft, _getMargin$marginTop = _getMargin.marginTop, marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop, _getMargin$marginRigh = _getMargin.marginRight, marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh, _getMargin$marginBott = _getMargin.marginBottom, marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n    // Margin left\n    ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill();\n    // Margin right\n    ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill();\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n};\nvar debugText = function debugText(ctx, node) {\n    var _node$box4 = node.box, left = _node$box4.left, top = _node$box4.top, width = _node$box4.width, height = _node$box4.height;\n    var _getMargin2 = getMargin(node.box), _getMargin2$marginLef = _getMargin2.marginLeft, marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef, _getMargin2$marginTop = _getMargin2.marginTop, marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop, _getMargin2$marginRig = _getMargin2.marginRight, marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig, _getMargin2$marginBot = _getMargin2.marginBottom, marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n    var roundedWidth = Math.round(width + marginLeft + marginRight);\n    var roundedHeight = Math.round(height + marginTop + marginBottom);\n    ctx.fontSize(6).opacity(1).fillColor(\"black\").text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\nvar debugOrigin = function debugOrigin(ctx, node) {\n    if (node.origin) {\n        ctx.circle(node.origin.left, node.origin.top, 3).fill(\"red\").circle(node.origin.left, node.origin.top, 5).stroke(\"red\");\n    }\n};\nvar renderDebug = function renderDebug(ctx, node) {\n    var _node$props;\n    if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n    ctx.save();\n    debugContent(ctx, node);\n    debugPadding(ctx, node);\n    debugMargin(ctx, node);\n    debugText(ctx, node);\n    debugOrigin(ctx, node);\n    ctx.restore();\n};\nvar availableMethods = [\n    \"dash\",\n    \"clip\",\n    \"save\",\n    \"path\",\n    \"fill\",\n    \"font\",\n    \"text\",\n    \"rect\",\n    \"scale\",\n    \"moveTo\",\n    \"lineTo\",\n    \"stroke\",\n    \"rotate\",\n    \"circle\",\n    \"lineCap\",\n    \"opacity\",\n    \"ellipse\",\n    \"polygon\",\n    \"restore\",\n    \"lineJoin\",\n    \"fontSize\",\n    \"fillColor\",\n    \"lineWidth\",\n    \"translate\",\n    \"miterLimit\",\n    \"strokeColor\",\n    \"fillOpacity\",\n    \"roundedRect\",\n    \"fillAndStroke\",\n    \"strokeOpacity\",\n    \"bezierCurveTo\",\n    \"quadraticCurveTo\",\n    \"linearGradient\",\n    \"radialGradient\"\n];\nvar painter = function painter(ctx) {\n    var p = availableMethods.reduce(function(acc, prop) {\n        var _extends2;\n        return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__({}, acc, (_extends2 = {}, _extends2[prop] = function() {\n            ctx[prop].apply(ctx, arguments);\n            return p;\n        }, _extends2));\n    }, {});\n    return p;\n};\nvar renderCanvas = function renderCanvas(ctx, node) {\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left, width = _node$box.width, height = _node$box.height;\n    var paddingTop = node.box.paddingTop || 0;\n    var paddingLeft = node.box.paddingLeft || 0;\n    var paddingRight = node.box.paddingRight || 0;\n    var paddingBottom = node.box.paddingBottom || 0;\n    var availableWidth = width - paddingLeft - paddingRight;\n    var availableHeight = height - paddingTop - paddingBottom;\n    if (!availableWidth || !availableHeight) {\n        console.warn(\"Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.\");\n    }\n    ctx.save().translate(left + paddingLeft, top + paddingTop);\n    if (node.props.paint) {\n        node.props.paint(painter(ctx), availableWidth, availableHeight);\n    }\n    ctx.restore();\n};\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderTopWidth = style.borderTopWidth, borderRightWidth = style.borderRightWidth, borderLeftWidth = style.borderLeftWidth;\n    // Clip outer top border edge\n    ctx.moveTo(left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    var c0 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr);\n    // Move down in case the margin exceedes the radius\n    var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n    ctx.lineTo(left + width, topRightYCoord);\n    // Clip inner top right cap\n    ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n    // Ellipse coefficients inner top right cap\n    var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n    var c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth);\n    // Clip inner top border edge\n    ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    var topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n    ctx.lineTo(left, topLeftYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    var c5 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border top cap joins\n    if (borderRightWidth) {\n        var trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        var _trSlope = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n    var top = layout.top, left = layout.left, width = layout.width;\n    var borderTopColor = style.borderTopColor, borderTopWidth = style.borderTopWidth, borderTopStyle = style.borderTopStyle, borderRightWidth = style.borderRightWidth, borderLeftWidth = style.borderLeftWidth;\n    var c0 = rtl * (1.0 - KAPPA);\n    var c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    ctx.lineTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.strokeColor(borderTopColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n    if (borderTopStyle === \"dashed\") {\n        ctx.dash(borderTopWidth * 2, {\n            space: borderTopWidth * 1.2\n        });\n    } else if (borderTopStyle === \"dotted\") {\n        ctx.dash(borderTopWidth, {\n            space: borderTopWidth * 1.2\n        });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderTopWidth = style.borderTopWidth, borderRightWidth = style.borderRightWidth, borderBottomWidth = style.borderBottomWidth;\n    // Clip outer right border edge\n    ctx.moveTo(left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer bottom right cap\n    var c0 = rbr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    // Move left in case the margin exceedes the radius\n    var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n    ctx.lineTo(topBottomXCoord, top + height);\n    // Clip inner bottom right cap\n    ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n    // Ellipse coefficients inner bottom right cap\n    var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    var c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth));\n    // Clip inner right border edge\n    ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth));\n    // Ellipse coefficients inner top right cap\n    var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n    var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n    var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n    var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n    var topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n    ctx.lineTo(topRightXCoord, top);\n    // Move right in case the margin exceedes the radius\n    ctx.lineTo(left + width - rtr, top);\n    // Ellipse coefficients outer top right cap\n    var c5 = rtr * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderTopWidth) {\n        var trSlope = -borderTopWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        var brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderRightColor = style.borderRightColor, borderRightStyle = style.borderRightStyle, borderRightWidth = style.borderRightWidth, borderTopWidth = style.borderTopWidth, borderBottomWidth = style.borderBottomWidth;\n    var c0 = rbr * (1.0 - KAPPA);\n    var c1 = rtr * (1.0 - KAPPA);\n    ctx.moveTo(left + width - rtr, top);\n    ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n    ctx.lineTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n    ctx.strokeColor(borderRightColor);\n    ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderRightStyle === \"dashed\") {\n        ctx.dash(borderRightWidth * 2, {\n            space: borderRightWidth * 1.2\n        });\n    } else if (borderRightStyle === \"dotted\") {\n        ctx.dash(borderRightWidth, {\n            space: borderRightWidth * 1.2\n        });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderBottomWidth = style.borderBottomWidth, borderRightWidth = style.borderRightWidth, borderLeftWidth = style.borderLeftWidth;\n    // Clip outer top border edge\n    ctx.moveTo(left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    var c0 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    // Move up in case the margin exceedes the radius\n    var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n    ctx.lineTo(left, bottomLeftYCoord);\n    // Clip inner bottom left cap\n    ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n    // Ellipse coefficients inner top right cap\n    var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner bottom left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth);\n    // Clip inner bottom border edge\n    ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth);\n    // Ellipse coefficients inner top left cap\n    var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n    var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n    var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n    var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n    var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n    ctx.lineTo(left + width, bottomRightYCoord);\n    // Move down in case the margin exceedes the radius\n    ctx.lineTo(left + width, top + height - rbr);\n    // Ellipse coefficients outer top left cap\n    var c5 = rbr * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border bottom cap joins\n    if (borderRightWidth) {\n        var brSlope = borderBottomWidth / borderRightWidth;\n        ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderLeftWidth) {\n        var trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderBottomColor = style.borderBottomColor, borderBottomStyle = style.borderBottomStyle, borderBottomWidth = style.borderBottomWidth, borderRightWidth = style.borderRightWidth, borderLeftWidth = style.borderLeftWidth;\n    var c0 = rbl * (1.0 - KAPPA);\n    var c1 = rbr * (1.0 - KAPPA);\n    ctx.moveTo(left + width, top + height - rbr);\n    ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n    ctx.lineTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.strokeColor(borderBottomColor);\n    ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n    if (borderBottomStyle === \"dashed\") {\n        ctx.dash(borderBottomWidth * 2, {\n            space: borderBottomWidth * 1.2\n        });\n    } else if (borderBottomStyle === \"dotted\") {\n        ctx.dash(borderBottomWidth, {\n            space: borderBottomWidth * 1.2\n        });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n    var top = layout.top, left = layout.left, width = layout.width, height = layout.height;\n    var borderTopWidth = style.borderTopWidth, borderLeftWidth = style.borderLeftWidth, borderBottomWidth = style.borderBottomWidth;\n    // Clip outer left border edge\n    ctx.moveTo(left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    // Ellipse coefficients outer top left cap\n    var c0 = rtl * (1.0 - KAPPA);\n    // Clip outer top left cap\n    ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n    // Move right in case the margin exceedes the radius\n    var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n    ctx.lineTo(topLeftCoordX, top);\n    // Clip inner top left cap\n    ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n    // Ellipse coefficients inner top left cap\n    var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n    var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n    var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n    var c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n    // Clip inner top right cap\n    ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth));\n    // Clip inner left border edge\n    ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth));\n    // Ellipse coefficients inner bottom left cap\n    var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n    var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n    var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n    var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n    var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n    // Clip inner top left cap\n    ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n    ctx.lineTo(bottomLeftXCoord, top + height);\n    // Move left in case the margin exceedes the radius\n    ctx.lineTo(left + rbl, top + height);\n    // Ellipse coefficients outer top right cap\n    var c5 = rbl * (1.0 - KAPPA);\n    // Clip outer top right cap\n    ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n    ctx.closePath();\n    ctx.clip();\n    // Clip border right cap joins\n    if (borderBottomWidth) {\n        var trSlope = -borderBottomWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.closePath();\n        ctx.clip();\n    }\n    if (borderBottomWidth) {\n        var _trSlope2 = -borderTopWidth / borderLeftWidth;\n        ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n        ctx.lineTo(left, top);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left + width, top + height);\n        ctx.closePath();\n        ctx.clip();\n    }\n};\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n    var top = layout.top, left = layout.left, height = layout.height;\n    var borderLeftColor = style.borderLeftColor, borderLeftStyle = style.borderLeftStyle, borderLeftWidth = style.borderLeftWidth, borderTopWidth = style.borderTopWidth, borderBottomWidth = style.borderBottomWidth;\n    var c0 = rbl * (1.0 - KAPPA);\n    var c1 = rtl * (1.0 - KAPPA);\n    ctx.moveTo(left + rbl, top + height);\n    ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n    ctx.lineTo(left, top + rtl);\n    ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n    ctx.strokeColor(borderLeftColor);\n    ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n    if (borderLeftStyle === \"dashed\") {\n        ctx.dash(borderLeftWidth * 2, {\n            space: borderLeftWidth * 1.2\n        });\n    } else if (borderLeftStyle === \"dotted\") {\n        ctx.dash(borderLeftWidth, {\n            space: borderLeftWidth * 1.2\n        });\n    }\n    ctx.stroke();\n    ctx.undash();\n};\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n    return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\nvar renderBorders = function renderBorders(ctx, node) {\n    if (!shouldRenderBorders(node)) return;\n    var _node$box = node.box, width = _node$box.width, height = _node$box.height, borderTopWidth = _node$box.borderTopWidth, borderLeftWidth = _node$box.borderLeftWidth, borderRightWidth = _node$box.borderRightWidth, borderBottomWidth = _node$box.borderBottomWidth;\n    var _node$style = node.style, opacity = _node$style.opacity, _node$style$borderTop = _node$style.borderTopLeftRadius, borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop, _node$style$borderTop2 = _node$style.borderTopRightRadius, borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2, _node$style$borderBot = _node$style.borderBottomLeftRadius, borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot, _node$style$borderBot2 = _node$style.borderBottomRightRadius, borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2, _node$style$borderTop3 = _node$style.borderTopColor, borderTopColor = _node$style$borderTop3 === void 0 ? \"black\" : _node$style$borderTop3, _node$style$borderTop4 = _node$style.borderTopStyle, borderTopStyle = _node$style$borderTop4 === void 0 ? \"solid\" : _node$style$borderTop4, _node$style$borderLef = _node$style.borderLeftColor, borderLeftColor = _node$style$borderLef === void 0 ? \"black\" : _node$style$borderLef, _node$style$borderLef2 = _node$style.borderLeftStyle, borderLeftStyle = _node$style$borderLef2 === void 0 ? \"solid\" : _node$style$borderLef2, _node$style$borderRig = _node$style.borderRightColor, borderRightColor = _node$style$borderRig === void 0 ? \"black\" : _node$style$borderRig, _node$style$borderRig2 = _node$style.borderRightStyle, borderRightStyle = _node$style$borderRig2 === void 0 ? \"solid\" : _node$style$borderRig2, _node$style$borderBot3 = _node$style.borderBottomColor, borderBottomColor = _node$style$borderBot3 === void 0 ? \"black\" : _node$style$borderBot3, _node$style$borderBot4 = _node$style.borderBottomStyle, borderBottomStyle = _node$style$borderBot4 === void 0 ? \"solid\" : _node$style$borderBot4;\n    var style = {\n        borderTopColor: borderTopColor,\n        borderTopWidth: borderTopWidth,\n        borderTopStyle: borderTopStyle,\n        borderLeftColor: borderLeftColor,\n        borderLeftWidth: borderLeftWidth,\n        borderLeftStyle: borderLeftStyle,\n        borderRightColor: borderRightColor,\n        borderRightWidth: borderRightWidth,\n        borderRightStyle: borderRightStyle,\n        borderBottomColor: borderBottomColor,\n        borderBottomWidth: borderBottomWidth,\n        borderBottomStyle: borderBottomStyle,\n        borderTopLeftRadius: borderTopLeftRadius,\n        borderTopRightRadius: borderTopRightRadius,\n        borderBottomLeftRadius: borderBottomLeftRadius,\n        borderBottomRightRadius: borderBottomRightRadius\n    };\n    var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    ctx.save();\n    ctx.strokeOpacity(opacity);\n    if (borderTopWidth) {\n        ctx.save();\n        clipBorderTop(ctx, node.box, style, rtr, rtl);\n        fillBorderTop(ctx, node.box, style, rtr, rtl);\n        ctx.restore();\n    }\n    if (borderRightWidth) {\n        ctx.save();\n        clipBorderRight(ctx, node.box, style, rtr, rbr);\n        fillBorderRight(ctx, node.box, style, rtr, rbr);\n        ctx.restore();\n    }\n    if (borderBottomWidth) {\n        ctx.save();\n        clipBorderBottom(ctx, node.box, style, rbl, rbr);\n        fillBorderBottom(ctx, node.box, style, rbl, rbr);\n        ctx.restore();\n    }\n    if (borderLeftWidth) {\n        ctx.save();\n        clipBorderLeft(ctx, node.box, style, rbl, rtl);\n        fillBorderLeft(ctx, node.box, style, rbl, rtl);\n        ctx.restore();\n    }\n    ctx.restore();\n};\nvar drawBackground = function drawBackground(ctx, node) {\n    var _node$style;\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left, width = _node$box.width, height = _node$box.height;\n    var color = parseColor(node.style.backgroundColor);\n    var nodeOpacity = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_1__.isNil)((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n    var opacity = Math.min(color.opacity, nodeOpacity);\n    ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\nvar renderBackground = function renderBackground(ctx, node) {\n    var _node$style2;\n    var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n    if (hasBackground) {\n        ctx.save();\n        clipNode(ctx, node);\n        drawBackground(ctx, node);\n        ctx.restore();\n    }\n};\nvar isSrcId = function isSrcId(value) {\n    return /^#.+/.test(value);\n};\nvar setLink = function setLink(ctx, node) {\n    var props = node.props || {};\n    var _node$box = node.box, top = _node$box.top, left = _node$box.left, width = _node$box.width, height = _node$box.height;\n    var src = props.src || props.href;\n    if (src) {\n        var isId = isSrcId(src);\n        var method = isId ? \"goTo\" : \"link\";\n        var value = isId ? src.slice(1) : src;\n        ctx[method](left, top, width, height, value);\n    }\n};\nvar setDestination = function setDestination(ctx, node) {\n    var _node$props;\n    if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n        ctx.addNamedDestination(node.props.id, \"XYZ\", null, node.box.top, null);\n    }\n};\nvar _renderFns;\nvar isRecursiveNode = function isRecursiveNode(node) {\n    return node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text && node.type !== _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Svg;\n};\nvar renderChildren = function renderChildren(ctx, node, options) {\n    ctx.save();\n    if (node.box) {\n        ctx.translate(node.box.left, node.box.top);\n    }\n    var children = node.children || [];\n    var renderChild = function renderChild(child) {\n        return renderNode(ctx, child, options);\n    };\n    children.forEach(renderChild);\n    ctx.restore();\n};\nvar renderFns = (_renderFns = {}, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Text] = renderText, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Note] = renderNote, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Image] = renderImage, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Canvas] = renderCanvas, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Svg] = renderSvg, _renderFns[_react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Link] = setLink, _renderFns);\nvar renderNode = function renderNode(ctx, node, options) {\n    var _node$style;\n    var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === \"hidden\";\n    var shouldRenderChildren = isRecursiveNode(node);\n    if (node.type === _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_0__.Page) renderPage(ctx, node);\n    ctx.save();\n    if (overflowHidden) clipNode(ctx, node);\n    applyTransformations(ctx, node);\n    renderBackground(ctx, node);\n    renderBorders(ctx, node);\n    var renderFn = renderFns[node.type];\n    if (renderFn) renderFn(ctx, node, options);\n    if (shouldRenderChildren) renderChildren(ctx, node, options);\n    setDestination(ctx, node);\n    renderDebug(ctx, node);\n    ctx.restore();\n};\n/* eslint-disable no-param-reassign */ var setPDFMetadata = function setPDFMetadata(target) {\n    return function(key, value) {\n        if (value) target.info[key] = value;\n    };\n};\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */ var addMetadata = function addMetadata(ctx, doc) {\n    var _props$creator, _props$producer;\n    var setProp = setPDFMetadata(ctx);\n    var props = doc.props || {};\n    var title = props.title || null;\n    var author = props.author || null;\n    var subject = props.subject || null;\n    var keywords = props.keywords || null;\n    var creator = (_props$creator = props.creator) != null ? _props$creator : \"react-pdf\";\n    var producer = (_props$producer = props.producer) != null ? _props$producer : \"react-pdf\";\n    var creationDate = props.creationDate || new Date();\n    var modificationDate = props.modificationDate || null;\n    setProp(\"Title\", title);\n    setProp(\"Author\", author);\n    setProp(\"Subject\", subject);\n    setProp(\"Keywords\", keywords);\n    setProp(\"Creator\", creator);\n    setProp(\"Producer\", producer);\n    setProp(\"CreationDate\", creationDate);\n    setProp(\"ModificationDate\", modificationDate);\n};\n/* eslint-disable no-param-reassign */ var addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n    var _node$props;\n    var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n    if (bookmark) {\n        var title = bookmark.title, parent = bookmark.parent, expanded = bookmark.expanded, zoom = bookmark.zoom, fit = bookmark.fit;\n        var outline = registry[parent] || ctx.outline;\n        var top = bookmark.top || node.box.top;\n        var left = bookmark.left || node.box.left;\n        var instance = outline.addItem(title, {\n            pageNumber: pageNumber,\n            expanded: expanded,\n            top: top,\n            left: left,\n            zoom: zoom,\n            fit: fit\n        });\n        registry[bookmark.ref] = instance;\n    }\n    if (!node.children) return;\n    node.children.forEach(function(child) {\n        return addNodeBookmark(ctx, child, pageNumber, registry);\n    });\n};\nvar addBookmarks = function addBookmarks(ctx, root) {\n    var registry = {};\n    var pages = root.children || [];\n    pages.forEach(function(page, i) {\n        addNodeBookmark(ctx, page, i, registry);\n    });\n};\nvar render = function render(ctx, doc) {\n    var pages = doc.children || [];\n    var options = {\n        imageCache: new Map()\n    };\n    addMetadata(ctx, doc);\n    pages.forEach(function(page) {\n        return renderNode(ctx, page, options);\n    });\n    addBookmarks(ctx, doc);\n    ctx.end();\n    return ctx;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi9yZW5kZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ1U7QUFDbEI7QUFDSTtBQUNRO0FBQ1I7QUFDZTtBQUV0RCxJQUFJUSxhQUFhLFNBQVNBLFdBQVdDLEdBQUcsRUFBRUMsSUFBSTtJQUM1QyxJQUFJQztJQUNKLElBQUlDLElBQUksQ0FBQ0QsY0FBY0QsS0FBS0csS0FBSyxNQUFNLFFBQVFGLGdCQUFnQixLQUFLLElBQUksS0FBSyxJQUFJQSxZQUFZQyxDQUFDO0lBQzlGLElBQUlBLEdBQUdILElBQUlLLElBQUksQ0FBQ0osS0FBS0csS0FBSyxDQUFDRCxDQUFDO0FBQzlCO0FBRUEsSUFBSUcsVUFBVSxNQUFPLEVBQUNDLEtBQUtDLElBQUksQ0FBQyxLQUFLLEdBQUUsSUFBSyxHQUFFO0FBQzlDLElBQUlDLGFBQWEsU0FBU0EsV0FBV1QsR0FBRyxFQUFFQyxJQUFJO0lBQzVDLElBQUlDLGFBQWFRLGNBQWNDLGNBQWNDLGNBQWNDLGNBQWNDO0lBQ3pFLElBQUlDLElBQUksQ0FBQyxDQUFDYixjQUFjRCxLQUFLRyxLQUFLLE1BQU0sUUFBUUYsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVlhLENBQUMsS0FBSztJQUNwRyxJQUFJQyxJQUFJLENBQUMsQ0FBQ04sZUFBZVQsS0FBS0csS0FBSyxNQUFNLFFBQVFNLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhTSxDQUFDLEtBQUs7SUFDdkcsSUFBSUMsS0FBSyxDQUFDLENBQUNOLGVBQWVWLEtBQUtHLEtBQUssTUFBTSxRQUFRTyxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYU0sRUFBRSxLQUFLO0lBQ3pHLElBQUlDLEtBQUssQ0FBQyxDQUFDTixlQUFlWCxLQUFLRyxLQUFLLE1BQU0sUUFBUVEsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFNLEVBQUUsS0FBSztJQUN6RyxJQUFJQyxRQUFRLENBQUMsQ0FBQ04sZUFBZVosS0FBS0csS0FBSyxNQUFNLFFBQVFTLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhTSxLQUFLLEtBQUs7SUFDL0csSUFBSUMsU0FBUyxDQUFDLENBQUNOLGVBQWViLEtBQUtHLEtBQUssTUFBTSxRQUFRVSxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYU0sTUFBTSxLQUFLO0lBQ2pILElBQUksQ0FBQ0QsU0FBUyxDQUFDQyxRQUFRO0lBQ3ZCLElBQUlILE1BQU1DLElBQUk7UUFDWixJQUFJRyxNQUFNSixLQUFLWDtRQUNmLElBQUlnQixNQUFNSixLQUFLWjtRQUNmTixJQUFJdUIsTUFBTSxDQUFDUixJQUFJRSxJQUFJRDtRQUNuQmhCLElBQUl3QixNQUFNLENBQUNULElBQUlFLEtBQUtFLE9BQU9IO1FBQzNCaEIsSUFBSXlCLGFBQWEsQ0FBQ1YsSUFBSUUsS0FBS0UsUUFBUUUsS0FBS0wsR0FBR0QsSUFBSUksT0FBT0gsSUFBSUUsS0FBS0ksS0FBS1AsSUFBSUksT0FBT0gsSUFBSUU7UUFDbkZsQixJQUFJd0IsTUFBTSxDQUFDVCxJQUFJSSxPQUFPSCxJQUFJSSxTQUFTRjtRQUNuQ2xCLElBQUl5QixhQUFhLENBQUNWLElBQUlJLE9BQU9ILElBQUlJLFNBQVNGLEtBQUtJLEtBQUtQLElBQUlFLEtBQUtFLFFBQVFFLEtBQUtMLElBQUlJLFFBQVFMLElBQUlFLEtBQUtFLE9BQU9ILElBQUlJO1FBQzFHcEIsSUFBSXdCLE1BQU0sQ0FBQ1QsSUFBSUUsSUFBSUQsSUFBSUk7UUFDdkJwQixJQUFJeUIsYUFBYSxDQUFDVixJQUFJRSxLQUFLSSxLQUFLTCxJQUFJSSxRQUFRTCxHQUFHQyxJQUFJSSxTQUFTRixLQUFLSSxLQUFLUCxHQUFHQyxJQUFJSSxTQUFTRjtRQUN0RmxCLElBQUl3QixNQUFNLENBQUNULEdBQUdDLElBQUlFO1FBQ2xCbEIsSUFBSXlCLGFBQWEsQ0FBQ1YsR0FBR0MsSUFBSUUsS0FBS0ksS0FBS1AsSUFBSUUsS0FBS0ksS0FBS0wsR0FBR0QsSUFBSUUsSUFBSUQ7SUFDOUQsT0FBTztRQUNMaEIsSUFBSXVCLE1BQU0sQ0FBQ1IsR0FBR0M7UUFDZGhCLElBQUl3QixNQUFNLENBQUNULElBQUlJLE9BQU9IO1FBQ3RCaEIsSUFBSXdCLE1BQU0sQ0FBQ1QsSUFBSUksT0FBT0gsSUFBSUk7UUFDMUJwQixJQUFJd0IsTUFBTSxDQUFDVCxHQUFHQyxJQUFJSTtJQUNwQjtJQUNBcEIsSUFBSTBCLFNBQVM7QUFDZjtBQUVBLElBQUlDLGVBQWUsU0FBU0MsV0FBVzVCLEdBQUcsRUFBRUMsSUFBSTtJQUM5QyxJQUFJNEIsT0FBTzVCLEtBQUtHLEtBQUssSUFBSSxDQUFDLEdBQ3hCMEIsS0FBS0QsS0FBS0MsRUFBRSxFQUNaQyxLQUFLRixLQUFLRSxFQUFFLEVBQ1pDLEtBQUtILEtBQUtHLEVBQUUsRUFDWkMsS0FBS0osS0FBS0ksRUFBRTtJQUNkakMsSUFBSXVCLE1BQU0sQ0FBQ08sSUFBSUU7SUFDZmhDLElBQUl3QixNQUFNLENBQUNPLElBQUlFO0FBQ2pCO0FBRUEsSUFBSUMsY0FBYyxTQUFTQTtBQUN6QixPQUFPO0FBQ1Q7QUFFQSxJQUFJQyxVQUFVLE1BQU8sRUFBQzVCLEtBQUtDLElBQUksQ0FBQyxLQUFLLEdBQUUsSUFBSyxHQUFFO0FBQzlDLElBQUk0QixjQUFjLFNBQVNBLFlBQVlwQyxHQUFHLEVBQUVxQyxFQUFFLEVBQUVDLEVBQUUsRUFBRXJCLEVBQUUsRUFBRUMsRUFBRTtJQUN4RCxJQUFJbUIsT0FBTyxLQUFLLEdBQUc7UUFDakJBLEtBQUs7SUFDUDtJQUNBLElBQUlDLE9BQU8sS0FBSyxHQUFHO1FBQ2pCQSxLQUFLO0lBQ1A7SUFDQSxJQUFJdkIsSUFBSXNCLEtBQUtwQjtJQUNiLElBQUlELElBQUlzQixLQUFLcEI7SUFDYixJQUFJcUIsS0FBS3RCLEtBQUtrQjtJQUNkLElBQUlLLEtBQUt0QixLQUFLaUI7SUFDZCxJQUFJTSxLQUFLMUIsSUFBSUUsS0FBSztJQUNsQixJQUFJeUIsS0FBSzFCLElBQUlFLEtBQUs7SUFDbEIsSUFBSXlCLEtBQUs1QixJQUFJRTtJQUNiLElBQUkyQixLQUFLNUIsSUFBSUU7SUFDYmxCLElBQUl1QixNQUFNLENBQUNSLEdBQUc2QjtJQUNkNUMsSUFBSXlCLGFBQWEsQ0FBQ1YsR0FBRzZCLEtBQUtKLElBQUlHLEtBQUtKLElBQUl2QixHQUFHMkIsSUFBSTNCO0lBQzlDaEIsSUFBSXlCLGFBQWEsQ0FBQ2tCLEtBQUtKLElBQUl2QixHQUFHeUIsSUFBSUcsS0FBS0osSUFBSUMsSUFBSUc7SUFDL0M1QyxJQUFJeUIsYUFBYSxDQUFDZ0IsSUFBSUcsS0FBS0osSUFBSUcsS0FBS0osSUFBSUcsSUFBSUMsSUFBSUQ7SUFDaEQxQyxJQUFJeUIsYUFBYSxDQUFDa0IsS0FBS0osSUFBSUcsSUFBSTNCLEdBQUc2QixLQUFLSixJQUFJekIsR0FBRzZCO0lBQzlDNUMsSUFBSTBCLFNBQVM7QUFDZjtBQUNBLElBQUltQixnQkFBZ0IsU0FBU0EsY0FBYzdDLEdBQUcsRUFBRUMsSUFBSTtJQUNsRCxJQUFJNEIsT0FBTzVCLEtBQUtHLEtBQUssSUFBSSxDQUFDLEdBQ3hCaUMsS0FBS1IsS0FBS1EsRUFBRSxFQUNaQyxLQUFLVCxLQUFLUyxFQUFFLEVBQ1pyQixLQUFLWSxLQUFLWixFQUFFLEVBQ1pDLEtBQUtXLEtBQUtYLEVBQUU7SUFDZGtCLFlBQVlwQyxLQUFLcUMsSUFBSUMsSUFBSXJCLElBQUlDO0FBQy9CO0FBRUEsSUFBSTRCLGVBQWUsU0FBU0EsYUFBYTlDLEdBQUcsRUFBRUMsSUFBSTtJQUNoRCxJQUFJQyxhQUFhUSxjQUFjQztJQUMvQixJQUFJMEIsS0FBSyxDQUFDbkMsY0FBY0QsS0FBS0csS0FBSyxNQUFNLFFBQVFGLGdCQUFnQixLQUFLLElBQUksS0FBSyxJQUFJQSxZQUFZbUMsRUFBRTtJQUNoRyxJQUFJQyxLQUFLLENBQUM1QixlQUFlVCxLQUFLRyxLQUFLLE1BQU0sUUFBUU0saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWE0QixFQUFFO0lBQ25HLElBQUlTLElBQUksQ0FBQ3BDLGVBQWVWLEtBQUtHLEtBQUssTUFBTSxRQUFRTyxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYW9DLENBQUM7SUFDakdYLFlBQVlwQyxLQUFLcUMsSUFBSUMsSUFBSVMsR0FBR0E7QUFDOUI7QUFFQSxJQUFJQyxlQUFlLFNBQVNBLGFBQWFoRCxHQUFHLEVBQUVpRCxNQUFNLEVBQUVDLFNBQVMsRUFBRW5DLENBQUMsRUFBRUMsQ0FBQyxFQUFFbUMsT0FBTztJQUM1RSxJQUFJQSxZQUFZLEtBQUssR0FBRztRQUN0QkEsVUFBVSxDQUFDO0lBQ2I7SUFDQSxJQUFJQyxRQUFRLE9BQU9wRCxJQUFJcUQsU0FBUztJQUNoQyxJQUFJQyxhQUFhdEQsSUFBSXVELEtBQUssQ0FBQ0MsSUFBSSxDQUFDRixVQUFVLElBQUk7SUFDOUMsSUFBSUcsb0JBQW9CLE9BQU9IO0lBRS9CLGlDQUFpQztJQUNqQyxJQUFJSSxnQkFBZ0IxRCxJQUFJdUQsS0FBSyxDQUFDSSxZQUFZLENBQUNWO0lBQzNDLElBQUlXLG1CQUFtQlYsVUFBVVcsR0FBRyxDQUFDLFNBQVVDLEdBQUcsRUFBRUMsQ0FBQztRQUNuRCxPQUFPO1lBQ0xDLFVBQVVGLElBQUlFLFFBQVEsR0FBR1o7WUFDekJhLFVBQVVILElBQUlHLFFBQVEsR0FBR2I7WUFDekJjLFNBQVNKLElBQUlJLE9BQU87WUFDcEJDLFNBQVNMLElBQUlLLE9BQU87WUFDcEJDLGNBQWNuQixNQUFNLENBQUNjLEVBQUUsQ0FBQ0ssWUFBWSxHQUFHWDtRQUN6QztJQUNGO0lBQ0EsT0FBT3pELElBQUlxRSxPQUFPLENBQUNYLGVBQWVFLGtCQUFrQjdDLEdBQUdDLEdBQUdtQztBQUM1RDtBQUVBLElBQUltQixjQUFjLFNBQVNDLFVBQVV2RSxHQUFHLEVBQUV3RSxHQUFHO0lBQzNDLElBQUlDLGtCQUFrQkQsSUFBSVIsUUFBUTtJQUNsQyxJQUFJVSxrQkFBa0JGLElBQUlHLFVBQVUsRUFDbENuQixPQUFPa0IsZ0JBQWdCbEIsSUFBSSxFQUMzQm9CLFdBQVdGLGdCQUFnQkUsUUFBUSxFQUNuQ0MsUUFBUUgsZ0JBQWdCRyxLQUFLLEVBQzdCQyxVQUFVSixnQkFBZ0JJLE9BQU87SUFDbkM5RSxJQUFJK0UsU0FBUyxDQUFDRjtJQUNkN0UsSUFBSWdGLFdBQVcsQ0FBQ0Y7SUFDaEIsSUFBSXRCLEtBQUt5QixJQUFJLElBQUl6QixLQUFLMEIsSUFBSSxJQUFJMUIsS0FBSzJCLElBQUksRUFBRTtRQUN2Q25GLElBQUlvRixJQUFJO1FBQ1JwRixJQUFJcUYsU0FBUyxDQUFDLEdBQUcsQ0FBQ2IsSUFBSWMsTUFBTTtRQUM1QixJQUFLLElBQUl2QixJQUFJLEdBQUdBLElBQUlTLElBQUl2QixNQUFNLENBQUNzQyxNQUFNLEVBQUV4QixLQUFLLEVBQUc7WUFDN0MsSUFBSXlCLFdBQVdoQixJQUFJdEIsU0FBUyxDQUFDYSxFQUFFO1lBQy9CLElBQUkwQixRQUFRakIsSUFBSXZCLE1BQU0sQ0FBQ2MsRUFBRTtZQUN6Qi9ELElBQUlvRixJQUFJO1lBQ1JwRixJQUFJcUYsU0FBUyxDQUFDRyxTQUFTdEIsT0FBTyxFQUFFc0IsU0FBU3JCLE9BQU87WUFDaERzQixNQUFNQyxNQUFNLENBQUMxRixLQUFLNEU7WUFDbEI1RSxJQUFJMkYsT0FBTztZQUNYM0YsSUFBSXFGLFNBQVMsQ0FBQ0csU0FBU3hCLFFBQVEsRUFBRXdCLFNBQVN2QixRQUFRO1FBQ3BEO1FBQ0FqRSxJQUFJMkYsT0FBTztJQUNiLE9BQU87UUFDTDNGLElBQUl3RCxJQUFJLENBQUMsT0FBT0EsS0FBS29DLElBQUksS0FBSyxXQUFXcEMsS0FBS29DLElBQUksR0FBR3BDLE1BQU1vQjtRQUMzRCxJQUFJO1lBQ0Y1QixhQUFhaEQsS0FBS3dFLElBQUl2QixNQUFNLEVBQUV1QixJQUFJdEIsU0FBUyxFQUFFLEdBQUc7UUFDbEQsRUFBRSxPQUFPMkMsT0FBTztZQUNkQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2Q7SUFDRjtJQUNBN0YsSUFBSXFGLFNBQVMsQ0FBQ1osaUJBQWlCO0FBQ2pDO0FBQ0EsSUFBSXVCLGFBQWEsU0FBU0EsV0FBV2hHLEdBQUcsRUFBRWlHLElBQUksRUFBRUMsVUFBVSxFQUFFQyxnQkFBZ0I7SUFDMUUsSUFBSUMsV0FBV0MsWUFBWUMsYUFBYUMsY0FBY0M7SUFDdER4RyxJQUFJb0YsSUFBSTtJQUNSLElBQUlyRSxJQUFJLENBQUMsQ0FBQ3FGLFlBQVlILEtBQUtRLEdBQUcsTUFBTSxRQUFRTCxjQUFjLEtBQUssSUFBSSxLQUFLLElBQUlBLFVBQVVyRixDQUFDLEtBQUs7SUFDNUYsSUFBSUMsSUFBSSxDQUFDLENBQUNxRixhQUFhSixLQUFLUSxHQUFHLE1BQU0sUUFBUUosZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJQSxXQUFXckYsQ0FBQyxLQUFLO0lBQy9GLElBQUl3QyxPQUFPLENBQUM4QyxjQUFjTCxLQUFLUyxJQUFJLENBQUMsRUFBRSxNQUFNLFFBQVFKLGdCQUFnQixLQUFLLElBQUksS0FBSyxJQUFJQSxZQUFZM0IsVUFBVSxDQUFDbkIsSUFBSTtJQUNqSCxJQUFJSixRQUFRLENBQUMsQ0FBQ21ELGVBQWVOLEtBQUtTLElBQUksQ0FBQyxFQUFFLE1BQU0sUUFBUUgsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUksQ0FBQ0Msd0JBQXdCRCxhQUFhNUIsVUFBVSxNQUFNLFFBQVE2QiwwQkFBMEIsS0FBSyxJQUFJLEtBQUssSUFBSUEsc0JBQXNCcEQsS0FBSyxLQUFLO0lBQ3BPLElBQUlqQyxRQUFROEUsS0FBS2pDLFFBQVE7SUFDekIsSUFBSXNCLFNBQVM5QixLQUFLOEIsTUFBTSxHQUFHbEM7SUFDM0IsSUFBSXVELFVBQVVuRCxLQUFLbUQsT0FBTyxHQUFHdkQ7SUFDN0IsSUFBSXdELFVBQVVwRCxLQUFLb0QsT0FBTyxHQUFHeEQ7SUFDN0IsSUFBSXlELFlBQVlyRCxLQUFLcUQsU0FBUyxHQUFHekQ7SUFDakMsSUFBSTBELGFBQWEvRjtJQUNqQixJQUFJZ0csYUFBYS9GO0lBQ2pCLE9BQVFrRjtRQUNOLEtBQUs7WUFDSFksYUFBYS9GLElBQUlJLFFBQVE7WUFDekI7UUFDRixLQUFLO1lBQ0gyRixhQUFhL0YsSUFBSUk7WUFDakI7UUFDRjtZQUNFMkYsYUFBYS9GO1lBQ2I7SUFDSjtJQUNBLE9BQVFvRjtRQUNOLEtBQUs7UUFDTCxLQUFLO1lBQ0hZLGFBQWEvRixJQUFJNkYsWUFBWTtZQUM3QjtRQUNGLEtBQUs7WUFDSEUsYUFBYS9GLElBQUk2RjtZQUNqQjtRQUNGLEtBQUs7WUFDSEUsYUFBYS9GLElBQUkyRjtZQUNqQjtRQUNGLEtBQUs7WUFDSEksYUFBYS9GLElBQUk0RjtZQUNqQjtRQUNGLEtBQUs7WUFDSEcsYUFBYS9GLElBQUlzRTtZQUNqQjtRQUNGO1lBQ0V5QixhQUFhL0Y7WUFDYjtJQUNKO0lBQ0FoQixJQUFJcUYsU0FBUyxDQUFDeUIsWUFBWUM7SUFDMUJkLEtBQUtTLElBQUksQ0FBQ00sT0FBTyxDQUFDLFNBQVV4QyxHQUFHO1FBQzdCLE9BQU9GLFlBQVl0RSxLQUFLd0U7SUFDMUI7SUFDQXhFLElBQUkyRixPQUFPO0FBQ2I7QUFDQSxJQUFJc0IsZ0JBQWdCLFNBQVNBLGNBQWNqSCxHQUFHLEVBQUVDLElBQUk7SUFDbERBLEtBQUtpSCxRQUFRLENBQUNGLE9BQU8sQ0FBQyxTQUFVRyxJQUFJO1FBQ2xDLE9BQU9uQixXQUFXaEcsS0FBS21ILEtBQUtDLEtBQUssQ0FBQyxFQUFFLEVBQUVELEtBQUsvRyxLQUFLLENBQUM4RixVQUFVLEVBQUVpQixLQUFLL0csS0FBSyxDQUFDK0YsZ0JBQWdCO0lBQzFGO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FDRCxJQUFJa0IsUUFBUSxTQUFTQSxNQUFNQyxNQUFNO0lBQy9CLElBQUlDLFNBQVMsRUFBRTtJQUNmLElBQUssSUFBSXhELElBQUksR0FBR0EsSUFBSXVELE9BQU8vQixNQUFNLEVBQUV4QixLQUFLLEVBQUc7UUFDekN3RCxPQUFPQyxJQUFJLENBQUM7WUFBQ0YsTUFBTSxDQUFDdkQsRUFBRTtZQUFFdUQsTUFBTSxDQUFDdkQsSUFBSSxFQUFFO1NBQUM7SUFDeEM7SUFDQSxPQUFPd0Q7QUFDVDtBQUVBOzs7OztDQUtDLEdBQ0QsSUFBSUUsY0FBYyxTQUFTQSxZQUFZQyxNQUFNO0lBQzNDLElBQUlKLFNBQVMsQ0FBQ0ksVUFBVSxFQUFDLEVBQUdDLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQU0sS0FBS0EsT0FBTyxDQUFDLGNBQWMsVUFBVUMsS0FBSyxDQUFDO0lBQzVGLElBQUlQLE9BQU8vQixNQUFNLEdBQUcsTUFBTSxHQUFHO1FBQzNCK0IsU0FBU0EsT0FBT1EsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUM1QjtJQUNBLElBQUlDLGVBQWVULE9BQU96RCxHQUFHLENBQUNtRTtJQUM5QixPQUFPWCxNQUFNVTtBQUNmO0FBRUEsSUFBSUUsZUFBZSxTQUFTQSxhQUFhakksR0FBRyxFQUFFMEgsTUFBTTtJQUNsRCxJQUFJQSxPQUFPbkMsTUFBTSxHQUFHLEdBQUc7UUFDckJ2RixJQUFJdUIsTUFBTSxDQUFDbUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRTtRQUNyQ0EsT0FBT0ksS0FBSyxDQUFDLEdBQUdkLE9BQU8sQ0FBQyxTQUFVa0IsQ0FBQztZQUNqQyxPQUFPbEksSUFBSXdCLE1BQU0sQ0FBQzBHLENBQUMsQ0FBQyxFQUFFLEVBQUVBLENBQUMsQ0FBQyxFQUFFO1FBQzlCO0lBQ0Y7QUFDRjtBQUNBLElBQUlDLGlCQUFpQixTQUFTQSxlQUFlbkksR0FBRyxFQUFFQyxJQUFJO0lBQ3BELElBQUl5SCxTQUFTRCxZQUFZeEgsS0FBS0csS0FBSyxDQUFDc0gsTUFBTSxJQUFJO0lBQzlDTyxhQUFhakksS0FBSzBIO0FBQ3BCO0FBRUEsSUFBSVUsZ0JBQWdCLFNBQVNBLGNBQWNwSSxHQUFHLEVBQUVDLElBQUk7SUFDbERrSSxlQUFlbkksS0FBS0M7SUFDcEJELElBQUkwQixTQUFTO0FBQ2Y7QUFFQSxJQUFJMkcsZ0JBQWdCLFNBQVNDLFlBQVl0SSxHQUFHLEVBQUVDLElBQUk7SUFDaEQsSUFBSSxDQUFDQSxLQUFLc0ksS0FBSyxDQUFDQyxJQUFJLEVBQUU7SUFDdEIsSUFBSXRJLGNBQWNELEtBQUtHLEtBQUssRUFDMUJXLElBQUliLFlBQVlhLENBQUMsRUFDakJDLElBQUlkLFlBQVljLENBQUM7SUFDbkIsSUFBSXlILGNBQWN4SSxLQUFLeUksS0FBSyxFQUMxQnZILFFBQVFzSCxZQUFZdEgsS0FBSyxFQUN6QkMsU0FBU3FILFlBQVlySCxNQUFNLEVBQzNCMEQsVUFBVTJELFlBQVkzRCxPQUFPO0lBQy9CLElBQUk2RCxhQUFhMUksS0FBS3dHLEdBQUcsQ0FBQ21DLFdBQVcsSUFBSTtJQUN6QyxJQUFJQSxjQUFjM0ksS0FBS3dHLEdBQUcsQ0FBQ21DLFdBQVcsSUFBSTtJQUMxQyxJQUFJekgsVUFBVSxLQUFLQyxXQUFXLEdBQUc7UUFDL0IwRSxRQUFRK0MsSUFBSSxDQUFDLHFCQUFxQjVJLEtBQUtHLEtBQUssQ0FBQzBJLElBQUksR0FBRztRQUNwRDtJQUNGO0lBQ0E5SSxJQUFJb0YsSUFBSTtJQUNScEYsSUFBSWdGLFdBQVcsQ0FBQ0YsV0FBVyxHQUFHeUQsS0FBSyxDQUFDdEksS0FBS3NJLEtBQUssQ0FBQ0MsSUFBSSxFQUFFekgsSUFBSTZILGFBQWE1SCxJQUFJMkgsWUFBWTtRQUNwRnhILE9BQU9BO1FBQ1BDLFFBQVFBO0lBQ1Y7SUFDQXBCLElBQUkyRixPQUFPO0FBQ2I7QUFFQSx1RUFBdUU7QUFDdkUsZ0JBQWdCO0FBQ2hCLElBQUlvRCxVQUFVLE1BQU8sRUFBQ3hJLEtBQUtDLElBQUksQ0FBQyxLQUFLLEdBQUUsSUFBSyxHQUFFO0FBQzlDLElBQUl3SSxXQUFXLFNBQVNBLFNBQVNoSixHQUFHLEVBQUVDLElBQUk7SUFDeEMsSUFBSSxDQUFDQSxLQUFLeUksS0FBSyxFQUFFO0lBQ2pCLElBQUlPLFlBQVloSixLQUFLd0csR0FBRyxFQUN0QnlDLE1BQU1ELFVBQVVDLEdBQUcsRUFDbkJDLE9BQU9GLFVBQVVFLElBQUksRUFDckJoSSxRQUFROEgsVUFBVTlILEtBQUssRUFDdkJDLFNBQVM2SCxVQUFVN0gsTUFBTTtJQUMzQixJQUFJcUgsY0FBY3hJLEtBQUt5SSxLQUFLLEVBQzFCVSx3QkFBd0JYLFlBQVlZLG1CQUFtQixFQUN2REEsc0JBQXNCRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUM3REUseUJBQXlCYixZQUFZYyxvQkFBb0IsRUFDekRBLHVCQUF1QkQsMkJBQTJCLEtBQUssSUFBSSxJQUFJQSx3QkFDL0RFLHdCQUF3QmYsWUFBWWdCLHVCQUF1QixFQUMzREEsMEJBQTBCRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNqRUUseUJBQXlCakIsWUFBWWtCLHNCQUFzQixFQUMzREEseUJBQXlCRCwyQkFBMkIsS0FBSyxJQUFJLElBQUlBO0lBRW5FLGFBQWE7SUFDYixJQUFJRSxNQUFNckosS0FBS3NKLEdBQUcsQ0FBQ04sc0JBQXNCLE1BQU1wSSxPQUFPLE1BQU1DO0lBQzVELElBQUkwSSxNQUFNRixNQUFPLE9BQU1iLE9BQU07SUFDN0IvSSxJQUFJdUIsTUFBTSxDQUFDNEgsT0FBT1MsS0FBS1Y7SUFDdkJsSixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLFFBQVF5SSxLQUFLVjtJQUMvQmxKLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUTJJLEtBQUtaLEtBQUtDLE9BQU9oSSxPQUFPK0gsTUFBTVksS0FBS1gsT0FBT2hJLE9BQU8rSCxNQUFNVTtJQUV4RixlQUFlO0lBQ2YsSUFBSUcsTUFBTXhKLEtBQUtzSixHQUFHLENBQUNKLHlCQUF5QixNQUFNdEksT0FBTyxNQUFNQztJQUMvRCxJQUFJNEksTUFBTUQsTUFBTyxPQUFNaEIsT0FBTTtJQUM3Qi9JLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytILE1BQU05SCxTQUFTMkk7SUFDeEMvSixJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT2hJLE9BQU8rSCxNQUFNOUgsU0FBUzRJLEtBQUtiLE9BQU9oSSxRQUFRNkksS0FBS2QsTUFBTTlILFFBQVErSCxPQUFPaEksUUFBUTRJLEtBQUtiLE1BQU05SDtJQUVoSCxnQkFBZ0I7SUFDaEIsSUFBSTZJLE1BQU0xSixLQUFLc0osR0FBRyxDQUFDRix3QkFBd0IsTUFBTXhJLE9BQU8sTUFBTUM7SUFDOUQsSUFBSThJLE1BQU1ELE1BQU8sT0FBTWxCLE9BQU07SUFDN0IvSSxJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2MsS0FBS2YsTUFBTTlIO0lBQzdCcEIsSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU9lLEtBQUtoQixNQUFNOUgsUUFBUStILE1BQU1ELE1BQU05SCxTQUFTOEksS0FBS2YsTUFBTUQsTUFBTTlILFNBQVM2STtJQUUzRixjQUFjO0lBQ2QsSUFBSUUsTUFBTTVKLEtBQUtzSixHQUFHLENBQUNSLHFCQUFxQixNQUFNbEksT0FBTyxNQUFNQztJQUMzRCxJQUFJZ0osTUFBTUQsTUFBTyxPQUFNcEIsT0FBTTtJQUM3Qi9JLElBQUl3QixNQUFNLENBQUMySCxNQUFNRCxNQUFNaUI7SUFDdkJuSyxJQUFJeUIsYUFBYSxDQUFDMEgsTUFBTUQsTUFBTWtCLEtBQUtqQixPQUFPaUIsS0FBS2xCLEtBQUtDLE9BQU9nQixLQUFLakI7SUFDaEVsSixJQUFJMEIsU0FBUztJQUNiMUIsSUFBSXFLLElBQUk7QUFDVjtBQUVBLElBQUlDLDRCQUE0QixTQUFTQSwwQkFBMEJ0SyxHQUFHLEVBQUV1SyxTQUFTLEVBQUVDLE1BQU07SUFDdkYsSUFBSUMsWUFBWUYsVUFBVUUsU0FBUyxFQUNqQ0MsUUFBUUgsVUFBVUcsS0FBSztJQUN6QixPQUFRRDtRQUNOLEtBQUs7WUFDSDtnQkFDRSxJQUFJRSxTQUFTRCxLQUFLLENBQUMsRUFBRSxFQUNuQkUsU0FBU0YsS0FBSyxDQUFDLEVBQUU7Z0JBQ25CMUssSUFBSW9ELEtBQUssQ0FBQ3VILFFBQVFDLFFBQVE7b0JBQ3hCSixRQUFRQTtnQkFDVjtnQkFDQTtZQUNGO1FBQ0YsS0FBSztZQUNIO2dCQUNFLElBQUlLLFFBQVFILEtBQUssQ0FBQyxFQUFFO2dCQUNwQjFLLElBQUk4SyxNQUFNLENBQUNELE9BQU87b0JBQ2hCTCxRQUFRQTtnQkFDVjtnQkFDQTtZQUNGO1FBQ0YsS0FBSztZQUNIO2dCQUNFLElBQUl6SixJQUFJMkosS0FBSyxDQUFDLEVBQUUsRUFDZEssVUFBVUwsS0FBSyxDQUFDLEVBQUUsRUFDbEIxSixJQUFJK0osWUFBWSxLQUFLLElBQUksSUFBSUE7Z0JBQy9CL0ssSUFBSXFGLFNBQVMsQ0FBQ3RFLEdBQUdDLEdBQUc7b0JBQ2xCd0osUUFBUUE7Z0JBQ1Y7Z0JBQ0E7WUFDRjtRQUNGLEtBQUs7WUFDSDtnQkFDRSxJQUFJUSxTQUFTTixLQUFLLENBQUMsRUFBRSxFQUNuQk8sU0FBU1AsS0FBSyxDQUFDLEVBQUU7Z0JBQ25CMUssSUFBSWtMLElBQUksQ0FBQ0YsUUFBUUMsUUFBUTtvQkFDdkJULFFBQVFBO2dCQUNWO2dCQUNBO1lBQ0Y7UUFDRixLQUFLO1lBQ0g7Z0JBQ0V4SyxJQUFJdUssU0FBUyxDQUFDWSxLQUFLLENBQUNuTCxLQUFLMEs7Z0JBQ3pCO1lBQ0Y7UUFDRjtZQUNFO2dCQUNFNUUsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQjRFLFlBQVk7WUFDdkQ7SUFDSjtBQUNGO0FBQ0EsSUFBSVcsdUJBQXVCLFNBQVNBLHFCQUFxQnBMLEdBQUcsRUFBRUMsSUFBSTtJQUNoRSxJQUFJd0ksYUFBYXZJO0lBQ2pCLElBQUksQ0FBQ0QsS0FBS3VLLE1BQU0sRUFBRTtJQUNsQixJQUFJQSxTQUFTO1FBQUN2SyxLQUFLdUssTUFBTSxDQUFDckIsSUFBSTtRQUFFbEosS0FBS3VLLE1BQU0sQ0FBQ3RCLEdBQUc7S0FBQztJQUNoRCxJQUFJbUMsYUFBYSxDQUFDLENBQUM1QyxjQUFjeEksS0FBS3lJLEtBQUssTUFBTSxRQUFRRCxnQkFBZ0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsWUFBWThCLFNBQVMsS0FBTSxFQUFDckssY0FBY0QsS0FBS0csS0FBSyxNQUFNLFFBQVFGLGdCQUFnQixLQUFLLElBQUksS0FBSyxJQUFJQSxZQUFZcUssU0FBUyxLQUFLLEVBQUU7SUFDM05jLFdBQVdyRSxPQUFPLENBQUMsU0FBVXlELFNBQVM7UUFDcENILDBCQUEwQnRLLEtBQUt5SyxXQUFXRDtJQUM1QztBQUNGO0FBRUEsSUFBSWM7QUFFSixrRUFBa0U7QUFDbEUsSUFBSUMscUJBQXFCLFNBQVNBLG1CQUFtQnRMLElBQUk7SUFDdkQsSUFBSUM7SUFDSixJQUFJRyxPQUFPVCw4REFBYUEsQ0FBQ0YseUNBQU9BLENBQUNDLDJDQUFTQSxDQUFDLENBQUMsQ0FBQ08sY0FBY0QsS0FBS0csS0FBSyxNQUFNLFFBQVFGLGdCQUFnQixLQUFLLElBQUksS0FBSyxJQUFJQSxZQUFZQyxDQUFDLEtBQUs7SUFDdkksSUFBSSxDQUFDRSxLQUFLa0YsTUFBTSxFQUFFLE9BQU87UUFBQztRQUFHO1FBQUc7UUFBRztLQUFFO0lBQ3JDLElBQUlpRyxTQUFTO1FBQUNDO1FBQVVBO1FBQVUsQ0FBQ0E7UUFBVSxDQUFDQTtLQUFTO0lBQ3ZELElBQUssSUFBSTFILElBQUksR0FBRzJILElBQUlyTCxLQUFLa0YsTUFBTSxFQUFFeEIsSUFBSTJILEdBQUczSCxLQUFLLEVBQUc7UUFDOUMsSUFBSTJELFNBQVNySCxJQUFJLENBQUMwRCxFQUFFLENBQUMrRCxLQUFLLENBQUM7UUFDM0IsSUFBSyxJQUFJNkQsSUFBSSxHQUFHQSxJQUFJakUsT0FBT25DLE1BQU0sRUFBRW9HLEtBQUssRUFBRztZQUN6QyxJQUFJakUsTUFBTSxDQUFDaUUsSUFBSSxFQUFFLEdBQUdILE1BQU0sQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLEdBQUc5RCxNQUFNLENBQUNpRSxJQUFJLEVBQUU7WUFDeEQsSUFBSWpFLE1BQU0sQ0FBQ2lFLElBQUksRUFBRSxHQUFHSCxNQUFNLENBQUMsRUFBRSxFQUFFQSxNQUFNLENBQUMsRUFBRSxHQUFHOUQsTUFBTSxDQUFDaUUsSUFBSSxFQUFFO1lBQ3hELElBQUlqRSxNQUFNLENBQUNpRSxJQUFJLEVBQUUsR0FBR0gsTUFBTSxDQUFDLEVBQUUsRUFBRUEsTUFBTSxDQUFDLEVBQUUsR0FBRzlELE1BQU0sQ0FBQ2lFLElBQUksRUFBRTtZQUN4RCxJQUFJakUsTUFBTSxDQUFDaUUsSUFBSSxFQUFFLEdBQUdILE1BQU0sQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLEdBQUc5RCxNQUFNLENBQUNpRSxJQUFJLEVBQUU7UUFDMUQ7SUFDRjtJQUNBLE9BQU9IO0FBQ1Q7QUFDQSxJQUFJSSx1QkFBdUIsU0FBU0EscUJBQXFCM0wsSUFBSTtJQUMzRCxJQUFJUyxjQUFjQyxjQUFjQztJQUNoQyxJQUFJbUMsSUFBSSxDQUFDLENBQUNyQyxlQUFlVCxLQUFLRyxLQUFLLE1BQU0sUUFBUU0saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFxQyxDQUFDLEtBQUs7SUFDdkcsSUFBSVYsS0FBSyxDQUFDLENBQUMxQixlQUFlVixLQUFLRyxLQUFLLE1BQU0sUUFBUU8saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWEwQixFQUFFLEtBQUs7SUFDekcsSUFBSUMsS0FBSyxDQUFDLENBQUMxQixlQUFlWCxLQUFLRyxLQUFLLE1BQU0sUUFBUVEsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWEwQixFQUFFLEtBQUs7SUFDekcsT0FBTztRQUFDRCxLQUFLVTtRQUFHVCxLQUFLUztRQUFHVixLQUFLVTtRQUFHVCxLQUFLUztLQUFFO0FBQ3pDO0FBQ0EsSUFBSThJLHdCQUF3QixTQUFTQSxzQkFBc0I1TCxJQUFJO0lBQzdELElBQUlZLGNBQWNDLGNBQWNnTCxjQUFjQztJQUM5QyxJQUFJMUosS0FBSyxDQUFDLENBQUN4QixlQUFlWixLQUFLRyxLQUFLLE1BQU0sUUFBUVMsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWF3QixFQUFFLEtBQUs7SUFDekcsSUFBSUMsS0FBSyxDQUFDLENBQUN4QixlQUFlYixLQUFLRyxLQUFLLE1BQU0sUUFBUVUsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWF3QixFQUFFLEtBQUs7SUFDekcsSUFBSXJCLEtBQUssQ0FBQyxDQUFDNkssZUFBZTdMLEtBQUtHLEtBQUssTUFBTSxRQUFRMEwsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWE3SyxFQUFFLEtBQUs7SUFDekcsSUFBSUMsS0FBSyxDQUFDLENBQUM2SyxlQUFlOUwsS0FBS0csS0FBSyxNQUFNLFFBQVEyTCxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYTdLLEVBQUUsS0FBSztJQUN6RyxPQUFPO1FBQUNtQixLQUFLcEI7UUFBSXFCLEtBQUtwQjtRQUFJbUIsS0FBS3BCO1FBQUlxQixLQUFLcEI7S0FBRztBQUM3QztBQUNBLElBQUk4SyxxQkFBcUIsU0FBU0EsbUJBQW1CL0wsSUFBSTtJQUN2RCxJQUFJZ00sY0FBY0MsZUFBZUMsZUFBZUM7SUFDaEQsSUFBSXRLLEtBQUssQ0FBQyxDQUFDbUssZUFBZWhNLEtBQUtHLEtBQUssTUFBTSxRQUFRNkwsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFuSyxFQUFFLEtBQUs7SUFDekcsSUFBSUUsS0FBSyxDQUFDLENBQUNrSyxnQkFBZ0JqTSxLQUFLRyxLQUFLLE1BQU0sUUFBUThMLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjbEssRUFBRSxLQUFLO0lBQzVHLElBQUlELEtBQUssQ0FBQyxDQUFDb0ssZ0JBQWdCbE0sS0FBS0csS0FBSyxNQUFNLFFBQVErTCxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBY3BLLEVBQUUsS0FBSztJQUM1RyxJQUFJRSxLQUFLLENBQUMsQ0FBQ21LLGdCQUFnQm5NLEtBQUtHLEtBQUssTUFBTSxRQUFRZ00sa0JBQWtCLEtBQUssSUFBSSxLQUFLLElBQUlBLGNBQWNuSyxFQUFFLEtBQUs7SUFDNUcsT0FBTztRQUFDMUIsS0FBS3NKLEdBQUcsQ0FBQy9ILElBQUlDO1FBQUt4QixLQUFLc0osR0FBRyxDQUFDN0gsSUFBSUM7UUFBSzFCLEtBQUs4TCxHQUFHLENBQUN2SyxJQUFJQztRQUFLeEIsS0FBSzhMLEdBQUcsQ0FBQ3JLLElBQUlDO0tBQUk7QUFDakY7QUFDQSxJQUFJcUsscUJBQXFCLFNBQVNBLG1CQUFtQnJNLElBQUk7SUFDdkQsSUFBSXNNLGVBQWVDLGVBQWVDLGVBQWVDO0lBQ2pELElBQUkzTCxJQUFJLENBQUMsQ0FBQ3dMLGdCQUFnQnRNLEtBQUtHLEtBQUssTUFBTSxRQUFRbU0sa0JBQWtCLEtBQUssSUFBSSxLQUFLLElBQUlBLGNBQWN4TCxDQUFDLEtBQUs7SUFDMUcsSUFBSUMsSUFBSSxDQUFDLENBQUN3TCxnQkFBZ0J2TSxLQUFLRyxLQUFLLE1BQU0sUUFBUW9NLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjeEwsQ0FBQyxLQUFLO0lBQzFHLElBQUlHLFFBQVEsQ0FBQyxDQUFDc0wsZ0JBQWdCeE0sS0FBS0csS0FBSyxNQUFNLFFBQVFxTSxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBY3RMLEtBQUssS0FBSztJQUNsSCxJQUFJQyxTQUFTLENBQUMsQ0FBQ3NMLGdCQUFnQnpNLEtBQUtHLEtBQUssTUFBTSxRQUFRc00sa0JBQWtCLEtBQUssSUFBSSxLQUFLLElBQUlBLGNBQWN0TCxNQUFNLEtBQUs7SUFDcEgsT0FBTztRQUFDTDtRQUFHQztRQUFHRCxJQUFJSTtRQUFPSCxJQUFJSTtLQUFPO0FBQ3RDO0FBQ0EsSUFBSWlMLE1BQU0sU0FBU0EsSUFBSS9FLE1BQU07SUFDM0IsT0FBTy9HLEtBQUs4TCxHQUFHLENBQUNsQixLQUFLLENBQUM1SyxNQUFNO1FBQUMsQ0FBQ2tMO0tBQVMsQ0FBQ2tCLE1BQU0sQ0FBQ3JGO0FBQ2pEO0FBQ0EsSUFBSXVDLE1BQU0sU0FBU0EsSUFBSXZDLE1BQU07SUFDM0IsT0FBTy9HLEtBQUtzSixHQUFHLENBQUNzQixLQUFLLENBQUM1SyxNQUFNO1FBQUNrTDtLQUFTLENBQUNrQixNQUFNLENBQUNyRjtBQUNoRDtBQUNBLElBQUlzRix5QkFBeUIsU0FBU0EsdUJBQXVCM00sSUFBSTtJQUMvRCxJQUFJNE07SUFDSixJQUFJbkYsU0FBU0QsWUFBWSxDQUFDLENBQUNvRixnQkFBZ0I1TSxLQUFLRyxLQUFLLE1BQU0sUUFBUXlNLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjbkYsTUFBTSxLQUFLLEVBQUU7SUFDbEksSUFBSW9GLFVBQVVwRixPQUFPN0QsR0FBRyxDQUFDLFNBQVVxRSxDQUFDO1FBQ2xDLE9BQU9BLENBQUMsQ0FBQyxFQUFFO0lBQ2I7SUFDQSxJQUFJNkUsVUFBVXJGLE9BQU83RCxHQUFHLENBQUMsU0FBVXFFLENBQUM7UUFDbEMsT0FBT0EsQ0FBQyxDQUFDLEVBQUU7SUFDYjtJQUNBLE9BQU87UUFBQzJCLElBQUlpRDtRQUFVakQsSUFBSWtEO1FBQVVWLElBQUlTO1FBQVVULElBQUlVO0tBQVM7QUFDakU7QUFDQSxJQUFJQyxpQkFBa0IxQixDQUFBQSxrQkFBa0IsQ0FBQyxHQUFHQSxlQUFlLENBQUMvTCx1REFBTSxDQUFDLEdBQUcrTSxvQkFBb0JoQixlQUFlLENBQUMvTCx1REFBTSxDQUFDLEdBQUd5TSxvQkFBb0JWLGVBQWUsQ0FBQy9MLHVEQUFNLENBQUMsR0FBR2dNLG9CQUFvQkQsZUFBZSxDQUFDL0wseURBQVEsQ0FBQyxHQUFHcU0sc0JBQXNCTixlQUFlLENBQUMvTCwwREFBUyxDQUFDLEdBQUdzTSx1QkFBdUJQLGVBQWUsQ0FBQy9MLDBEQUFTLENBQUMsR0FBR3FOLHdCQUF3QnRCLGVBQWUsQ0FBQy9MLDJEQUFVLENBQUMsR0FBR3FOLHdCQUF3QnRCLGVBQWM7QUFDclosSUFBSWtDLGlCQUFpQixTQUFTQSxlQUFldk4sSUFBSTtJQUMvQyxJQUFJd04sZ0JBQWdCVCxjQUFjLENBQUMvTSxLQUFLeU4sSUFBSSxDQUFDO0lBQzdDLE9BQU9ELGdCQUFnQkEsY0FBY3hOLFFBQVE7UUFBQztRQUFHO1FBQUc7UUFBRztLQUFFO0FBQzNEO0FBRUEsSUFBSTBOO0FBQ0osSUFBSUMsaUJBQWlCLFNBQVNBLGVBQWU1TixHQUFHLEVBQUVDLElBQUk7SUFDcEQsSUFBSUM7SUFDSixJQUFJMk4sWUFBWSxDQUFDLENBQUMzTixjQUFjRCxLQUFLRyxLQUFLLE1BQU0sUUFBUUYsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVk0TixXQUFXLEtBQUs7SUFDdEgsSUFBSUQsV0FBVzdOLElBQUk2TixTQUFTLENBQUNBO0FBQy9CO0FBQ0EsSUFBSUUsaUJBQWlCLFNBQVNBLGVBQWUvTixHQUFHLEVBQUVDLElBQUk7SUFDcEQsSUFBSVM7SUFDSixJQUFJc04sY0FBYyxDQUFDLENBQUN0TixlQUFlVCxLQUFLRyxLQUFLLE1BQU0sUUFBUU0saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWF1TixNQUFNLEtBQUs7SUFDdEgsSUFBSUQsYUFBYWhPLElBQUlnTyxXQUFXLENBQUNBO0FBQ25DO0FBQ0EsSUFBSUUsYUFBYSxTQUFTQSxXQUFXbE8sR0FBRyxFQUFFQyxJQUFJO0lBQzVDLElBQUlVO0lBQ0osSUFBSW1FLFVBQVUsQ0FBQyxDQUFDbkUsZUFBZVYsS0FBS0csS0FBSyxNQUFNLFFBQVFPLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhbUUsT0FBTyxLQUFLO0lBQ25ILElBQUksQ0FBQ3RGLHFEQUFLQSxDQUFDc0YsVUFBVTlFLElBQUk4RSxPQUFPLENBQUNBO0FBQ25DO0FBQ0EsSUFBSXFKLGlCQUFpQixTQUFTQSxlQUFlbk8sR0FBRyxFQUFFQyxJQUFJO0lBQ3BELElBQUlXO0lBQ0osSUFBSW9FLGNBQWMsQ0FBQyxDQUFDcEUsZUFBZVgsS0FBS0csS0FBSyxNQUFNLFFBQVFRLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhb0UsV0FBVyxLQUFLO0lBQzNILElBQUksQ0FBQ3hGLHFEQUFLQSxDQUFDd0YsY0FBY2hGLElBQUlnRixXQUFXLENBQUNBO0FBQzNDO0FBQ0EsSUFBSW9KLG1CQUFtQixTQUFTQSxpQkFBaUJwTyxHQUFHLEVBQUVDLElBQUk7SUFDeEQsSUFBSVk7SUFDSixJQUFJd04sZ0JBQWdCLENBQUMsQ0FBQ3hOLGVBQWVaLEtBQUtHLEtBQUssTUFBTSxRQUFRUyxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYXdOLGFBQWEsS0FBSztJQUMvSCxJQUFJLENBQUM3TyxxREFBS0EsQ0FBQzZPLGdCQUFnQnJPLElBQUlxTyxhQUFhLENBQUNBO0FBQy9DO0FBQ0EsSUFBSUMsY0FBYyxTQUFTQSxZQUFZdE8sR0FBRyxFQUFFQyxJQUFJO0lBQzlDLElBQUlhO0lBQ0osSUFBSXlOLFdBQVcsQ0FBQyxDQUFDek4sZUFBZWIsS0FBS0csS0FBSyxNQUFNLFFBQVFVLGlCQUFpQixLQUFLLElBQUksS0FBSyxJQUFJQSxhQUFhME4sY0FBYyxLQUFLO0lBQzNILElBQUlELFVBQVV2TyxJQUFJdU8sUUFBUSxDQUFDQTtBQUM3QjtBQUNBLElBQUlFLGFBQWEsU0FBU0EsV0FBV3pPLEdBQUcsRUFBRUMsSUFBSTtJQUM1QyxJQUFJNkw7SUFDSixJQUFJNEMsVUFBVSxDQUFDLENBQUM1QyxlQUFlN0wsS0FBS0csS0FBSyxNQUFNLFFBQVEwTCxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYTZDLGFBQWEsS0FBSztJQUN6SCxJQUFJRCxTQUFTMU8sSUFBSTBPLE9BQU8sQ0FBQ0E7QUFDM0I7QUFDQSxJQUFJRSxjQUFjLFNBQVNBLFlBQVk1TyxHQUFHLEVBQUVDLElBQUk7SUFDOUMsSUFBSThMO0lBQ0osSUFBSXJCLFFBQVEsQ0FBQyxDQUFDcUIsZUFBZTlMLEtBQUtHLEtBQUssTUFBTSxRQUFRMkwsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWE4QyxlQUFlLEtBQUs7SUFDekgsSUFBSW5FLE9BQU8xSyxJQUFJOE8sSUFBSSxDQUFDcEUsTUFBTTdDLEtBQUssQ0FBQyxLQUFLaEUsR0FBRyxDQUFDa0w7QUFDM0M7QUFDQSxJQUFJQyx3QkFBd0IsU0FBU0Esc0JBQXNCL08sSUFBSTtJQUM3RCxJQUFJZ00sY0FBY2dEO0lBQ2xCLE9BQU8sQ0FBQyxDQUFDaEQsZUFBZWhNLEtBQUtHLEtBQUssTUFBTSxRQUFRNkwsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUksQ0FBQ2dELG9CQUFvQmhELGFBQWFpRCxJQUFJLE1BQU0sUUFBUUQsc0JBQXNCLEtBQUssSUFBSSxLQUFLLElBQUlBLGtCQUFrQnZCLElBQUksTUFBTW5PLGlFQUFnQjtBQUM3TjtBQUNBLElBQUk2UCx3QkFBd0IsU0FBU0Esc0JBQXNCblAsSUFBSTtJQUM3RCxJQUFJaU0sZUFBZW1EO0lBQ25CLE9BQU8sQ0FBQyxDQUFDbkQsZ0JBQWdCak0sS0FBS0csS0FBSyxNQUFNLFFBQVE4TCxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSSxDQUFDbUQscUJBQXFCbkQsY0FBY2dELElBQUksTUFBTSxRQUFRRyx1QkFBdUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsbUJBQW1CM0IsSUFBSSxNQUFNbk8saUVBQWdCO0FBQ25PO0FBRUEsMEdBQTBHO0FBQzFHLElBQUlnUSx3QkFBd0IsU0FBU0Esc0JBQXNCdlAsR0FBRyxFQUFFQyxJQUFJO0lBQ2xFLElBQUlrTTtJQUNKLElBQUlxRCxPQUFPaEMsZUFBZXZOO0lBQzFCLElBQUl3UCxXQUFXLENBQUMsQ0FBQ3RELGdCQUFnQmxNLEtBQUtHLEtBQUssTUFBTSxRQUFRK0wsa0JBQWtCLEtBQUssSUFBSSxLQUFLLElBQUlBLGNBQWMrQyxJQUFJLEtBQUs7SUFDcEgsSUFBSXBOLEtBQUsyTixTQUFTclAsS0FBSyxDQUFDMEIsRUFBRSxJQUFJO0lBQzlCLElBQUlFLEtBQUt5TixTQUFTclAsS0FBSyxDQUFDNEIsRUFBRSxJQUFJO0lBQzlCLElBQUlELEtBQUswTixTQUFTclAsS0FBSyxDQUFDMkIsRUFBRSxJQUFJO0lBQzlCLElBQUlFLEtBQUt3TixTQUFTclAsS0FBSyxDQUFDNkIsRUFBRSxJQUFJO0lBQzlCLElBQUl5TixLQUFLRixJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRTtJQUMxQixJQUFJRyxLQUFLSCxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRTtJQUMxQixJQUFJSSxLQUFLSixJQUFJLENBQUMsRUFBRTtJQUNoQixJQUFJSyxLQUFLTCxJQUFJLENBQUMsRUFBRTtJQUNoQixJQUFJTSxNQUFNSixLQUFLNU4sS0FBSzhOO0lBQ3BCLElBQUlHLE1BQU1KLEtBQUszTixLQUFLNk47SUFDcEIsSUFBSUcsTUFBTU4sS0FBSzNOLEtBQUs2TjtJQUNwQixJQUFJSyxNQUFNTixLQUFLMU4sS0FBSzROO0lBQ3BCLElBQUlLLE9BQU9sUSxJQUFJbVEsY0FBYyxDQUFDTCxLQUFLQyxLQUFLQyxLQUFLQztJQUM3Q1IsU0FBU3ZJLFFBQVEsQ0FBQ0YsT0FBTyxDQUFDLFNBQVVvSixJQUFJO1FBQ3RDRixLQUFLRSxJQUFJLENBQUNBLEtBQUtoUSxLQUFLLENBQUNpUSxNQUFNLEVBQUVELEtBQUtoUSxLQUFLLENBQUNrUSxTQUFTLEVBQUVGLEtBQUtoUSxLQUFLLENBQUNtUSxXQUFXO0lBQzNFO0lBQ0F2USxJQUFJa1AsSUFBSSxDQUFDZ0I7QUFDWDtBQUVBLDBHQUEwRztBQUMxRyxJQUFJTSx3QkFBd0IsU0FBU0Esc0JBQXNCeFEsR0FBRyxFQUFFQyxJQUFJO0lBQ2xFLElBQUltTTtJQUNKLElBQUlvRCxPQUFPaEMsZUFBZXZOO0lBQzFCLElBQUl3UCxXQUFXLENBQUMsQ0FBQ3JELGdCQUFnQm5NLEtBQUtHLEtBQUssTUFBTSxRQUFRZ00sa0JBQWtCLEtBQUssSUFBSSxLQUFLLElBQUlBLGNBQWM4QyxJQUFJLEtBQUs7SUFDcEgsSUFBSTdNLEtBQUtvTixTQUFTclAsS0FBSyxDQUFDaUMsRUFBRSxJQUFJO0lBQzlCLElBQUlDLEtBQUttTixTQUFTclAsS0FBSyxDQUFDa0MsRUFBRSxJQUFJO0lBQzlCLElBQUltTyxLQUFLaEIsU0FBU3JQLEtBQUssQ0FBQ3FRLEVBQUUsSUFBSXBPO0lBQzlCLElBQUlxTyxLQUFLakIsU0FBU3JQLEtBQUssQ0FBQ3NRLEVBQUUsSUFBSXBPO0lBQzlCLElBQUlTLElBQUkwTSxTQUFTclAsS0FBSyxDQUFDMkMsQ0FBQyxJQUFJO0lBQzVCLElBQUkyTSxLQUFLRixJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRTtJQUMxQixJQUFJRyxLQUFLSCxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRTtJQUMxQixJQUFJSSxLQUFLSixJQUFJLENBQUMsRUFBRTtJQUNoQixJQUFJSyxLQUFLTCxJQUFJLENBQUMsRUFBRTtJQUNoQixJQUFJbUIsS0FBSzVOLElBQUkyTTtJQUNiLElBQUlrQixNQUFNbEIsS0FBS3JOLEtBQUt1TjtJQUNwQixJQUFJaUIsTUFBTWxCLEtBQUtyTixLQUFLdU47SUFDcEIsSUFBSWlCLE1BQU1wQixLQUFLZSxLQUFLYjtJQUNwQixJQUFJbUIsTUFBTXBCLEtBQUtlLEtBQUtiO0lBQ3BCLElBQUlLLE9BQU9sUSxJQUFJZ1IsY0FBYyxDQUFDRixLQUFLQyxLQUFLLEdBQUdILEtBQUtDLEtBQUtGO0lBQ3JEbEIsU0FBU3ZJLFFBQVEsQ0FBQ0YsT0FBTyxDQUFDLFNBQVVvSixJQUFJO1FBQ3RDRixLQUFLRSxJQUFJLENBQUNBLEtBQUtoUSxLQUFLLENBQUNpUSxNQUFNLEVBQUVELEtBQUtoUSxLQUFLLENBQUNrUSxTQUFTLEVBQUVGLEtBQUtoUSxLQUFLLENBQUNtUSxXQUFXO0lBQzNFO0lBQ0F2USxJQUFJa1AsSUFBSSxDQUFDZ0I7QUFDWDtBQUNBLElBQUllLGVBQWUsU0FBU0EsYUFBYWpSLEdBQUcsRUFBRUMsSUFBSTtJQUNoRCxJQUFJc007SUFDSixJQUFJeEgsWUFBWSxDQUFDLENBQUN3SCxnQkFBZ0J0TSxLQUFLRyxLQUFLLE1BQU0sUUFBUW1NLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjMkMsSUFBSSxLQUFLO0lBQ3JILElBQUluSyxXQUFXL0UsSUFBSStFLFNBQVMsQ0FBQ0E7QUFDL0I7QUFDQSxJQUFJbU0sVUFBVSxTQUFTQSxRQUFRbFIsR0FBRyxFQUFFQyxJQUFJO0lBQ3RDLElBQUkrTyxzQkFBc0IvTyxPQUFPLE9BQU9zUCxzQkFBc0J2UCxLQUFLQztJQUNuRSxJQUFJbVAsc0JBQXNCblAsT0FBTyxPQUFPdVEsc0JBQXNCeFEsS0FBS0M7SUFDbkUsT0FBT2dSLGFBQWFqUixLQUFLQztBQUMzQjtBQUNBLElBQUlrUixPQUFPLFNBQVNBLEtBQUtuUixHQUFHLEVBQUVDLElBQUk7SUFDaEMsSUFBSUcsUUFBUUgsS0FBS0csS0FBSyxJQUFJLENBQUM7SUFDM0IsSUFBSUEsTUFBTThPLElBQUksSUFBSTlPLE1BQU02TixNQUFNLEVBQUU7UUFDOUJqTyxJQUFJb1IsYUFBYSxDQUFDaFIsTUFBTWlSLFFBQVE7SUFDbEMsT0FBTyxJQUFJalIsTUFBTThPLElBQUksRUFBRTtRQUNyQmxQLElBQUlrUCxJQUFJLENBQUM5TyxNQUFNaVIsUUFBUTtJQUN6QixPQUFPLElBQUlqUixNQUFNNk4sTUFBTSxFQUFFO1FBQ3ZCak8sSUFBSWlPLE1BQU07SUFDWixPQUFPO1FBQ0xqTyxJQUFJb0YsSUFBSTtRQUNScEYsSUFBSThFLE9BQU8sQ0FBQztRQUNaOUUsSUFBSWtQLElBQUksQ0FBQztRQUNUbFAsSUFBSTJGLE9BQU87SUFDYjtBQUNGO0FBQ0EsSUFBSTJMLE9BQU8sU0FBU0EsUUFBUTtBQUM1QixJQUFJQyxjQUFlNUQsQ0FBQUEsZUFBZSxDQUFDLEdBQUdBLFlBQVksQ0FBQ3BPLHdEQUFPLENBQUMsR0FBRytSLE1BQU0zRCxZQUFZLENBQUNwTywrREFBYyxDQUFDLEdBQUcrUixNQUFNM0QsWUFBWSxDQUFDcE8sdURBQU0sQ0FBQyxHQUFHUSxZQUFZNE4sWUFBWSxDQUFDcE8sdURBQU0sQ0FBQyxHQUFHa0IsWUFBWWtOLFlBQVksQ0FBQ3BPLHVEQUFNLENBQUMsR0FBR29DLGNBQWNnTSxZQUFZLENBQUNwTyxvREFBRyxDQUFDLEdBQUcyQyxhQUFheUwsWUFBWSxDQUFDcE8sdURBQU0sQ0FBQyxHQUFHMEgsZUFBZTBHLFlBQVksQ0FBQ3BPLHlEQUFRLENBQUMsR0FBR3VELGNBQWM2SyxZQUFZLENBQUNwTyx3REFBTyxDQUFDLEdBQUc4SSxlQUFlc0YsWUFBWSxDQUFDcE8sMERBQVMsQ0FBQyxHQUFHc0QsZUFBZThLLFlBQVksQ0FBQ3BPLDBEQUFTLENBQUMsR0FBRzZJLGVBQWV1RixZQUFZLENBQUNwTywyREFBVSxDQUFDLEdBQUc0SSxnQkFBZ0J3RixZQUFXO0FBQ2pmLElBQUlrRSxlQUFlLFNBQVNDLFdBQVc5UixHQUFHLEVBQUVDLElBQUk7SUFDOUMsSUFBSThSLFdBQVdSLFdBQVcsQ0FBQ3RSLEtBQUt5TixJQUFJLENBQUM7SUFDckMsSUFBSTZELGFBQWE7UUFDZlEsU0FBUy9SLEtBQUtDO0lBQ2hCLE9BQU87UUFDTDZGLFFBQVErQyxJQUFJLENBQUMsc0JBQXNCNUksS0FBS3lOLElBQUksR0FBRztJQUNqRDtBQUNGO0FBQ0EsSUFBSXNFLFdBQVcsU0FBU0EsU0FBU2hTLEdBQUcsRUFBRUMsSUFBSTtJQUN4Q3dPLFdBQVd6TyxLQUFLQztJQUNoQjJPLFlBQVk1TyxLQUFLQztJQUNqQnFPLFlBQVl0TyxLQUFLQztJQUNqQjJOLGVBQWU1TixLQUFLQztJQUNwQjhOLGVBQWUvTixLQUFLQztJQUNwQmlSLFFBQVFsUixLQUFLQztJQUNibU8saUJBQWlCcE8sS0FBS0M7SUFDdEJrTyxlQUFlbk8sS0FBS0M7SUFDcEJpTyxXQUFXbE8sS0FBS0M7SUFDaEJtTCxxQkFBcUJwTCxLQUFLQztJQUMxQjRSLGFBQWE3UixLQUFLQztJQUNsQmtSLEtBQUtuUixLQUFLQztBQUNaO0FBQ0EsSUFBSWdTLFdBQVcsU0FBU0EsU0FBU2pTLEdBQUcsRUFBRUMsSUFBSTtJQUN4QyxJQUFJdU07SUFDSixJQUFJOUIsUUFBUSxDQUFDOEIsZ0JBQWdCdk0sS0FBS0csS0FBSyxNQUFNLFFBQVFvTSxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBY3lGLFFBQVE7SUFDL0csSUFBSXZILE9BQU87UUFDVCxJQUFJeEQsV0FBV3dELE1BQU14RCxRQUFRLElBQUksRUFBRTtRQUNuQ0EsU0FBU0YsT0FBTyxDQUFDLFNBQVVrTCxLQUFLO1lBQzlCLE9BQU9MLGFBQWE3UixLQUFLa1M7UUFDM0I7UUFDQWxTLElBQUlxSyxJQUFJO0lBQ1Y7QUFDRjtBQUNBLElBQUk4SCxlQUFlLFNBQVNBLGFBQWFuUyxHQUFHLEVBQUVDLElBQUk7SUFDaEQsSUFBSWlILFdBQVdqSCxLQUFLaUgsUUFBUSxJQUFJLEVBQUU7SUFDbENBLFNBQVNGLE9BQU8sQ0FBQyxTQUFVa0wsS0FBSztRQUM5QmxTLElBQUlvRixJQUFJO1FBQ1I2TSxTQUFTalMsS0FBS2tTO1FBQ2RGLFNBQVNoUyxLQUFLa1M7UUFDZEMsYUFBYW5TLEtBQUtrUztRQUNsQmxTLElBQUkyRixPQUFPO0lBQ2I7QUFDRjtBQUNBLElBQUl5TSxxQkFBcUIsU0FBU0EsbUJBQW1CcFMsR0FBRyxFQUFFQyxJQUFJO0lBQzVELElBQUlnSixZQUFZaEosS0FBS3dHLEdBQUcsRUFDdEJ0RixRQUFROEgsVUFBVTlILEtBQUssRUFDdkJDLFNBQVM2SCxVQUFVN0gsTUFBTTtJQUMzQixJQUFJcUwsZ0JBQWdCeE0sS0FBS0csS0FBSyxFQUM1QmlTLFVBQVU1RixjQUFjNEYsT0FBTyxFQUMvQkMsd0JBQXdCN0YsY0FBYzhGLG1CQUFtQixFQUN6REEsc0JBQXNCRCwwQkFBMEIsS0FBSyxJQUFJLENBQUMsSUFBSUE7SUFDaEUsSUFBSUUsd0JBQXdCRCxvQkFBb0JFLFdBQVcsRUFDekRBLGNBQWNELDBCQUEwQixLQUFLLElBQUksU0FBU0EsdUJBQzFERSx5QkFBeUJILG9CQUFvQkksS0FBSyxFQUNsREEsUUFBUUQsMkJBQTJCLEtBQUssSUFBSSxhQUFhQTtJQUMzRCxJQUFJTCxXQUFXLFFBQVFsUixTQUFTLFFBQVFDLFVBQVUsTUFBTTtJQUN4RCxJQUFJTCxJQUFJLENBQUNzUixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUU8sSUFBSSxLQUFLO0lBQzVFLElBQUk1UixJQUFJLENBQUNxUixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUVEsSUFBSSxLQUFLO0lBQzVFLElBQUlDLGVBQWUsQ0FBQ1QsWUFBWSxRQUFRQSxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlBLFFBQVFVLElBQUksS0FBSzVSO0lBQ3ZGLElBQUk2UixnQkFBZ0IsQ0FBQ1gsWUFBWSxRQUFRQSxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlBLFFBQVFZLElBQUksS0FBSzdSO0lBQ3hGLElBQUk4UixlQUFlSixlQUFlRTtJQUNsQyxJQUFJRyxnQkFBZ0JoUyxRQUFRQztJQUM1QixJQUFJdUosU0FBU3hKLFFBQVEyUjtJQUNyQixJQUFJbEksU0FBU3hKLFNBQVM0UjtJQUN0QixJQUFJTCxVQUFVLFFBQVE7UUFDcEIzUyxJQUFJb0QsS0FBSyxDQUFDdUgsUUFBUUM7UUFDbEI1SyxJQUFJcUYsU0FBUyxDQUFDLENBQUN0RSxHQUFHLENBQUNDO1FBQ25CO0lBQ0Y7SUFDQSxJQUFJa1MsZUFBZUMsaUJBQWlCVixnQkFBZ0IsVUFBVVMsZ0JBQWdCQyxpQkFBaUJWLGdCQUFnQixTQUFTO1FBQ3RIelMsSUFBSW9ELEtBQUssQ0FBQ3dILFFBQVFBO1FBQ2xCLE9BQVErSDtZQUNOLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztnQkFDSDNTLElBQUlxRixTQUFTLENBQUMsQ0FBQ3RFLEdBQUcsQ0FBQ0M7Z0JBQ25CO1lBQ0YsS0FBSztZQUNMLEtBQUs7WUFDTCxLQUFLO2dCQUNIaEIsSUFBSXFGLFNBQVMsQ0FBQyxDQUFDdEUsSUFBSSxDQUFDK1IsZUFBZTNSLFFBQVE2UixnQkFBZ0I1UixNQUFLLElBQUssR0FBRyxDQUFDSjtnQkFDekU7WUFDRjtnQkFDRWhCLElBQUlxRixTQUFTLENBQUMsQ0FBQ3RFLElBQUsrUixDQUFBQSxlQUFlM1IsUUFBUTZSLGdCQUFnQjVSLE1BQUssR0FBSSxDQUFDSjtRQUN6RTtJQUNGLE9BQU87UUFDTGhCLElBQUlvRCxLQUFLLENBQUN1SCxRQUFRQTtRQUNsQixPQUFRZ0k7WUFDTixLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7Z0JBQ0gzUyxJQUFJcUYsU0FBUyxDQUFDLENBQUN0RSxHQUFHLENBQUNDO2dCQUNuQjtZQUNGLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztnQkFDSGhCLElBQUlxRixTQUFTLENBQUMsQ0FBQ3RFLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDZ1MsZ0JBQWdCNVIsU0FBUzBSLGVBQWUzUixLQUFJLElBQUs7Z0JBQ3pFO1lBQ0Y7Z0JBQ0VuQixJQUFJcUYsU0FBUyxDQUFDLENBQUN0RSxHQUFHLENBQUNDLElBQUtnUyxDQUFBQSxnQkFBZ0I1UixTQUFTMFIsZUFBZTNSLEtBQUk7UUFDeEU7SUFDRjtBQUNGO0FBQ0EsSUFBSWlTLGVBQWUsU0FBU0EsYUFBYXBULEdBQUcsRUFBRUMsSUFBSTtJQUNoRCxJQUFJb1QsYUFBYXBULEtBQUt3RyxHQUFHLEVBQ3ZCeUMsTUFBTW1LLFdBQVduSyxHQUFHLEVBQ3BCQyxPQUFPa0ssV0FBV2xLLElBQUk7SUFDeEIsSUFBSVAsY0FBYzNJLEtBQUt3RyxHQUFHLENBQUNtQyxXQUFXLElBQUk7SUFDMUMsSUFBSUQsYUFBYTFJLEtBQUt3RyxHQUFHLENBQUNrQyxVQUFVLElBQUk7SUFDeEMzSSxJQUFJcUYsU0FBUyxDQUFDOEQsT0FBT1AsYUFBYU0sTUFBTVA7QUFDMUM7QUFDQSxJQUFJMkssWUFBWSxTQUFTQSxVQUFVdFQsR0FBRyxFQUFFQyxJQUFJO0lBQzFDRCxJQUFJb0YsSUFBSTtJQUNSNEQsU0FBU2hKLEtBQUtDO0lBQ2RtVCxhQUFhcFQsS0FBS0M7SUFDbEJtUyxtQkFBbUJwUyxLQUFLQztJQUN4QmtTLGFBQWFuUyxLQUFLQztJQUNsQkQsSUFBSTJGLE9BQU87QUFDYjtBQUVBLElBQUk0TixRQUFRO0lBQ1Y3SSxPQUFPO1FBQUM7UUFBRztRQUFHO0tBQUU7SUFDaEI1RixTQUFTO0FBQ1g7QUFDQSxJQUFJME8sYUFBYSxTQUFTQSxXQUFXQyxHQUFHO0lBQ3RDLElBQUlDLFNBQVM3VCw2Q0FBZSxDQUFDNFQ7SUFDN0IsSUFBSSxDQUFDQyxRQUFRLE9BQU9IO0lBQ3BCLElBQUk3SSxRQUFRN0ssNENBQWMsQ0FBQzRULEdBQUcsQ0FBQ0MsT0FBT2hKLEtBQUssQ0FBQzVDLEtBQUssQ0FBQyxHQUFHO0lBQ3JELElBQUloRCxVQUFVNE8sT0FBT2hKLEtBQUssQ0FBQyxFQUFFO0lBQzdCLE9BQU87UUFDTEEsT0FBT0E7UUFDUDVGLFNBQVNBO0lBQ1g7QUFDRjtBQUVBLG9DQUFvQyxHQUNwQyxJQUFJK08sY0FBYztBQUNsQixJQUFJQyxZQUFZLFNBQVNDLFFBQVFDLEdBQUc7SUFDbEMsT0FBT0EsSUFBSUMsS0FBSyxDQUFDSjtBQUNuQjtBQUNBLElBQUlLLG1CQUFtQixTQUFTQSxpQkFBaUJsVSxHQUFHLEVBQUVtVSxVQUFVO0lBQzlELElBQUlDLHNCQUFzQkQsV0FBV2pRLE9BQU8sRUFDMUNBLFVBQVVrUSx3QkFBd0IsS0FBSyxJQUFJLElBQUlBLHFCQUMvQ0Msc0JBQXNCRixXQUFXaFEsT0FBTyxFQUN4Q0EsVUFBVWtRLHdCQUF3QixLQUFLLElBQUksSUFBSUEscUJBQy9DbFQsUUFBUWdULFdBQVdoVCxLQUFLLEVBQ3hCQyxTQUFTK1MsV0FBVy9TLE1BQU0sRUFDMUJtSCxRQUFRNEwsV0FBVzVMLEtBQUs7SUFDMUJ2SSxJQUFJcUYsU0FBUyxDQUFDLENBQUNsRSxRQUFRK0MsU0FBUyxDQUFDOUMsU0FBUytDO0lBQzFDbkUsSUFBSXVJLEtBQUssQ0FBQ0EsT0FBTyxHQUFHLEdBQUc7UUFDckIrTCxLQUFLO1lBQUNuVDtZQUFPQztTQUFPO1FBQ3BCdVIsT0FBTztRQUNQNEIsUUFBUTtJQUNWO0FBQ0Y7QUFDQSxJQUFJQyxvQkFBb0IsU0FBU0Esa0JBQWtCeFUsR0FBRyxFQUFFd0UsR0FBRztJQUN6RHhFLElBQUlvRixJQUFJO0lBQ1IsSUFBSTVCLE9BQU9nQixJQUFJRyxVQUFVLENBQUNuQixJQUFJO0lBQzlCLElBQUlpUixRQUFRalIsS0FBS2tSLGlCQUFpQixDQUFDO0lBQ25DLElBQUlDLG9CQUFvQm5SLEtBQUtrUixpQkFBaUIsQ0FBQztJQUMvQyxJQUFJRSxvQkFBb0I7SUFDeEIsSUFBSyxJQUFJN1EsSUFBSSxHQUFHQSxJQUFJUyxJQUFJdkIsTUFBTSxDQUFDc0MsTUFBTSxFQUFFeEIsS0FBSyxFQUFHO1FBQzdDLElBQUl5QixXQUFXaEIsSUFBSXRCLFNBQVMsQ0FBQ2EsRUFBRTtRQUMvQixJQUFJMEIsUUFBUWpCLElBQUl2QixNQUFNLENBQUNjLEVBQUU7UUFDekI2USxxQkFBcUJwUCxTQUFTeEIsUUFBUSxJQUFJO1FBQzFDLElBQUl5QixNQUFNb1AsRUFBRSxLQUFLRixrQkFBa0JFLEVBQUUsSUFBSXJRLElBQUlHLFVBQVUsQ0FBQ3dQLFVBQVUsRUFBRTtZQUNsRW5VLElBQUlxRixTQUFTLENBQUN1UCxtQkFBbUJwUCxTQUFTckIsT0FBTyxJQUFJO1lBQ3JEK1AsaUJBQWlCbFUsS0FBS3dFLElBQUlHLFVBQVUsQ0FBQ3dQLFVBQVU7WUFDL0MzUCxJQUFJdkIsTUFBTSxDQUFDYyxFQUFFLEdBQUcwUTtZQUNoQkcsb0JBQW9CO1FBQ3RCO0lBQ0Y7SUFDQTVVLElBQUkyRixPQUFPO0FBQ2I7QUFDQSxJQUFJcEIsWUFBWSxTQUFTQSxVQUFVdkUsR0FBRyxFQUFFd0UsR0FBRyxFQUFFckIsT0FBTztJQUNsRCxJQUFJdUIsa0JBQWtCRixJQUFJRyxVQUFVLEVBQ2xDbkIsT0FBT2tCLGdCQUFnQmxCLElBQUksRUFDM0JvQixXQUFXRixnQkFBZ0JFLFFBQVEsRUFDbkNrUSxPQUFPcFEsZ0JBQWdCb1EsSUFBSTtJQUM3QixJQUFJalEsUUFBUTJPLFdBQVdoUCxJQUFJRyxVQUFVLENBQUNFLEtBQUs7SUFDM0MsSUFBSUMsVUFBVXRGLHFEQUFLQSxDQUFDZ0YsSUFBSUcsVUFBVSxDQUFDRyxPQUFPLElBQUlELE1BQU1DLE9BQU8sR0FBR04sSUFBSUcsVUFBVSxDQUFDRyxPQUFPO0lBQ3BGLElBQUkxRCxTQUFTb0QsSUFBSXBELE1BQU0sRUFDckJ3RixVQUFVcEMsSUFBSW9DLE9BQU8sRUFDckI1QyxXQUFXUSxJQUFJUixRQUFRO0lBQ3pCLElBQUliLFFBQVE0UixXQUFXLEVBQUU7UUFDdkIvVSxJQUFJZ1YsSUFBSSxDQUFDLEdBQUcsQ0FBQzVULFFBQVE0QyxVQUFVNUMsUUFBUTZNLE1BQU07SUFDL0M7SUFDQWpPLElBQUkrRSxTQUFTLENBQUNGLE1BQU02RixLQUFLO0lBQ3pCMUssSUFBSWdGLFdBQVcsQ0FBQ0Y7SUFDaEIsSUFBSWdRLE1BQU07UUFDUixJQUFJaEIsVUFBVWdCLE9BQU87WUFDbkI5VSxJQUFJaVYsSUFBSSxDQUFDLEdBQUcsQ0FBQzdULFNBQVN3RixTQUFTNUMsVUFBVTVDLFFBQVEwVCxLQUFLaE4sS0FBSyxDQUFDO1FBQzlELE9BQU87WUFDTDlILElBQUk4VSxJQUFJLENBQUMsR0FBRyxDQUFDMVQsU0FBU3dGLFNBQVM1QyxVQUFVNUMsUUFBUTBUO1FBQ25EO0lBQ0Y7SUFDQU4sa0JBQWtCeFUsS0FBS3dFO0lBQ3ZCLElBQUloQixLQUFLeUIsSUFBSSxJQUFJekIsS0FBSzBCLElBQUksSUFBSTFCLEtBQUsyQixJQUFJLEVBQUU7UUFDdkNuRixJQUFJb0YsSUFBSTtRQUNScEYsSUFBSXFGLFNBQVMsQ0FBQyxHQUFHLENBQUNiLElBQUljLE1BQU07UUFDNUIsSUFBSyxJQUFJdkIsSUFBSSxHQUFHQSxJQUFJUyxJQUFJdkIsTUFBTSxDQUFDc0MsTUFBTSxFQUFFeEIsS0FBSyxFQUFHO1lBQzdDLElBQUl5QixXQUFXaEIsSUFBSXRCLFNBQVMsQ0FBQ2EsRUFBRTtZQUMvQixJQUFJMEIsUUFBUWpCLElBQUl2QixNQUFNLENBQUNjLEVBQUU7WUFDekIvRCxJQUFJb0YsSUFBSTtZQUNScEYsSUFBSXFGLFNBQVMsQ0FBQ0csU0FBU3RCLE9BQU8sRUFBRXNCLFNBQVNyQixPQUFPO1lBQ2hEc0IsTUFBTUMsTUFBTSxDQUFDMUYsS0FBSzRFO1lBQ2xCNUUsSUFBSTJGLE9BQU87WUFDWDNGLElBQUlxRixTQUFTLENBQUNHLFNBQVN4QixRQUFRLEVBQUV3QixTQUFTdkIsUUFBUTtRQUNwRDtRQUNBakUsSUFBSTJGLE9BQU87SUFDYixPQUFPO1FBQ0wzRixJQUFJd0QsSUFBSSxDQUFDLE9BQU9BLEtBQUtvQyxJQUFJLEtBQUssV0FBV3BDLEtBQUtvQyxJQUFJLEdBQUdwQyxNQUFNb0I7UUFDM0QsSUFBSTtZQUNGNUIsYUFBYWhELEtBQUt3RSxJQUFJdkIsTUFBTSxFQUFFdUIsSUFBSXRCLFNBQVMsRUFBRSxHQUFHO1FBQ2xELEVBQUUsT0FBTzJDLE9BQU87WUFDZEMsUUFBUUMsR0FBRyxDQUFDRjtRQUNkO0lBQ0Y7SUFDQTdGLElBQUlxRixTQUFTLENBQUNyQixVQUFVO0FBQzFCO0FBQ0EsSUFBSWtSLHFCQUFxQixTQUFTQyxpQkFBaUJuVixHQUFHLEVBQUVnVixJQUFJLEVBQUVJLGVBQWU7SUFDM0UsSUFBSXZRLFFBQVEyTyxXQUFXNEI7SUFDdkJwVixJQUFJb0YsSUFBSTtJQUNScEYsSUFBSWdGLFdBQVcsQ0FBQ0gsTUFBTUMsT0FBTztJQUM3QjlFLElBQUlnVixJQUFJLENBQUNBLEtBQUtqVSxDQUFDLEVBQUVpVSxLQUFLaFUsQ0FBQyxFQUFFZ1UsS0FBSzdULEtBQUssRUFBRTZULEtBQUs1VCxNQUFNO0lBQ2hEcEIsSUFBSWtQLElBQUksQ0FBQ3JLLE1BQU02RixLQUFLO0lBQ3BCMUssSUFBSTJGLE9BQU87QUFDYjtBQUNBLElBQUkwUCx1QkFBdUIsU0FBU0EscUJBQXFCclYsR0FBRyxFQUFFaUcsSUFBSTtJQUNoRWpHLElBQUlvRixJQUFJO0lBQ1JwRixJQUFJNk4sU0FBUyxDQUFDNUgsS0FBSytPLElBQUksQ0FBQzVULE1BQU07SUFDOUJwQixJQUFJcU8sYUFBYSxDQUFDcEksS0FBS25CLE9BQU87SUFDOUIsSUFBSSxTQUFTd1EsSUFBSSxDQUFDclAsS0FBS3lDLEtBQUssR0FBRztRQUM3QjFJLElBQUk4TyxJQUFJLENBQUMsSUFBSTdJLEtBQUsrTyxJQUFJLENBQUM1VCxNQUFNO0lBQy9CLE9BQU8sSUFBSSxTQUFTa1UsSUFBSSxDQUFDclAsS0FBS3lDLEtBQUssR0FBRztRQUNwQzFJLElBQUk4TyxJQUFJLENBQUM3SSxLQUFLK08sSUFBSSxDQUFDNVQsTUFBTTtJQUMzQjtJQUNBLElBQUksT0FBT2tVLElBQUksQ0FBQ3JQLEtBQUt5QyxLQUFLLEdBQUc7UUFDM0IsSUFBSTZNLE9BQU9oVixLQUFLOEwsR0FBRyxDQUFDLEdBQUdwRyxLQUFLK08sSUFBSSxDQUFDNVQsTUFBTTtRQUN2QyxJQUFJb1UsT0FBTyxNQUFNRDtRQUNqQixJQUFJRSxZQUFZbFYsS0FBS21WLEtBQUssQ0FBQ3pQLEtBQUsrTyxJQUFJLENBQUM3VCxLQUFLLEdBQUksS0FBSXFVLElBQUc7UUFFckQsbUNBQW1DO1FBQ25DLElBQUlHLGlCQUFpQjFQLEtBQUsrTyxJQUFJLENBQUM3VCxLQUFLLEdBQUdzVSxZQUFZLElBQUlEO1FBQ3ZELElBQUlJLGFBQWFELGlCQUFpQkYsWUFBWTtRQUM5Q0QsUUFBUUk7UUFDUixJQUFJQyxPQUFPNVAsS0FBSytPLElBQUksQ0FBQ2hVLENBQUMsR0FBR3VVO1FBQ3pCLElBQUlPLE9BQU83UCxLQUFLK08sSUFBSSxDQUFDaFUsQ0FBQyxHQUFHdVU7UUFDekIsSUFBSXhVLElBQUlrRixLQUFLK08sSUFBSSxDQUFDalUsQ0FBQztRQUNuQmYsSUFBSXVCLE1BQU0sQ0FBQzBFLEtBQUsrTyxJQUFJLENBQUNqVSxDQUFDLEVBQUVrRixLQUFLK08sSUFBSSxDQUFDaFUsQ0FBQztRQUNuQyxJQUFLLElBQUkrQyxJQUFJLEdBQUdBLElBQUkwUixXQUFXMVIsS0FBSyxFQUFHO1lBQ3JDL0QsSUFBSXlCLGFBQWEsQ0FBQ1YsSUFBSXlVLE1BQU1LLE1BQU05VSxJQUFJeVUsTUFBTU0sTUFBTS9VLElBQUksSUFBSXlVLE1BQU12UCxLQUFLK08sSUFBSSxDQUFDaFUsQ0FBQztZQUMzRUQsS0FBSyxJQUFJeVU7UUFDWDtJQUNGLE9BQU87UUFDTHhWLElBQUl1QixNQUFNLENBQUMwRSxLQUFLK08sSUFBSSxDQUFDalUsQ0FBQyxFQUFFa0YsS0FBSytPLElBQUksQ0FBQ2hVLENBQUM7UUFDbkNoQixJQUFJd0IsTUFBTSxDQUFDeUUsS0FBSytPLElBQUksQ0FBQ2pVLENBQUMsR0FBR2tGLEtBQUsrTyxJQUFJLENBQUM3VCxLQUFLLEVBQUU4RSxLQUFLK08sSUFBSSxDQUFDaFUsQ0FBQztRQUNyRCxJQUFJLFNBQVNzVSxJQUFJLENBQUNyUCxLQUFLeUMsS0FBSyxHQUFHO1lBQzdCMUksSUFBSXVCLE1BQU0sQ0FBQzBFLEtBQUsrTyxJQUFJLENBQUNqVSxDQUFDLEVBQUVrRixLQUFLK08sSUFBSSxDQUFDaFUsQ0FBQyxHQUFHaUYsS0FBSytPLElBQUksQ0FBQzVULE1BQU0sR0FBRztZQUN6RHBCLElBQUl3QixNQUFNLENBQUN5RSxLQUFLK08sSUFBSSxDQUFDalUsQ0FBQyxHQUFHa0YsS0FBSytPLElBQUksQ0FBQzdULEtBQUssRUFBRThFLEtBQUsrTyxJQUFJLENBQUNoVSxDQUFDLEdBQUdpRixLQUFLK08sSUFBSSxDQUFDNVQsTUFBTSxHQUFHO1FBQzdFO0lBQ0Y7SUFDQXBCLElBQUlpTyxNQUFNLENBQUNoSSxLQUFLcEIsS0FBSztJQUNyQjdFLElBQUkyRixPQUFPO0FBQ2I7QUFDQSxJQUFJL0QsYUFBYSxTQUFTQSxXQUFXNUIsR0FBRyxFQUFFaUcsSUFBSSxFQUFFOUMsT0FBTztJQUNyRCxJQUFJNFMsYUFBYTlQLEtBQUtYLE1BQU07SUFDNUIsSUFBSW5DLFFBQVE2UyxZQUFZLEVBQUU7UUFDeEJoVyxJQUFJZ1YsSUFBSSxDQUFDL08sS0FBS1EsR0FBRyxDQUFDMUYsQ0FBQyxFQUFFa0YsS0FBS1EsR0FBRyxDQUFDekYsQ0FBQyxFQUFFaUYsS0FBS1EsR0FBRyxDQUFDdEYsS0FBSyxFQUFFOEUsS0FBS1EsR0FBRyxDQUFDckYsTUFBTSxFQUFFNk0sTUFBTTtJQUMxRTtJQUNBak8sSUFBSW9GLElBQUk7SUFDUnBGLElBQUlxRixTQUFTLENBQUNZLEtBQUtRLEdBQUcsQ0FBQzFGLENBQUMsRUFBRWtGLEtBQUtRLEdBQUcsQ0FBQ3pGLENBQUMsR0FBRytVO0lBQ3ZDLElBQUssSUFBSWhTLElBQUksR0FBR0EsSUFBSWtDLEtBQUtTLElBQUksQ0FBQ25CLE1BQU0sRUFBRXhCLEtBQUssRUFBRztRQUM1QyxJQUFJUyxNQUFNeUIsS0FBS1MsSUFBSSxDQUFDM0MsRUFBRTtRQUN0QixJQUFJa1MsWUFBWWxTLE1BQU1rQyxLQUFLUyxJQUFJLENBQUNuQixNQUFNLEdBQUc7UUFDekMsSUFBSWYsSUFBSUcsVUFBVSxDQUFDeVEsZUFBZSxFQUFFO1lBQ2xDLElBQUljLGdCQUFnQkQsWUFBWWhRLEtBQUtpUSxhQUFhLEdBQUc7WUFDckQsSUFBSUMsaUJBQWlCO2dCQUNuQnBWLEdBQUc7Z0JBQ0hDLEdBQUcsQ0FBQytVO2dCQUNKM1UsUUFBUTZFLEtBQUtRLEdBQUcsQ0FBQ3JGLE1BQU07Z0JBQ3ZCRCxPQUFPcUQsSUFBSVIsUUFBUSxHQUFHa1M7WUFDeEI7WUFDQWhCLG1CQUFtQmxWLEtBQUttVyxnQkFBZ0IzUixJQUFJRyxVQUFVLENBQUN5USxlQUFlO1FBQ3hFO1FBQ0E3USxVQUFVdkUsS0FBS3dFLEtBQUtyQjtJQUN0QjtJQUNBbkQsSUFBSTJGLE9BQU87SUFDWDNGLElBQUlvRixJQUFJO0lBQ1JwRixJQUFJcUYsU0FBUyxDQUFDWSxLQUFLUSxHQUFHLENBQUMxRixDQUFDLEVBQUVrRixLQUFLUSxHQUFHLENBQUN6RixDQUFDO0lBQ3BDLElBQUssSUFBSW9WLEtBQUssR0FBR0EsS0FBS25RLEtBQUtvUSxlQUFlLENBQUM5USxNQUFNLEVBQUU2USxNQUFNLEVBQUc7UUFDMUQsSUFBSUUsaUJBQWlCclEsS0FBS29RLGVBQWUsQ0FBQ0QsR0FBRztRQUM3Q2YscUJBQXFCclYsS0FBS3NXO0lBQzVCO0lBQ0F0VyxJQUFJMkYsT0FBTztBQUNiO0FBQ0EsSUFBSTRRLGNBQWMsU0FBU0EsWUFBWXZXLEdBQUcsRUFBRXdXLEtBQUssRUFBRXJULE9BQU87SUFDeERxVCxNQUFNeFAsT0FBTyxDQUFDLFNBQVVmLElBQUk7UUFDMUJyRSxXQUFXNUIsS0FBS2lHLE1BQU05QztJQUN4QjtBQUNGO0FBQ0EsSUFBSXNULGFBQWEsU0FBU0EsV0FBV3pXLEdBQUcsRUFBRUMsSUFBSTtJQUM1QyxJQUFJb1QsWUFBWXFEO0lBQ2hCLElBQUl6TixZQUFZaEosS0FBS3dHLEdBQUcsRUFDdEJ5QyxNQUFNRCxVQUFVQyxHQUFHLEVBQ25CQyxPQUFPRixVQUFVRSxJQUFJO0lBQ3ZCLElBQUl3TixTQUFTO1FBQUMxVyxLQUFLbUgsS0FBSztLQUFDO0lBQ3pCLElBQUl1QixhQUFhLENBQUMsQ0FBQzBLLGFBQWFwVCxLQUFLd0csR0FBRyxNQUFNLFFBQVE0TSxlQUFlLEtBQUssSUFBSSxLQUFLLElBQUlBLFdBQVcxSyxVQUFVLEtBQUs7SUFDakgsSUFBSUMsY0FBYyxDQUFDLENBQUM4TixhQUFhelcsS0FBS3dHLEdBQUcsTUFBTSxRQUFRaVEsZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJQSxXQUFXOU4sV0FBVyxLQUFLO0lBQ25ILElBQUlnTyxXQUFXM1csS0FBS21ILEtBQUssQ0FBQyxFQUFFLEdBQUduSCxLQUFLbUgsS0FBSyxDQUFDLEVBQUUsQ0FBQ1gsR0FBRyxDQUFDekYsQ0FBQyxHQUFHO0lBQ3JELElBQUk2VixVQUFVNVcsS0FBSzZXLFdBQVcsSUFBSTtJQUNsQzlXLElBQUlvRixJQUFJO0lBQ1JwRixJQUFJcUYsU0FBUyxDQUFDOEQsT0FBT1AsY0FBY2lPLFNBQVMzTixNQUFNUCxhQUFhaU87SUFDL0RELE9BQU8zUCxPQUFPLENBQUMsU0FBVXdQLEtBQUs7UUFDNUJELFlBQVl2VyxLQUFLd1csT0FBTyxDQUFDO0lBQzNCO0lBQ0F4VyxJQUFJMkYsT0FBTztBQUNiO0FBRUEsSUFBSW9SLGFBQWEsU0FBU0EsV0FBVy9XLEdBQUcsRUFBRUMsSUFBSTtJQUM1QyxJQUFJQztJQUNKLElBQUkrSSxZQUFZaEosS0FBS3dHLEdBQUcsRUFDdEJ0RixRQUFROEgsVUFBVTlILEtBQUssRUFDdkJDLFNBQVM2SCxVQUFVN0gsTUFBTTtJQUMzQixJQUFJNFYsTUFBTSxDQUFDLENBQUM5VyxjQUFjRCxLQUFLRyxLQUFLLE1BQU0sUUFBUUYsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVk4VyxHQUFHLEtBQUs7SUFDeEcsSUFBSUMsV0FBV0QsTUFBTTtJQUNyQmhYLElBQUlrWCxPQUFPLENBQUM7UUFDVkMsTUFBTTtZQUFDaFc7WUFBT0M7U0FBTztRQUNyQmdXLFFBQVE7UUFDUkgsVUFBVUE7SUFDWjtBQUNGO0FBRUEsSUFBSUksYUFBYSxTQUFTQSxXQUFXclgsR0FBRyxFQUFFQyxJQUFJO0lBQzVDLElBQUlxWCxnQkFBZ0I3TyxhQUFhOE87SUFDakMsSUFBSXRPLFlBQVloSixLQUFLd0csR0FBRyxFQUN0QnlDLE1BQU1ELFVBQVVDLEdBQUcsRUFDbkJDLE9BQU9GLFVBQVVFLElBQUk7SUFDdkIsSUFBSXVCLFFBQVEsQ0FBQ3pLLFNBQVMsUUFBUUEsU0FBUyxLQUFLLElBQUksS0FBSyxJQUFJLENBQUNxWCxpQkFBaUJyWCxLQUFLaUgsUUFBUSxNQUFNLFFBQVFvUSxtQkFBbUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBYyxDQUFDLEVBQUUsQ0FBQzVNLEtBQUssS0FBSztJQUN2SyxJQUFJN0YsUUFBUSxDQUFDLENBQUM0RCxjQUFjeEksS0FBS3lJLEtBQUssTUFBTSxRQUFRRCxnQkFBZ0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsWUFBWTJNLGVBQWUsS0FBSztJQUN0SCxJQUFJb0MsY0FBYyxDQUFDLENBQUNELGVBQWV0WCxLQUFLeUksS0FBSyxNQUFNLFFBQVE2TyxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUMsV0FBVyxLQUFLO0lBQzNIeFgsSUFBSXlYLElBQUksQ0FBQ3RPLE1BQU1ELEtBQUssR0FBRyxHQUFHd0IsT0FBTztRQUMvQjdGLE9BQU9BO1FBQ1AyUyxhQUFhQTtJQUNmO0FBQ0Y7QUFFQSxJQUFJRSxZQUFZLFNBQVNBLFVBQVVDLENBQUM7SUFDbEMsT0FBTyxDQUFDNUksT0FBTzZJLEtBQUssQ0FBQzVQLFdBQVcyUCxPQUFPNUksT0FBTzhJLFFBQVEsQ0FBQ0Y7QUFDekQ7QUFDQSxJQUFJRyx3QkFBd0IsU0FBU0Esc0JBQXNCQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRTtJQUMvRSxJQUFJQyxLQUFLTixLQUFLQztJQUNkLElBQUlNLEtBQUtMLEtBQUtDO0lBQ2QsSUFBSUssTUFBTTlZLDREQUFZQSxDQUFDMFk7SUFDdkIsSUFBSUssTUFBTS9ZLDREQUFZQSxDQUFDMlk7SUFDdkIsSUFBSUssTUFBTUYsTUFBTUEsSUFBSUcsT0FBTyxHQUFHO0lBQzlCLElBQUlDLE1BQU1ILE1BQU1BLElBQUlFLE9BQU8sR0FBRztJQUM5QixJQUFJTCxLQUFLQyxJQUFJO1FBQ1gsSUFBSU0sVUFBVVo7UUFDZCxJQUFJYSxTQUFTRCxVQUFVTjtRQUN2QixJQUFJUSxXQUFXcEIsVUFBVVUsTUFBTUEsS0FBSztRQUNwQyxJQUFJVyxXQUFXckIsVUFBVVMsTUFBTUEsS0FBSyxDQUFDSixLQUFLYyxNQUFLLElBQUtKO1FBQ3BELE9BQU87WUFDTHRYLE9BQU8wWDtZQUNQelgsUUFBUXdYO1lBQ1IxVSxTQUFTNlU7WUFDVDVVLFNBQVMyVTtRQUNYO0lBQ0Y7SUFDQSxJQUFJM1gsUUFBUTRXO0lBQ1osSUFBSTNXLFNBQVNELFFBQVFtWDtJQUNyQixJQUFJcFUsVUFBVXdULFVBQVVTLE1BQU1BLEtBQUs7SUFDbkMsSUFBSWhVLFVBQVV1VCxVQUFVVSxNQUFNQSxLQUFLLENBQUNKLEtBQUs1VyxNQUFLLElBQUt1WDtJQUNuRCxPQUFPO1FBQ0x4WCxPQUFPQTtRQUNQQyxRQUFRQTtRQUNSK0MsU0FBU0E7UUFDVEQsU0FBU0E7SUFDWDtBQUNGO0FBQ0EsSUFBSThVLHFCQUFxQixTQUFTQSxtQkFBbUJqQixFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRTtJQUN6RSxJQUFJalgsUUFBUThXO0lBQ1osSUFBSTdXLFNBQVM4VztJQUNiLElBQUlLLE1BQU05WSw0REFBWUEsQ0FBQzBZO0lBQ3ZCLElBQUlLLE1BQU0vWSw0REFBWUEsQ0FBQzJZO0lBQ3ZCLElBQUlLLE1BQU1GLE1BQU1BLElBQUlHLE9BQU8sR0FBRztJQUM5QixJQUFJQyxNQUFNSCxNQUFNQSxJQUFJRSxPQUFPLEdBQUc7SUFDOUIsSUFBSXhVLFVBQVV3VCxVQUFVUyxNQUFNQSxLQUFLLENBQUNKLEtBQUs1VyxLQUFJLElBQUtzWDtJQUNsRCxJQUFJdFUsVUFBVXVULFVBQVVVLE1BQU1BLEtBQUssQ0FBQ0osS0FBSzVXLE1BQUssSUFBS3VYO0lBQ25ELE9BQU87UUFDTHhYLE9BQU9BO1FBQ1BDLFFBQVFBO1FBQ1I4QyxTQUFTQTtRQUNUQyxTQUFTQTtJQUNYO0FBQ0Y7QUFDQSxJQUFJOFUsc0JBQXNCLFNBQVNBLG9CQUFvQmxCLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFO0lBQzNFLElBQUlFLEtBQUtMLEtBQUtDO0lBQ2QsSUFBSUcsS0FBS04sS0FBS0M7SUFDZCxJQUFJTyxNQUFNOVksNERBQVlBLENBQUMwWTtJQUN2QixJQUFJSyxNQUFNL1ksNERBQVlBLENBQUMyWTtJQUN2QixJQUFJSyxNQUFNRixNQUFNQSxJQUFJRyxPQUFPLEdBQUc7SUFDOUIsSUFBSUMsTUFBTUgsTUFBTUEsSUFBSUUsT0FBTyxHQUFHO0lBQzlCLElBQUlMLEtBQUtDLElBQUk7UUFDWCxJQUFJWSxVQUFVbkI7UUFDZCxJQUFJb0IsV0FBV0QsVUFBVVo7UUFDekIsSUFBSWMsWUFBWTFCLFVBQVVTLE1BQU1BLEtBQUs7UUFDckMsSUFBSWtCLFlBQVkzQixVQUFVVSxNQUFNQSxLQUFLLENBQUNKLEtBQUttQixRQUFPLElBQUtSO1FBQ3ZELE9BQU87WUFDTHhYLE9BQU8rWDtZQUNQOVgsUUFBUStYO1lBQ1JoVixTQUFTa1Y7WUFDVG5WLFNBQVNrVjtRQUNYO0lBQ0Y7SUFDQSxJQUFJaFksU0FBUzRXO0lBQ2IsSUFBSTdXLFFBQVFDLFNBQVNrWDtJQUNyQixJQUFJcFUsVUFBVXdULFVBQVVTLE1BQU1BLEtBQUssQ0FBQ0osS0FBSzVXLEtBQUksSUFBS3NYO0lBQ2xELElBQUl0VSxVQUFVdVQsVUFBVVUsTUFBTUEsS0FBSztJQUNuQyxPQUFPO1FBQ0xqWCxPQUFPQTtRQUNQQyxRQUFRQTtRQUNSOEMsU0FBU0E7UUFDVEMsU0FBU0E7SUFDWDtBQUNGO0FBQ0EsSUFBSW1WLDBCQUEwQixTQUFTQSx3QkFBd0J2QixFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRTtJQUNuRixJQUFJbUIsbUJBQW1CekIsc0JBQXNCQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztJQUNqRSxJQUFJb0IsZ0JBQWdCUixtQkFBbUJqQixJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztJQUMzRCxPQUFPbUIsaUJBQWlCcFksS0FBSyxHQUFHcVksY0FBY3JZLEtBQUssR0FBR29ZLG1CQUFtQkM7QUFDM0U7QUFDQSxJQUFJQyxxQkFBcUIsU0FBU0EsbUJBQW1CMUIsRUFBRSxFQUFFQyxFQUFFLEVBQUVHLEVBQUUsRUFBRUMsRUFBRTtJQUNqRSxPQUFPO1FBQ0xqWCxPQUFPNFc7UUFDUDNXLFFBQVE0VztRQUNSOVQsU0FBU3pFLDREQUFZQSxDQUFDMFksTUFBTSxJQUFJQSxNQUFNO1FBQ3RDaFUsU0FBUzFFLDREQUFZQSxDQUFDMlksTUFBTSxJQUFJQSxNQUFNO0lBQ3hDO0FBQ0Y7QUFDQSxJQUFJc0IsbUJBQW1CLFNBQVNBLGlCQUFpQmhNLElBQUksRUFBRXFLLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxFQUFFO0lBQzNFLElBQUkxSyxTQUFTLEtBQUssR0FBRztRQUNuQkEsT0FBTztJQUNUO0lBQ0EsT0FBUUE7UUFDTixLQUFLO1lBQ0gsT0FBT29LLHNCQUFzQkMsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUM7UUFDbkQsS0FBSztZQUNILE9BQU9hLG9CQUFvQmxCLElBQUlDLElBQUlDLElBQUlDLElBQUlDLElBQUlDO1FBQ2pELEtBQUs7WUFDSCxPQUFPWSxtQkFBbUJqQixJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztRQUNoRCxLQUFLO1lBQ0gsT0FBT2tCLHdCQUF3QnZCLElBQUlDLElBQUlDLElBQUlDLElBQUlDLElBQUlDO1FBQ3JEO1lBQ0UsT0FBT3FCLG1CQUFtQjFCLElBQUlDLElBQUlHLElBQUlDO0lBQzFDO0FBQ0Y7QUFFQSxJQUFJdUIsWUFBWSxTQUFTQSxVQUFVM1osR0FBRyxFQUFFQyxJQUFJLEVBQUVrRCxPQUFPO0lBQ25ELElBQUlzRixhQUFhOE8sY0FBY3FDLGNBQWNDO0lBQzdDLElBQUkxVyxZQUFZLEtBQUssR0FBRztRQUN0QkEsVUFBVSxDQUFDO0lBQ2I7SUFDQSxJQUFJOEYsWUFBWWhKLEtBQUt3RyxHQUFHLEVBQ3RCMEMsT0FBT0YsVUFBVUUsSUFBSSxFQUNyQkQsTUFBTUQsVUFBVUMsR0FBRztJQUNyQixJQUFJcEUsVUFBVSxDQUFDMkQsY0FBY3hJLEtBQUt5SSxLQUFLLE1BQU0sUUFBUUQsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVkzRCxPQUFPO0lBQzFHLElBQUlnVixZQUFZLENBQUN2QyxlQUFldFgsS0FBS3lJLEtBQUssTUFBTSxRQUFRNk8saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWF1QyxTQUFTO0lBQ2pILElBQUlDLGtCQUFrQixDQUFDSCxlQUFlM1osS0FBS3lJLEtBQUssTUFBTSxRQUFRa1IsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFHLGVBQWU7SUFDN0gsSUFBSUMsa0JBQWtCLENBQUNILGVBQWU1WixLQUFLeUksS0FBSyxNQUFNLFFBQVFtUixpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUcsZUFBZTtJQUM3SCxJQUFJclIsYUFBYTFJLEtBQUt3RyxHQUFHLENBQUNrQyxVQUFVLElBQUk7SUFDeEMsSUFBSXNSLGVBQWVoYSxLQUFLd0csR0FBRyxDQUFDd1QsWUFBWSxJQUFJO0lBQzVDLElBQUlDLGdCQUFnQmphLEtBQUt3RyxHQUFHLENBQUN5VCxhQUFhLElBQUk7SUFDOUMsSUFBSXRSLGNBQWMzSSxLQUFLd0csR0FBRyxDQUFDbUMsV0FBVyxJQUFJO0lBQzFDLElBQUl1UixhQUFhaFgsUUFBUWdYLFVBQVUsSUFBSSxJQUFJQztJQUMzQyxJQUFJQyxvQkFBb0JYLGlCQUFpQkksV0FBVzdaLEtBQUt3RyxHQUFHLENBQUN0RixLQUFLLEdBQUd5SCxjQUFjcVIsY0FBY2hhLEtBQUt3RyxHQUFHLENBQUNyRixNQUFNLEdBQUd1SCxhQUFhdVIsZUFBZWphLEtBQUtzSSxLQUFLLENBQUNwSCxLQUFLLEVBQUVsQixLQUFLc0ksS0FBSyxDQUFDbkgsTUFBTSxFQUFFMlksaUJBQWlCQyxrQkFDbk03WSxRQUFRa1osa0JBQWtCbFosS0FBSyxFQUMvQkMsU0FBU2laLGtCQUFrQmpaLE1BQU0sRUFDakM4QyxVQUFVbVcsa0JBQWtCblcsT0FBTyxFQUNuQ0MsVUFBVWtXLGtCQUFrQmxXLE9BQU87SUFDckMsSUFBSWxFLEtBQUtzSSxLQUFLLENBQUNDLElBQUksRUFBRTtRQUNuQixJQUFJckgsVUFBVSxLQUFLQyxXQUFXLEdBQUc7WUFDL0IsSUFBSWtaLFdBQVdyYSxLQUFLc0ksS0FBSyxDQUFDZ1MsR0FBRztZQUM3QixJQUFJaFMsUUFBUTRSLFdBQVd4RyxHQUFHLENBQUMyRyxhQUFhdGEsSUFBSXdhLFVBQVUsQ0FBQ3ZhLEtBQUtzSSxLQUFLLENBQUNDLElBQUk7WUFDdEUsSUFBSThSLFVBQVVILFdBQVdNLEdBQUcsQ0FBQ0gsVUFBVS9SO1lBQ3ZDLElBQUltUyxlQUFlbGIscURBQUtBLENBQUNzRixXQUFXLElBQUlBO1lBQ3hDOUUsSUFBSWdGLFdBQVcsQ0FBQzBWLGNBQWNuUyxLQUFLLENBQUNBLE9BQU9ZLE9BQU9QLGNBQWMxRSxTQUFTZ0YsTUFBTVAsYUFBYXhFLFNBQVM7Z0JBQ25HaEQsT0FBT0E7Z0JBQ1BDLFFBQVFBO1lBQ1Y7UUFDRixPQUFPO1lBQ0wwRSxRQUFRK0MsSUFBSSxDQUFDLHFCQUFxQjhSLEtBQUtDLFNBQVMsQ0FBQzNhLEtBQUtHLEtBQUssQ0FBQzRULEdBQUcsSUFBSTtRQUNyRTtJQUNGO0FBQ0Y7QUFDQSxJQUFJMUwsY0FBYyxTQUFTQSxZQUFZdEksR0FBRyxFQUFFQyxJQUFJLEVBQUVrRCxPQUFPO0lBQ3ZEbkQsSUFBSW9GLElBQUk7SUFDUjRELFNBQVNoSixLQUFLQztJQUNkMFosVUFBVTNaLEtBQUtDLE1BQU1rRDtJQUNyQm5ELElBQUkyRixPQUFPO0FBQ2I7QUFFQSxJQUFJa1YsZ0JBQWdCO0FBQ3BCLElBQUlDLGdCQUFnQjtBQUNwQixJQUFJQyxlQUFlO0FBRW5CLDJEQUEyRDtBQUUzRCxJQUFJQyxlQUFlLFNBQVNBLGFBQWFoYixHQUFHLEVBQUVDLElBQUk7SUFDaEQsSUFBSWdKLFlBQVloSixLQUFLd0csR0FBRyxFQUN0QjBDLE9BQU9GLFVBQVVFLElBQUksRUFDckJELE1BQU1ELFVBQVVDLEdBQUcsRUFDbkIvSCxRQUFROEgsVUFBVTlILEtBQUssRUFDdkJDLFNBQVM2SCxVQUFVN0gsTUFBTSxFQUN6QjZaLHdCQUF3QmhTLFVBQVVMLFdBQVcsRUFDN0NBLGNBQWNxUywwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNyREMsdUJBQXVCalMsVUFBVU4sVUFBVSxFQUMzQ0EsYUFBYXVTLHlCQUF5QixLQUFLLElBQUksSUFBSUEsc0JBQ25EQyx3QkFBd0JsUyxVQUFVZ1IsWUFBWSxFQUM5Q0EsZUFBZWtCLDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3REQyx3QkFBd0JuUyxVQUFVaVIsYUFBYSxFQUMvQ0EsZ0JBQWdCa0IsMEJBQTBCLEtBQUssSUFBSSxJQUFJQSx1QkFDdkRDLHdCQUF3QnBTLFVBQVVxUyxlQUFlLEVBQ2pEQSxrQkFBa0JELDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3pERSx3QkFBd0J0UyxVQUFVdVMsY0FBYyxFQUNoREEsaUJBQWlCRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUN4REUsd0JBQXdCeFMsVUFBVXlTLGdCQUFnQixFQUNsREEsbUJBQW1CRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUMxREUsd0JBQXdCMVMsVUFBVTJTLGlCQUFpQixFQUNuREEsb0JBQW9CRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBO0lBQzdEM2IsSUFBSStFLFNBQVMsQ0FBQzhWLGVBQWUvVixPQUFPLENBQUMsS0FBS2tRLElBQUksQ0FBQzdMLE9BQU9QLGNBQWMwUyxpQkFBaUJwUyxNQUFNUCxhQUFhNlMsZ0JBQWdCcmEsUUFBUXlILGNBQWNxUixlQUFleUIsbUJBQW1CSixpQkFBaUJsYSxTQUFTdUgsYUFBYXVSLGdCQUFnQnNCLGlCQUFpQkksbUJBQW1CMU0sSUFBSTtBQUNqUjtBQUNBLElBQUkyTSxlQUFlLFNBQVNBLGFBQWE3YixHQUFHLEVBQUVDLElBQUk7SUFDaEQsSUFBSW9ULGFBQWFwVCxLQUFLd0csR0FBRyxFQUN2QjBDLE9BQU9rSyxXQUFXbEssSUFBSSxFQUN0QkQsTUFBTW1LLFdBQVduSyxHQUFHLEVBQ3BCL0gsUUFBUWtTLFdBQVdsUyxLQUFLLEVBQ3hCQyxTQUFTaVMsV0FBV2pTLE1BQU0sRUFDMUIwYSx3QkFBd0J6SSxXQUFXekssV0FBVyxFQUM5Q0EsY0FBY2tULDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3JEQyx3QkFBd0IxSSxXQUFXMUssVUFBVSxFQUM3Q0EsYUFBYW9ULDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3BEQyx3QkFBd0IzSSxXQUFXNEcsWUFBWSxFQUMvQ0EsZUFBZStCLDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3REQyx3QkFBd0I1SSxXQUFXNkcsYUFBYSxFQUNoREEsZ0JBQWdCK0IsMEJBQTBCLEtBQUssSUFBSSxJQUFJQSx1QkFDdkRDLHdCQUF3QjdJLFdBQVdpSSxlQUFlLEVBQ2xEQSxrQkFBa0JZLDBCQUEwQixLQUFLLElBQUksSUFBSUEsdUJBQ3pEQyx3QkFBd0I5SSxXQUFXbUksY0FBYyxFQUNqREEsaUJBQWlCVywwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUN4REMsd0JBQXdCL0ksV0FBV3FJLGdCQUFnQixFQUNuREEsbUJBQW1CVSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUMxREMsd0JBQXdCaEosV0FBV3VJLGlCQUFpQixFQUNwREEsb0JBQW9CUywwQkFBMEIsS0FBSyxJQUFJLElBQUlBO0lBQzdEcmMsSUFBSStFLFNBQVMsQ0FBQytWLGVBQWVoVyxPQUFPLENBQUM7SUFFckMsY0FBYztJQUNkOUUsSUFBSWdWLElBQUksQ0FBQzdMLE9BQU9QLGNBQWMwUyxpQkFBaUJwUyxNQUFNc1MsZ0JBQWdCcmEsUUFBUThZLGVBQWVyUixjQUFjMFMsa0JBQWtCSSxrQkFBa0IvUyxZQUFZdUcsSUFBSTtJQUU5SixlQUFlO0lBQ2ZsUCxJQUFJZ1YsSUFBSSxDQUFDN0wsT0FBT21TLGlCQUFpQnBTLE1BQU1zUyxnQkFBZ0I1UyxhQUFheEgsU0FBU29hLGlCQUFpQkksbUJBQW1CMU0sSUFBSTtJQUVySCxnQkFBZ0I7SUFDaEJsUCxJQUFJZ1YsSUFBSSxDQUFDN0wsT0FBT2hJLFFBQVE4WSxlQUFleUIsa0JBQWtCeFMsTUFBTXNTLGdCQUFnQnZCLGNBQWM3WSxTQUFTb2EsaUJBQWlCSSxtQkFBbUIxTSxJQUFJO0lBRTlJLGlCQUFpQjtJQUNqQmxQLElBQUlnVixJQUFJLENBQUM3TCxPQUFPUCxjQUFjMFMsaUJBQWlCcFMsTUFBTTlILFNBQVM4WSxnQkFBZ0IwQixtQkFBbUJ6YSxRQUFROFksZUFBZXJSLGNBQWMwUyxrQkFBa0JJLGtCQUFrQnhCLGVBQWVoTCxJQUFJO0FBQy9MO0FBQ0EsSUFBSW9OLFlBQVksU0FBU0EsVUFBVTdWLEdBQUc7SUFDcEMsSUFBSThWLGFBQWE5VixJQUFJOFYsVUFBVSxLQUFLLFNBQVMsSUFBSTlWLElBQUk4VixVQUFVO0lBQy9ELElBQUlDLFlBQVkvVixJQUFJK1YsU0FBUyxLQUFLLFNBQVMsSUFBSS9WLElBQUkrVixTQUFTO0lBQzVELElBQUlDLGNBQWNoVyxJQUFJZ1csV0FBVyxLQUFLLFNBQVMsSUFBSWhXLElBQUlnVyxXQUFXO0lBQ2xFLElBQUlDLGVBQWVqVyxJQUFJaVcsWUFBWSxLQUFLLFNBQVMsSUFBSWpXLElBQUlpVyxZQUFZO0lBQ3JFLE9BQU87UUFDTEgsWUFBWUE7UUFDWkMsV0FBV0E7UUFDWEMsYUFBYUE7UUFDYkMsY0FBY0E7SUFDaEI7QUFDRjtBQUNBLElBQUlDLGNBQWMsU0FBU0EsWUFBWTNjLEdBQUcsRUFBRUMsSUFBSTtJQUM5QyxJQUFJeVcsYUFBYXpXLEtBQUt3RyxHQUFHLEVBQ3ZCMEMsT0FBT3VOLFdBQVd2TixJQUFJLEVBQ3RCRCxNQUFNd04sV0FBV3hOLEdBQUcsRUFDcEIvSCxRQUFRdVYsV0FBV3ZWLEtBQUssRUFDeEJDLFNBQVNzVixXQUFXdFYsTUFBTTtJQUM1QixJQUFJd2IsYUFBYU4sVUFBVXJjLEtBQUt3RyxHQUFHLEdBQ2pDb1csd0JBQXdCRCxXQUFXTCxVQUFVLEVBQzdDQSxhQUFhTSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNwREMsdUJBQXVCRixXQUFXSixTQUFTLEVBQzNDQSxZQUFZTSx5QkFBeUIsS0FBSyxJQUFJLElBQUlBLHNCQUNsREMsd0JBQXdCSCxXQUFXSCxXQUFXLEVBQzlDQSxjQUFjTSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNyREMsd0JBQXdCSixXQUFXRixZQUFZLEVBQy9DQSxlQUFlTSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBO0lBQ3hEaGQsSUFBSStFLFNBQVMsQ0FBQ2dXLGNBQWNqVyxPQUFPLENBQUM7SUFFcEMsYUFBYTtJQUNiOUUsSUFBSWdWLElBQUksQ0FBQzdMLE1BQU1ELE1BQU1zVCxXQUFXcmIsT0FBT3FiLFdBQVd0TixJQUFJO0lBRXRELGNBQWM7SUFDZGxQLElBQUlnVixJQUFJLENBQUM3TCxPQUFPb1QsWUFBWXJULE1BQU1zVCxXQUFXRCxZQUFZbmIsU0FBU29iLFlBQVlFLGNBQWN4TixJQUFJO0lBRWhHLGVBQWU7SUFDZmxQLElBQUlnVixJQUFJLENBQUM3TCxPQUFPaEksT0FBTytILE1BQU1zVCxXQUFXQyxhQUFhcmIsU0FBU29iLFlBQVlFLGNBQWN4TixJQUFJO0lBRTVGLGdCQUFnQjtJQUNoQmxQLElBQUlnVixJQUFJLENBQUM3TCxNQUFNRCxNQUFNOUgsUUFBUUQsT0FBT3ViLGNBQWN4TixJQUFJO0FBQ3hEO0FBQ0EsSUFBSStOLFlBQVksU0FBU0EsVUFBVWpkLEdBQUcsRUFBRUMsSUFBSTtJQUMxQyxJQUFJaWQsYUFBYWpkLEtBQUt3RyxHQUFHLEVBQ3ZCMEMsT0FBTytULFdBQVcvVCxJQUFJLEVBQ3RCRCxNQUFNZ1UsV0FBV2hVLEdBQUcsRUFDcEIvSCxRQUFRK2IsV0FBVy9iLEtBQUssRUFDeEJDLFNBQVM4YixXQUFXOWIsTUFBTTtJQUM1QixJQUFJK2IsY0FBY2IsVUFBVXJjLEtBQUt3RyxHQUFHLEdBQ2xDMlcsd0JBQXdCRCxZQUFZWixVQUFVLEVBQzlDQSxhQUFhYSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNwREMsd0JBQXdCRixZQUFZWCxTQUFTLEVBQzdDQSxZQUFZYSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNuREMsd0JBQXdCSCxZQUFZVixXQUFXLEVBQy9DQSxjQUFjYSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNyREMsd0JBQXdCSixZQUFZVCxZQUFZLEVBQ2hEQSxlQUFlYSwwQkFBMEIsS0FBSyxJQUFJLElBQUlBO0lBQ3hELElBQUlDLGVBQWVqZCxLQUFLa2QsS0FBSyxDQUFDdGMsUUFBUW9iLGFBQWFFO0lBQ25ELElBQUlpQixnQkFBZ0JuZCxLQUFLa2QsS0FBSyxDQUFDcmMsU0FBU29iLFlBQVlFO0lBQ3BEMWMsSUFBSTRFLFFBQVEsQ0FBQyxHQUFHRSxPQUFPLENBQUMsR0FBR0MsU0FBUyxDQUFDLFNBQVM0WSxJQUFJLENBQUNILGVBQWUsUUFBUUUsZUFBZXZVLE9BQU9vVCxZQUFZaGMsS0FBSzhMLEdBQUcsQ0FBQ25ELE1BQU1zVCxZQUFZLEdBQUc7QUFDNUk7QUFDQSxJQUFJb0IsY0FBYyxTQUFTQSxZQUFZNWQsR0FBRyxFQUFFQyxJQUFJO0lBQzlDLElBQUlBLEtBQUt1SyxNQUFNLEVBQUU7UUFDZnhLLElBQUk2ZCxNQUFNLENBQUM1ZCxLQUFLdUssTUFBTSxDQUFDckIsSUFBSSxFQUFFbEosS0FBS3VLLE1BQU0sQ0FBQ3RCLEdBQUcsRUFBRSxHQUFHZ0csSUFBSSxDQUFDLE9BQU8yTyxNQUFNLENBQUM1ZCxLQUFLdUssTUFBTSxDQUFDckIsSUFBSSxFQUFFbEosS0FBS3VLLE1BQU0sQ0FBQ3RCLEdBQUcsRUFBRSxHQUFHK0UsTUFBTSxDQUFDO0lBQ25IO0FBQ0Y7QUFDQSxJQUFJNlAsY0FBYyxTQUFTQSxZQUFZOWQsR0FBRyxFQUFFQyxJQUFJO0lBQzlDLElBQUlDO0lBQ0osSUFBSSxDQUFFLEVBQUNBLGNBQWNELEtBQUtHLEtBQUssTUFBTSxRQUFRRixnQkFBZ0IsS0FBSyxLQUFLQSxZQUFZNmQsS0FBSyxHQUFHO0lBQzNGL2QsSUFBSW9GLElBQUk7SUFDUjRWLGFBQWFoYixLQUFLQztJQUNsQjRiLGFBQWE3YixLQUFLQztJQUNsQjBjLFlBQVkzYyxLQUFLQztJQUNqQmdkLFVBQVVqZCxLQUFLQztJQUNmMmQsWUFBWTVkLEtBQUtDO0lBQ2pCRCxJQUFJMkYsT0FBTztBQUNiO0FBRUEsSUFBSXFZLG1CQUFtQjtJQUFDO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFTO0lBQVU7SUFBVTtJQUFVO0lBQVU7SUFBVTtJQUFXO0lBQVc7SUFBVztJQUFXO0lBQVc7SUFBWTtJQUFZO0lBQWE7SUFBYTtJQUFhO0lBQWM7SUFBZTtJQUFlO0lBQWU7SUFBaUI7SUFBaUI7SUFBaUI7SUFBb0I7SUFBa0I7Q0FBaUI7QUFDOWEsSUFBSUMsVUFBVSxTQUFTQSxRQUFRamUsR0FBRztJQUNoQyxJQUFJa0ksSUFBSThWLGlCQUFpQkUsTUFBTSxDQUFDLFNBQVVDLEdBQUcsRUFBRUMsSUFBSTtRQUNqRCxJQUFJQztRQUNKLE9BQU92ZSwyREFBUUEsQ0FBQyxDQUFDLEdBQUdxZSxLQUFNRSxDQUFBQSxZQUFZLENBQUMsR0FBR0EsU0FBUyxDQUFDRCxLQUFLLEdBQUc7WUFDMURwZSxHQUFHLENBQUNvZSxLQUFLLENBQUNqVCxLQUFLLENBQUNuTCxLQUFLc2U7WUFDckIsT0FBT3BXO1FBQ1QsR0FBR21XLFNBQVE7SUFDYixHQUFHLENBQUM7SUFDSixPQUFPblc7QUFDVDtBQUNBLElBQUlxVyxlQUFlLFNBQVNBLGFBQWF2ZSxHQUFHLEVBQUVDLElBQUk7SUFDaEQsSUFBSWdKLFlBQVloSixLQUFLd0csR0FBRyxFQUN0QnlDLE1BQU1ELFVBQVVDLEdBQUcsRUFDbkJDLE9BQU9GLFVBQVVFLElBQUksRUFDckJoSSxRQUFROEgsVUFBVTlILEtBQUssRUFDdkJDLFNBQVM2SCxVQUFVN0gsTUFBTTtJQUMzQixJQUFJdUgsYUFBYTFJLEtBQUt3RyxHQUFHLENBQUNrQyxVQUFVLElBQUk7SUFDeEMsSUFBSUMsY0FBYzNJLEtBQUt3RyxHQUFHLENBQUNtQyxXQUFXLElBQUk7SUFDMUMsSUFBSXFSLGVBQWVoYSxLQUFLd0csR0FBRyxDQUFDd1QsWUFBWSxJQUFJO0lBQzVDLElBQUlDLGdCQUFnQmphLEtBQUt3RyxHQUFHLENBQUN5VCxhQUFhLElBQUk7SUFDOUMsSUFBSXNFLGlCQUFpQnJkLFFBQVF5SCxjQUFjcVI7SUFDM0MsSUFBSXdFLGtCQUFrQnJkLFNBQVN1SCxhQUFhdVI7SUFDNUMsSUFBSSxDQUFDc0Usa0JBQWtCLENBQUNDLGlCQUFpQjtRQUN2QzNZLFFBQVErQyxJQUFJLENBQUM7SUFDZjtJQUNBN0ksSUFBSW9GLElBQUksR0FBR0MsU0FBUyxDQUFDOEQsT0FBT1AsYUFBYU0sTUFBTVA7SUFDL0MsSUFBSTFJLEtBQUtHLEtBQUssQ0FBQ3NlLEtBQUssRUFBRTtRQUNwQnplLEtBQUtHLEtBQUssQ0FBQ3NlLEtBQUssQ0FBQ1QsUUFBUWplLE1BQU13ZSxnQkFBZ0JDO0lBQ2pEO0lBQ0F6ZSxJQUFJMkYsT0FBTztBQUNiO0FBRUEsd0RBQXdEO0FBRXhELHFGQUFxRjtBQUNyRixJQUFJZ1osUUFBUSxNQUFPLEVBQUNwZSxLQUFLQyxJQUFJLENBQUMsS0FBSyxHQUFFLElBQUssR0FBRTtBQUM1QyxJQUFJb2UsZ0JBQWdCLFNBQVNBLGNBQWM1ZSxHQUFHLEVBQUU2ZSxNQUFNLEVBQUVuVyxLQUFLLEVBQUVrQixHQUFHLEVBQUVPLEdBQUc7SUFDckUsSUFBSWpCLE1BQU0yVixPQUFPM1YsR0FBRyxFQUNsQkMsT0FBTzBWLE9BQU8xVixJQUFJLEVBQ2xCaEksUUFBUTBkLE9BQU8xZCxLQUFLLEVBQ3BCQyxTQUFTeWQsT0FBT3pkLE1BQU07SUFDeEIsSUFBSW9hLGlCQUFpQjlTLE1BQU04UyxjQUFjLEVBQ3ZDRSxtQkFBbUJoVCxNQUFNZ1QsZ0JBQWdCLEVBQ3pDSixrQkFBa0I1UyxNQUFNNFMsZUFBZTtJQUV6Qyw2QkFBNkI7SUFDN0J0YixJQUFJdUIsTUFBTSxDQUFDNEgsT0FBT2dCLEtBQUtqQjtJQUN2QmxKLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksUUFBUXlJLEtBQUtWO0lBRS9CLDJDQUEyQztJQUMzQyxJQUFJNFYsS0FBS2xWLE1BQU8sT0FBTStVLEtBQUk7SUFFMUIsMkJBQTJCO0lBQzNCM2UsSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU9oSSxRQUFRMmQsSUFBSTVWLEtBQUtDLE9BQU9oSSxPQUFPK0gsTUFBTTRWLElBQUkzVixPQUFPaEksT0FBTytILE1BQU1VO0lBRXRGLG1EQUFtRDtJQUNuRCxJQUFJbVYsaUJBQWlCN1YsTUFBTTNJLEtBQUs4TCxHQUFHLENBQUNtUCxnQkFBZ0I1UjtJQUNwRDVKLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTzRkO0lBRXpCLDJCQUEyQjtJQUMzQi9lLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksUUFBUXVhLGtCQUFrQnFEO0lBRTVDLDJDQUEyQztJQUMzQyxJQUFJQyx1QkFBdUJ6ZSxLQUFLOEwsR0FBRyxDQUFDekMsTUFBTThSLGtCQUFrQjtJQUM1RCxJQUFJdUQsdUJBQXVCMWUsS0FBSzhMLEdBQUcsQ0FBQ3pDLE1BQU00UixnQkFBZ0I7SUFDMUQsSUFBSTBELEtBQUtGLHVCQUF3QixPQUFNTCxLQUFJO0lBQzNDLElBQUlRLEtBQUtGLHVCQUF3QixPQUFNTixLQUFJO0lBRTNDLDJCQUEyQjtJQUMzQjNlLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUXVhLGtCQUFrQnhTLE1BQU1zUyxpQkFBaUIyRCxJQUFJaFcsT0FBT2hJLFFBQVF1YSxtQkFBbUJ3RCxJQUFJaFcsTUFBTXNTLGdCQUFnQnJTLE9BQU9oSSxRQUFRdWEsbUJBQW1Cc0Qsc0JBQXNCOVYsTUFBTXNTO0lBRXhNLDZCQUE2QjtJQUM3QnhiLElBQUl3QixNQUFNLENBQUMySCxPQUFPNUksS0FBSzhMLEdBQUcsQ0FBQ2xDLEtBQUttUixrQkFBa0JwUyxNQUFNc1M7SUFFeEQsMENBQTBDO0lBQzFDLElBQUk0RCxzQkFBc0I3ZSxLQUFLOEwsR0FBRyxDQUFDbEMsTUFBTW1SLGlCQUFpQjtJQUMxRCxJQUFJK0Qsc0JBQXNCOWUsS0FBSzhMLEdBQUcsQ0FBQ2xDLE1BQU1xUixnQkFBZ0I7SUFDekQsSUFBSThELEtBQUtGLHNCQUF1QixPQUFNVCxLQUFJO0lBQzFDLElBQUlZLEtBQUtGLHNCQUF1QixPQUFNVixLQUFJO0lBQzFDLElBQUlhLGdCQUFnQnRXLE1BQU0zSSxLQUFLOEwsR0FBRyxDQUFDbVAsZ0JBQWdCclI7SUFFbkQsMEJBQTBCO0lBQzFCbkssSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU9tUyxrQkFBa0JnRSxJQUFJcFcsTUFBTXNTLGdCQUFnQnJTLE9BQU9tUyxpQkFBaUJwUyxNQUFNc1MsaUJBQWlCK0QsSUFBSXBXLE9BQU9tUyxpQkFBaUJrRTtJQUNoSnhmLElBQUl3QixNQUFNLENBQUMySCxNQUFNcVc7SUFFakIsbURBQW1EO0lBQ25EeGYsSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1ELE1BQU1pQjtJQUV2QiwwQ0FBMEM7SUFDMUMsSUFBSXNWLEtBQUt0VixNQUFPLE9BQU13VSxLQUFJO0lBRTFCLDBCQUEwQjtJQUMxQjNlLElBQUl5QixhQUFhLENBQUMwSCxNQUFNRCxNQUFNdVcsSUFBSXRXLE9BQU9zVyxJQUFJdlcsS0FBS0MsT0FBT2dCLEtBQUtqQjtJQUM5RGxKLElBQUkwQixTQUFTO0lBQ2IxQixJQUFJcUssSUFBSTtJQUVSLDRCQUE0QjtJQUM1QixJQUFJcVIsa0JBQWtCO1FBQ3BCLElBQUlnRSxVQUFVLENBQUNsRSxpQkFBaUJFO1FBQ2hDMWIsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxRQUFRLEdBQUd1ZSxVQUFXLEVBQUN2ZSxRQUFRLEtBQUsrSDtRQUN0RGxKLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytIO1FBQ3pCbEosSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1EO1FBQ2pCbEosSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1ELE1BQU05SDtRQUN2QnBCLElBQUkwQixTQUFTO1FBQ2IxQixJQUFJcUssSUFBSTtJQUNWO0lBQ0EsSUFBSWlSLGlCQUFpQjtRQUNuQixJQUFJcUUsV0FBVyxDQUFDbkUsaUJBQWlCRjtRQUNqQ3RiLElBQUl1QixNQUFNLENBQUM0SCxPQUFPaEksUUFBUSxHQUFHd2UsV0FBWSxFQUFDeGUsUUFBUSxLQUFLK0g7UUFDdkRsSixJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQ7UUFDakJsSixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLE9BQU8rSDtRQUN6QmxKLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytILE1BQU05SDtRQUMvQnBCLElBQUkwQixTQUFTO1FBQ2IxQixJQUFJcUssSUFBSTtJQUNWO0FBQ0Y7QUFDQSxJQUFJdVYsZ0JBQWdCLFNBQVNBLGNBQWM1ZixHQUFHLEVBQUU2ZSxNQUFNLEVBQUVuVyxLQUFLLEVBQUVrQixHQUFHLEVBQUVPLEdBQUc7SUFDckUsSUFBSWpCLE1BQU0yVixPQUFPM1YsR0FBRyxFQUNsQkMsT0FBTzBWLE9BQU8xVixJQUFJLEVBQ2xCaEksUUFBUTBkLE9BQU8xZCxLQUFLO0lBQ3RCLElBQUkwZSxpQkFBaUJuWCxNQUFNbVgsY0FBYyxFQUN2Q3JFLGlCQUFpQjlTLE1BQU04UyxjQUFjLEVBQ3JDc0UsaUJBQWlCcFgsTUFBTW9YLGNBQWMsRUFDckNwRSxtQkFBbUJoVCxNQUFNZ1QsZ0JBQWdCLEVBQ3pDSixrQkFBa0I1UyxNQUFNNFMsZUFBZTtJQUN6QyxJQUFJd0QsS0FBSzNVLE1BQU8sT0FBTXdVLEtBQUk7SUFDMUIsSUFBSU8sS0FBS3RWLE1BQU8sT0FBTStVLEtBQUk7SUFDMUIzZSxJQUFJdUIsTUFBTSxDQUFDNEgsTUFBTUQsTUFBTTNJLEtBQUs4TCxHQUFHLENBQUNsQyxLQUFLcVI7SUFDckN4YixJQUFJeUIsYUFBYSxDQUFDMEgsTUFBTUQsTUFBTTRWLElBQUkzVixPQUFPMlYsSUFBSTVWLEtBQUtDLE9BQU9nQixLQUFLakI7SUFDOURsSixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLFFBQVF5SSxLQUFLVjtJQUMvQmxKLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUStkLElBQUloVyxLQUFLQyxPQUFPaEksT0FBTytILE1BQU1nVyxJQUFJL1YsT0FBT2hJLE9BQU8rSCxNQUFNVTtJQUN0RjVKLElBQUlnTyxXQUFXLENBQUM2UjtJQUNoQjdmLElBQUk2TixTQUFTLENBQUN0TixLQUFLOEwsR0FBRyxDQUFDcVAsa0JBQWtCRixnQkFBZ0JGLG1CQUFtQjtJQUM1RSxJQUFJd0UsbUJBQW1CLFVBQVU7UUFDL0I5ZixJQUFJOE8sSUFBSSxDQUFDME0saUJBQWlCLEdBQUc7WUFDM0IvRyxPQUFPK0csaUJBQWlCO1FBQzFCO0lBQ0YsT0FBTyxJQUFJc0UsbUJBQW1CLFVBQVU7UUFDdEM5ZixJQUFJOE8sSUFBSSxDQUFDME0sZ0JBQWdCO1lBQ3ZCL0csT0FBTytHLGlCQUFpQjtRQUMxQjtJQUNGO0lBQ0F4YixJQUFJaU8sTUFBTTtJQUNWak8sSUFBSStmLE1BQU07QUFDWjtBQUNBLElBQUlDLGtCQUFrQixTQUFTQSxnQkFBZ0JoZ0IsR0FBRyxFQUFFNmUsTUFBTSxFQUFFblcsS0FBSyxFQUFFa0IsR0FBRyxFQUFFRyxHQUFHO0lBQ3pFLElBQUliLE1BQU0yVixPQUFPM1YsR0FBRyxFQUNsQkMsT0FBTzBWLE9BQU8xVixJQUFJLEVBQ2xCaEksUUFBUTBkLE9BQU8xZCxLQUFLLEVBQ3BCQyxTQUFTeWQsT0FBT3pkLE1BQU07SUFDeEIsSUFBSW9hLGlCQUFpQjlTLE1BQU04UyxjQUFjLEVBQ3ZDRSxtQkFBbUJoVCxNQUFNZ1QsZ0JBQWdCLEVBQ3pDRSxvQkFBb0JsVCxNQUFNa1QsaUJBQWlCO0lBRTdDLCtCQUErQjtJQUMvQjViLElBQUl1QixNQUFNLENBQUM0SCxPQUFPaEksT0FBTytILE1BQU1VO0lBQy9CNUosSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9oSSxPQUFPK0gsTUFBTTlILFNBQVMySTtJQUV4Qyw4Q0FBOEM7SUFDOUMsSUFBSStVLEtBQUsvVSxNQUFPLE9BQU00VSxLQUFJO0lBRTFCLDJCQUEyQjtJQUMzQjNlLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksT0FBTytILE1BQU05SCxTQUFTMGQsSUFBSTNWLE9BQU9oSSxRQUFRMmQsSUFBSTVWLE1BQU05SCxRQUFRK0gsT0FBT2hJLFFBQVE0SSxLQUFLYixNQUFNOUg7SUFFOUcsbURBQW1EO0lBQ25ELElBQUk2ZSxrQkFBa0I5VyxPQUFPaEksUUFBUVosS0FBSzhMLEdBQUcsQ0FBQ3FQLGtCQUFrQjNSO0lBQ2hFL0osSUFBSXdCLE1BQU0sQ0FBQ3llLGlCQUFpQi9XLE1BQU05SDtJQUVsQyw4QkFBOEI7SUFDOUJwQixJQUFJd0IsTUFBTSxDQUFDeWUsaUJBQWlCL1csTUFBTTlILFNBQVN3YTtJQUUzQyw4Q0FBOEM7SUFDOUMsSUFBSXNFLDBCQUEwQjNmLEtBQUs4TCxHQUFHLENBQUN0QyxNQUFNMlIsa0JBQWtCO0lBQy9ELElBQUl5RSwwQkFBMEI1ZixLQUFLOEwsR0FBRyxDQUFDdEMsTUFBTTZSLG1CQUFtQjtJQUNoRSxJQUFJc0QsS0FBS2dCLDBCQUEyQixPQUFNdkIsS0FBSTtJQUM5QyxJQUFJUSxLQUFLZ0IsMEJBQTJCLE9BQU14QixLQUFJO0lBRTlDLDJCQUEyQjtJQUMzQjNlLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUXVhLG1CQUFtQndELElBQUloVyxNQUFNOUgsU0FBU3dhLG1CQUFtQnpTLE9BQU9oSSxRQUFRdWEsa0JBQWtCeFMsTUFBTTlILFNBQVN3YSxvQkFBb0J1RCxJQUFJaFcsT0FBT2hJLFFBQVF1YSxrQkFBa0J4UyxNQUFNOUgsU0FBU2IsS0FBSzhMLEdBQUcsQ0FBQ3RDLEtBQUs2UjtJQUVoTywrQkFBK0I7SUFDL0I1YixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLFFBQVF1YSxrQkFBa0J4UyxNQUFNM0ksS0FBSzhMLEdBQUcsQ0FBQ3pDLEtBQUs0UjtJQUVoRSwyQ0FBMkM7SUFDM0MsSUFBSXdELHVCQUF1QnplLEtBQUs4TCxHQUFHLENBQUN6QyxNQUFNOFIsa0JBQWtCO0lBQzVELElBQUl1RCx1QkFBdUIxZSxLQUFLOEwsR0FBRyxDQUFDekMsTUFBTTRSLGdCQUFnQjtJQUMxRCxJQUFJOEQsS0FBS04sdUJBQXdCLE9BQU1MLEtBQUk7SUFDM0MsSUFBSVksS0FBS04sdUJBQXdCLE9BQU1OLEtBQUk7SUFDM0MsSUFBSXlCLGlCQUFpQmpYLE9BQU9oSSxRQUFRWixLQUFLOEwsR0FBRyxDQUFDekMsS0FBSzhSO0lBRWxELDBCQUEwQjtJQUMxQjFiLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUXVhLGtCQUFrQnhTLE1BQU1zUyxpQkFBaUIrRCxJQUFJcFcsT0FBT2hJLFFBQVF1YSxtQkFBbUI0RCxJQUFJcFcsTUFBTXNTLGdCQUFnQjRFLGdCQUFnQmxYLE1BQU1zUztJQUNoS3hiLElBQUl3QixNQUFNLENBQUM0ZSxnQkFBZ0JsWDtJQUUzQixvREFBb0Q7SUFDcERsSixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLFFBQVF5SSxLQUFLVjtJQUUvQiwyQ0FBMkM7SUFDM0MsSUFBSXVXLEtBQUs3VixNQUFPLE9BQU0rVSxLQUFJO0lBRTFCLDJCQUEyQjtJQUMzQjNlLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksUUFBUXNlLElBQUl2VyxLQUFLQyxPQUFPaEksT0FBTytILE1BQU11VyxJQUFJdFcsT0FBT2hJLE9BQU8rSCxNQUFNVTtJQUN0RjVKLElBQUkwQixTQUFTO0lBQ2IxQixJQUFJcUssSUFBSTtJQUVSLDhCQUE4QjtJQUM5QixJQUFJbVIsZ0JBQWdCO1FBQ2xCLElBQUlrRSxVQUFVLENBQUNsRSxpQkFBaUJFO1FBQ2hDMWIsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxRQUFRLEdBQUd1ZSxVQUFXLEVBQUN2ZSxRQUFRLEtBQUsrSDtRQUN0RGxKLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytIO1FBQ3pCbEosSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9oSSxPQUFPK0gsTUFBTTlIO1FBQy9CcEIsSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1ELE1BQU05SDtRQUN2QnBCLElBQUkwQixTQUFTO1FBQ2IxQixJQUFJcUssSUFBSTtJQUNWO0lBQ0EsSUFBSXVSLG1CQUFtQjtRQUNyQixJQUFJeUUsVUFBVXpFLG9CQUFvQkY7UUFDbEMxYixJQUFJdUIsTUFBTSxDQUFDNEgsT0FBT2hJLFFBQVEsR0FBR2tmLFVBQVcsRUFBQ2xmLFFBQVEsS0FBSytILE1BQU05SDtRQUM1RHBCLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytILE1BQU05SDtRQUMvQnBCLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytIO1FBQ3pCbEosSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1EO1FBQ2pCbEosSUFBSTBCLFNBQVM7UUFDYjFCLElBQUlxSyxJQUFJO0lBQ1Y7QUFDRjtBQUNBLElBQUlpVyxrQkFBa0IsU0FBU0EsZ0JBQWdCdGdCLEdBQUcsRUFBRTZlLE1BQU0sRUFBRW5XLEtBQUssRUFBRWtCLEdBQUcsRUFBRUcsR0FBRztJQUN6RSxJQUFJYixNQUFNMlYsT0FBTzNWLEdBQUcsRUFDbEJDLE9BQU8wVixPQUFPMVYsSUFBSSxFQUNsQmhJLFFBQVEwZCxPQUFPMWQsS0FBSyxFQUNwQkMsU0FBU3lkLE9BQU96ZCxNQUFNO0lBQ3hCLElBQUltZixtQkFBbUI3WCxNQUFNNlgsZ0JBQWdCLEVBQzNDQyxtQkFBbUI5WCxNQUFNOFgsZ0JBQWdCLEVBQ3pDOUUsbUJBQW1CaFQsTUFBTWdULGdCQUFnQixFQUN6Q0YsaUJBQWlCOVMsTUFBTThTLGNBQWMsRUFDckNJLG9CQUFvQmxULE1BQU1rVCxpQkFBaUI7SUFDN0MsSUFBSWtELEtBQUsvVSxNQUFPLE9BQU00VSxLQUFJO0lBQzFCLElBQUlPLEtBQUt0VixNQUFPLE9BQU0rVSxLQUFJO0lBQzFCM2UsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxRQUFReUksS0FBS1Y7SUFDL0JsSixJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT2hJLFFBQVErZCxJQUFJaFcsS0FBS0MsT0FBT2hJLE9BQU8rSCxNQUFNZ1csSUFBSS9WLE9BQU9oSSxPQUFPK0gsTUFBTVU7SUFDdEY1SixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLE9BQU8rSCxNQUFNOUgsU0FBUzJJO0lBQ3hDL0osSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU9oSSxPQUFPK0gsTUFBTTlILFNBQVMwZCxJQUFJM1YsT0FBT2hJLFFBQVEyZCxJQUFJNVYsTUFBTTlILFFBQVErSCxPQUFPaEksUUFBUTRJLEtBQUtiLE1BQU05SDtJQUM5R3BCLElBQUlnTyxXQUFXLENBQUN1UztJQUNoQnZnQixJQUFJNk4sU0FBUyxDQUFDdE4sS0FBSzhMLEdBQUcsQ0FBQ3FQLGtCQUFrQkYsZ0JBQWdCSSxxQkFBcUI7SUFDOUUsSUFBSTRFLHFCQUFxQixVQUFVO1FBQ2pDeGdCLElBQUk4TyxJQUFJLENBQUM0TSxtQkFBbUIsR0FBRztZQUM3QmpILE9BQU9pSCxtQkFBbUI7UUFDNUI7SUFDRixPQUFPLElBQUk4RSxxQkFBcUIsVUFBVTtRQUN4Q3hnQixJQUFJOE8sSUFBSSxDQUFDNE0sa0JBQWtCO1lBQ3pCakgsT0FBT2lILG1CQUFtQjtRQUM1QjtJQUNGO0lBQ0ExYixJQUFJaU8sTUFBTTtJQUNWak8sSUFBSStmLE1BQU07QUFDWjtBQUNBLElBQUlVLG1CQUFtQixTQUFTQSxpQkFBaUJ6Z0IsR0FBRyxFQUFFNmUsTUFBTSxFQUFFblcsS0FBSyxFQUFFdUIsR0FBRyxFQUFFRixHQUFHO0lBQzNFLElBQUliLE1BQU0yVixPQUFPM1YsR0FBRyxFQUNsQkMsT0FBTzBWLE9BQU8xVixJQUFJLEVBQ2xCaEksUUFBUTBkLE9BQU8xZCxLQUFLLEVBQ3BCQyxTQUFTeWQsT0FBT3pkLE1BQU07SUFDeEIsSUFBSXdhLG9CQUFvQmxULE1BQU1rVCxpQkFBaUIsRUFDN0NGLG1CQUFtQmhULE1BQU1nVCxnQkFBZ0IsRUFDekNKLGtCQUFrQjVTLE1BQU00UyxlQUFlO0lBRXpDLDZCQUE2QjtJQUM3QnRiLElBQUl1QixNQUFNLENBQUM0SCxPQUFPaEksUUFBUTRJLEtBQUtiLE1BQU05SDtJQUNyQ3BCLElBQUl3QixNQUFNLENBQUMySCxPQUFPYyxLQUFLZixNQUFNOUg7SUFFN0IsMkNBQTJDO0lBQzNDLElBQUkwZCxLQUFLN1UsTUFBTyxPQUFNMFUsS0FBSTtJQUUxQiwyQkFBMkI7SUFDM0IzZSxJQUFJeUIsYUFBYSxDQUFDMEgsT0FBTzJWLElBQUk1VixNQUFNOUgsUUFBUStILE1BQU1ELE1BQU05SCxTQUFTMGQsSUFBSTNWLE1BQU1ELE1BQU05SCxTQUFTNkk7SUFFekYsaURBQWlEO0lBQ2pELElBQUl5VyxtQkFBbUJ4WCxNQUFNOUgsU0FBU2IsS0FBSzhMLEdBQUcsQ0FBQ3VQLG1CQUFtQjNSO0lBQ2xFakssSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU11WDtJQUVqQiw2QkFBNkI7SUFDN0IxZ0IsSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9tUyxpQkFBaUJvRjtJQUVuQywyQ0FBMkM7SUFDM0MsSUFBSUMseUJBQXlCcGdCLEtBQUs4TCxHQUFHLENBQUNwQyxNQUFNcVIsaUJBQWlCO0lBQzdELElBQUlzRix5QkFBeUJyZ0IsS0FBSzhMLEdBQUcsQ0FBQ3BDLE1BQU0yUixtQkFBbUI7SUFDL0QsSUFBSXNELEtBQUt5Qix5QkFBMEIsT0FBTWhDLEtBQUk7SUFDN0MsSUFBSVEsS0FBS3lCLHlCQUEwQixPQUFNakMsS0FBSTtJQUU3Qyw2QkFBNkI7SUFDN0IzZSxJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT21TLGlCQUFpQnBTLE1BQU05SCxTQUFTd2Esb0JBQW9CdUQsSUFBSWhXLE9BQU9tUyxrQkFBa0I0RCxJQUFJaFcsTUFBTTlILFNBQVN3YSxtQkFBbUJ6UyxPQUFPbVMsa0JBQWtCcUYsd0JBQXdCelgsTUFBTTlILFNBQVN3YTtJQUVoTixnQ0FBZ0M7SUFDaEM1YixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLFFBQVFaLEtBQUs4TCxHQUFHLENBQUN0QyxLQUFLMlIsbUJBQW1CeFMsTUFBTTlILFNBQVN3YTtJQUUxRSwwQ0FBMEM7SUFDMUMsSUFBSXNFLDBCQUEwQjNmLEtBQUs4TCxHQUFHLENBQUN0QyxNQUFNMlIsa0JBQWtCO0lBQy9ELElBQUl5RSwwQkFBMEI1ZixLQUFLOEwsR0FBRyxDQUFDdEMsTUFBTTZSLG1CQUFtQjtJQUNoRSxJQUFJMEQsS0FBS1ksMEJBQTJCLE9BQU12QixLQUFJO0lBQzlDLElBQUlZLEtBQUtZLDBCQUEyQixPQUFNeEIsS0FBSTtJQUM5QyxJQUFJa0Msb0JBQW9CM1gsTUFBTTlILFNBQVNiLEtBQUs4TCxHQUFHLENBQUN1UCxtQkFBbUI3UjtJQUVuRSwwQkFBMEI7SUFDMUIvSixJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT2hJLFFBQVF1YSxtQkFBbUI0RCxJQUFJcFcsTUFBTTlILFNBQVN3YSxtQkFBbUJ6UyxPQUFPaEksUUFBUXVhLGtCQUFrQnhTLE1BQU05SCxTQUFTd2Esb0JBQW9CMkQsSUFBSXBXLE9BQU9oSSxRQUFRdWEsa0JBQWtCbUY7SUFDbk03Z0IsSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9oSSxPQUFPMGY7SUFFekIsbURBQW1EO0lBQ25EN2dCLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytILE1BQU05SCxTQUFTMkk7SUFFeEMsMENBQTBDO0lBQzFDLElBQUkwVixLQUFLMVYsTUFBTyxPQUFNNFUsS0FBSTtJQUUxQiwwQkFBMEI7SUFDMUIzZSxJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT2hJLE9BQU8rSCxNQUFNOUgsU0FBU3FlLElBQUl0VyxPQUFPaEksUUFBUXNlLElBQUl2VyxNQUFNOUgsUUFBUStILE9BQU9oSSxRQUFRNEksS0FBS2IsTUFBTTlIO0lBQzlHcEIsSUFBSTBCLFNBQVM7SUFDYjFCLElBQUlxSyxJQUFJO0lBRVIsK0JBQStCO0lBQy9CLElBQUlxUixrQkFBa0I7UUFDcEIsSUFBSTJFLFVBQVV6RSxvQkFBb0JGO1FBQ2xDMWIsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxRQUFRLEdBQUdrZixVQUFXLEVBQUNsZixRQUFRLEtBQUsrSCxNQUFNOUg7UUFDNURwQixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2hJLE9BQU8rSCxNQUFNOUg7UUFDL0JwQixJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQsTUFBTTlIO1FBQ3ZCcEIsSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1EO1FBQ2pCbEosSUFBSTBCLFNBQVM7UUFDYjFCLElBQUlxSyxJQUFJO0lBQ1Y7SUFDQSxJQUFJaVIsaUJBQWlCO1FBQ25CLElBQUlvRSxVQUFVLENBQUM5RCxvQkFBb0JOO1FBQ25DdGIsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxRQUFRLEdBQUd1ZSxVQUFXdmUsQ0FBQUEsUUFBUSxLQUFLK0gsTUFBTTlIO1FBQzNEcEIsSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1ELE1BQU05SDtRQUN2QnBCLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytILE1BQU05SDtRQUMvQnBCLElBQUl3QixNQUFNLENBQUMySCxPQUFPaEksT0FBTytIO1FBQ3pCbEosSUFBSTBCLFNBQVM7UUFDYjFCLElBQUlxSyxJQUFJO0lBQ1Y7QUFDRjtBQUNBLElBQUl5VyxtQkFBbUIsU0FBU0EsaUJBQWlCOWdCLEdBQUcsRUFBRTZlLE1BQU0sRUFBRW5XLEtBQUssRUFBRXVCLEdBQUcsRUFBRUYsR0FBRztJQUMzRSxJQUFJYixNQUFNMlYsT0FBTzNWLEdBQUcsRUFDbEJDLE9BQU8wVixPQUFPMVYsSUFBSSxFQUNsQmhJLFFBQVEwZCxPQUFPMWQsS0FBSyxFQUNwQkMsU0FBU3lkLE9BQU96ZCxNQUFNO0lBQ3hCLElBQUkyZixvQkFBb0JyWSxNQUFNcVksaUJBQWlCLEVBQzdDQyxvQkFBb0J0WSxNQUFNc1ksaUJBQWlCLEVBQzNDcEYsb0JBQW9CbFQsTUFBTWtULGlCQUFpQixFQUMzQ0YsbUJBQW1CaFQsTUFBTWdULGdCQUFnQixFQUN6Q0osa0JBQWtCNVMsTUFBTTRTLGVBQWU7SUFDekMsSUFBSXdELEtBQUs3VSxNQUFPLE9BQU0wVSxLQUFJO0lBQzFCLElBQUlPLEtBQUtuVixNQUFPLE9BQU00VSxLQUFJO0lBQzFCM2UsSUFBSXVCLE1BQU0sQ0FBQzRILE9BQU9oSSxPQUFPK0gsTUFBTTlILFNBQVMySTtJQUN4Qy9KLElBQUl5QixhQUFhLENBQUMwSCxPQUFPaEksT0FBTytILE1BQU05SCxTQUFTOGQsSUFBSS9WLE9BQU9oSSxRQUFRK2QsSUFBSWhXLE1BQU05SCxRQUFRK0gsT0FBT2hJLFFBQVE0SSxLQUFLYixNQUFNOUg7SUFDOUdwQixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2MsS0FBS2YsTUFBTTlIO0lBQzdCcEIsSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU8yVixJQUFJNVYsTUFBTTlILFFBQVErSCxNQUFNRCxNQUFNOUgsU0FBUzBkLElBQUkzVixNQUFNRCxNQUFNOUgsU0FBUzZJO0lBQ3pGakssSUFBSWdPLFdBQVcsQ0FBQytTO0lBQ2hCL2dCLElBQUk2TixTQUFTLENBQUN0TixLQUFLOEwsR0FBRyxDQUFDdVAsbUJBQW1CRixrQkFBa0JKLG1CQUFtQjtJQUMvRSxJQUFJMEYsc0JBQXNCLFVBQVU7UUFDbENoaEIsSUFBSThPLElBQUksQ0FBQzhNLG9CQUFvQixHQUFHO1lBQzlCbkgsT0FBT21ILG9CQUFvQjtRQUM3QjtJQUNGLE9BQU8sSUFBSW9GLHNCQUFzQixVQUFVO1FBQ3pDaGhCLElBQUk4TyxJQUFJLENBQUM4TSxtQkFBbUI7WUFDMUJuSCxPQUFPbUgsb0JBQW9CO1FBQzdCO0lBQ0Y7SUFDQTViLElBQUlpTyxNQUFNO0lBQ1ZqTyxJQUFJK2YsTUFBTTtBQUNaO0FBQ0EsSUFBSWtCLGlCQUFpQixTQUFTQSxlQUFlamhCLEdBQUcsRUFBRTZlLE1BQU0sRUFBRW5XLEtBQUssRUFBRXVCLEdBQUcsRUFBRUUsR0FBRztJQUN2RSxJQUFJakIsTUFBTTJWLE9BQU8zVixHQUFHLEVBQ2xCQyxPQUFPMFYsT0FBTzFWLElBQUksRUFDbEJoSSxRQUFRMGQsT0FBTzFkLEtBQUssRUFDcEJDLFNBQVN5ZCxPQUFPemQsTUFBTTtJQUN4QixJQUFJb2EsaUJBQWlCOVMsTUFBTThTLGNBQWMsRUFDdkNGLGtCQUFrQjVTLE1BQU00UyxlQUFlLEVBQ3ZDTSxvQkFBb0JsVCxNQUFNa1QsaUJBQWlCO0lBRTdDLDhCQUE4QjtJQUM5QjViLElBQUl1QixNQUFNLENBQUM0SCxNQUFNRCxNQUFNOUgsU0FBUzZJO0lBQ2hDakssSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1ELE1BQU1pQjtJQUV2QiwwQ0FBMEM7SUFDMUMsSUFBSTJVLEtBQUszVSxNQUFPLE9BQU13VSxLQUFJO0lBRTFCLDBCQUEwQjtJQUMxQjNlLElBQUl5QixhQUFhLENBQUMwSCxNQUFNRCxNQUFNNFYsSUFBSTNWLE9BQU8yVixJQUFJNVYsS0FBS0MsT0FBT2dCLEtBQUtqQjtJQUU5RCxvREFBb0Q7SUFDcEQsSUFBSWdZLGdCQUFnQi9YLE9BQU81SSxLQUFLOEwsR0FBRyxDQUFDaVAsaUJBQWlCblI7SUFDckRuSyxJQUFJd0IsTUFBTSxDQUFDMGYsZUFBZWhZO0lBRTFCLDBCQUEwQjtJQUMxQmxKLElBQUl3QixNQUFNLENBQUMwZixlQUFlaFksTUFBTXNTO0lBRWhDLDBDQUEwQztJQUMxQyxJQUFJNEQsc0JBQXNCN2UsS0FBSzhMLEdBQUcsQ0FBQ2xDLE1BQU1tUixpQkFBaUI7SUFDMUQsSUFBSStELHNCQUFzQjllLEtBQUs4TCxHQUFHLENBQUNsQyxNQUFNcVIsZ0JBQWdCO0lBQ3pELElBQUkwRCxLQUFLRSxzQkFBdUIsT0FBTVQsS0FBSTtJQUMxQyxJQUFJUSxLQUFLRSxzQkFBdUIsT0FBTVYsS0FBSTtJQUUxQywyQkFBMkI7SUFDM0IzZSxJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT21TLGtCQUFrQjRELElBQUloVyxNQUFNc1MsZ0JBQWdCclMsT0FBT21TLGlCQUFpQnBTLE1BQU1zUyxpQkFBaUIyRCxJQUFJaFcsT0FBT21TLGlCQUFpQnBTLE1BQU0zSSxLQUFLOEwsR0FBRyxDQUFDbEMsS0FBS3FSO0lBRXBLLDhCQUE4QjtJQUM5QnhiLElBQUl3QixNQUFNLENBQUMySCxPQUFPbVMsaUJBQWlCcFMsTUFBTTlILFNBQVNiLEtBQUs4TCxHQUFHLENBQUNwQyxLQUFLMlI7SUFFaEUsNkNBQTZDO0lBQzdDLElBQUkrRSx5QkFBeUJwZ0IsS0FBSzhMLEdBQUcsQ0FBQ3BDLE1BQU1xUixpQkFBaUI7SUFDN0QsSUFBSXNGLHlCQUF5QnJnQixLQUFLOEwsR0FBRyxDQUFDcEMsTUFBTTJSLG1CQUFtQjtJQUMvRCxJQUFJMEQsS0FBS3FCLHlCQUEwQixPQUFNaEMsS0FBSTtJQUM3QyxJQUFJWSxLQUFLcUIseUJBQTBCLE9BQU1qQyxLQUFJO0lBQzdDLElBQUl3QyxtQkFBbUJoWSxPQUFPNUksS0FBSzhMLEdBQUcsQ0FBQ3BDLEtBQUtxUjtJQUU1QywwQkFBMEI7SUFDMUJ0YixJQUFJeUIsYUFBYSxDQUFDMEgsT0FBT21TLGlCQUFpQnBTLE1BQU05SCxTQUFTd2Esb0JBQW9CMkQsSUFBSXBXLE9BQU9tUyxrQkFBa0JnRSxJQUFJcFcsTUFBTTlILFNBQVN3YSxtQkFBbUJ1RixrQkFBa0JqWSxNQUFNOUgsU0FBU3dhO0lBQ2pMNWIsSUFBSXdCLE1BQU0sQ0FBQzJmLGtCQUFrQmpZLE1BQU05SDtJQUVuQyxtREFBbUQ7SUFDbkRwQixJQUFJd0IsTUFBTSxDQUFDMkgsT0FBT2MsS0FBS2YsTUFBTTlIO0lBRTdCLDJDQUEyQztJQUMzQyxJQUFJcWUsS0FBS3hWLE1BQU8sT0FBTTBVLEtBQUk7SUFFMUIsMkJBQTJCO0lBQzNCM2UsSUFBSXlCLGFBQWEsQ0FBQzBILE9BQU9zVyxJQUFJdlcsTUFBTTlILFFBQVErSCxNQUFNRCxNQUFNOUgsU0FBU3FlLElBQUl0VyxNQUFNRCxNQUFNOUgsU0FBUzZJO0lBQ3pGakssSUFBSTBCLFNBQVM7SUFDYjFCLElBQUlxSyxJQUFJO0lBRVIsOEJBQThCO0lBQzlCLElBQUl1UixtQkFBbUI7UUFDckIsSUFBSThELFVBQVUsQ0FBQzlELG9CQUFvQk47UUFDbkN0YixJQUFJdUIsTUFBTSxDQUFDNEgsT0FBT2hJLFFBQVEsR0FBR3VlLFVBQVd2ZSxDQUFBQSxRQUFRLEtBQUsrSCxNQUFNOUg7UUFDM0RwQixJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQsTUFBTTlIO1FBQ3ZCcEIsSUFBSXdCLE1BQU0sQ0FBQzJILE1BQU1EO1FBQ2pCbEosSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9oSSxPQUFPK0g7UUFDekJsSixJQUFJMEIsU0FBUztRQUNiMUIsSUFBSXFLLElBQUk7SUFDVjtJQUNBLElBQUl1UixtQkFBbUI7UUFDckIsSUFBSXdGLFlBQVksQ0FBQzVGLGlCQUFpQkY7UUFDbEN0YixJQUFJdUIsTUFBTSxDQUFDNEgsT0FBT2hJLFFBQVEsR0FBR2lnQixZQUFhLEVBQUNqZ0IsUUFBUSxLQUFLK0g7UUFDeERsSixJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQ7UUFDakJsSixJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQsTUFBTTlIO1FBQ3ZCcEIsSUFBSXdCLE1BQU0sQ0FBQzJILE9BQU9oSSxPQUFPK0gsTUFBTTlIO1FBQy9CcEIsSUFBSTBCLFNBQVM7UUFDYjFCLElBQUlxSyxJQUFJO0lBQ1Y7QUFDRjtBQUNBLElBQUlnWCxpQkFBaUIsU0FBU0EsZUFBZXJoQixHQUFHLEVBQUU2ZSxNQUFNLEVBQUVuVyxLQUFLLEVBQUV1QixHQUFHLEVBQUVFLEdBQUc7SUFDdkUsSUFBSWpCLE1BQU0yVixPQUFPM1YsR0FBRyxFQUNsQkMsT0FBTzBWLE9BQU8xVixJQUFJLEVBQ2xCL0gsU0FBU3lkLE9BQU96ZCxNQUFNO0lBQ3hCLElBQUlrZ0Isa0JBQWtCNVksTUFBTTRZLGVBQWUsRUFDekNDLGtCQUFrQjdZLE1BQU02WSxlQUFlLEVBQ3ZDakcsa0JBQWtCNVMsTUFBTTRTLGVBQWUsRUFDdkNFLGlCQUFpQjlTLE1BQU04UyxjQUFjLEVBQ3JDSSxvQkFBb0JsVCxNQUFNa1QsaUJBQWlCO0lBQzdDLElBQUlrRCxLQUFLN1UsTUFBTyxPQUFNMFUsS0FBSTtJQUMxQixJQUFJTyxLQUFLL1UsTUFBTyxPQUFNd1UsS0FBSTtJQUMxQjNlLElBQUl1QixNQUFNLENBQUM0SCxPQUFPYyxLQUFLZixNQUFNOUg7SUFDN0JwQixJQUFJeUIsYUFBYSxDQUFDMEgsT0FBTzJWLElBQUk1VixNQUFNOUgsUUFBUStILE1BQU1ELE1BQU05SCxTQUFTMGQsSUFBSTNWLE1BQU1ELE1BQU05SCxTQUFTNkk7SUFDekZqSyxJQUFJd0IsTUFBTSxDQUFDMkgsTUFBTUQsTUFBTWlCO0lBQ3ZCbkssSUFBSXlCLGFBQWEsQ0FBQzBILE1BQU1ELE1BQU1nVyxJQUFJL1YsT0FBTytWLElBQUloVyxLQUFLQyxPQUFPZ0IsS0FBS2pCO0lBQzlEbEosSUFBSWdPLFdBQVcsQ0FBQ3NUO0lBQ2hCdGhCLElBQUk2TixTQUFTLENBQUN0TixLQUFLOEwsR0FBRyxDQUFDaVAsaUJBQWlCRSxnQkFBZ0JJLHFCQUFxQjtJQUM3RSxJQUFJMkYsb0JBQW9CLFVBQVU7UUFDaEN2aEIsSUFBSThPLElBQUksQ0FBQ3dNLGtCQUFrQixHQUFHO1lBQzVCN0csT0FBTzZHLGtCQUFrQjtRQUMzQjtJQUNGLE9BQU8sSUFBSWlHLG9CQUFvQixVQUFVO1FBQ3ZDdmhCLElBQUk4TyxJQUFJLENBQUN3TSxpQkFBaUI7WUFDeEI3RyxPQUFPNkcsa0JBQWtCO1FBQzNCO0lBQ0Y7SUFDQXRiLElBQUlpTyxNQUFNO0lBQ1ZqTyxJQUFJK2YsTUFBTTtBQUNaO0FBQ0EsSUFBSXlCLHNCQUFzQixTQUFTQSxvQkFBb0J2aEIsSUFBSTtJQUN6RCxPQUFPQSxLQUFLd0csR0FBRyxJQUFLeEcsQ0FBQUEsS0FBS3dHLEdBQUcsQ0FBQytVLGNBQWMsSUFBSXZiLEtBQUt3RyxHQUFHLENBQUNpVixnQkFBZ0IsSUFBSXpiLEtBQUt3RyxHQUFHLENBQUNtVixpQkFBaUIsSUFBSTNiLEtBQUt3RyxHQUFHLENBQUM2VSxlQUFlO0FBQ3BJO0FBQ0EsSUFBSW1HLGdCQUFnQixTQUFTQSxjQUFjemhCLEdBQUcsRUFBRUMsSUFBSTtJQUNsRCxJQUFJLENBQUN1aEIsb0JBQW9CdmhCLE9BQU87SUFDaEMsSUFBSWdKLFlBQVloSixLQUFLd0csR0FBRyxFQUN0QnRGLFFBQVE4SCxVQUFVOUgsS0FBSyxFQUN2QkMsU0FBUzZILFVBQVU3SCxNQUFNLEVBQ3pCb2EsaUJBQWlCdlMsVUFBVXVTLGNBQWMsRUFDekNGLGtCQUFrQnJTLFVBQVVxUyxlQUFlLEVBQzNDSSxtQkFBbUJ6UyxVQUFVeVMsZ0JBQWdCLEVBQzdDRSxvQkFBb0IzUyxVQUFVMlMsaUJBQWlCO0lBQ2pELElBQUluVCxjQUFjeEksS0FBS3lJLEtBQUssRUFDMUI1RCxVQUFVMkQsWUFBWTNELE9BQU8sRUFDN0JzRSx3QkFBd0JYLFlBQVlZLG1CQUFtQixFQUN2REEsc0JBQXNCRCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUM3REUseUJBQXlCYixZQUFZYyxvQkFBb0IsRUFDekRBLHVCQUF1QkQsMkJBQTJCLEtBQUssSUFBSSxJQUFJQSx3QkFDL0RFLHdCQUF3QmYsWUFBWWtCLHNCQUFzQixFQUMxREEseUJBQXlCSCwwQkFBMEIsS0FBSyxJQUFJLElBQUlBLHVCQUNoRUUseUJBQXlCakIsWUFBWWdCLHVCQUF1QixFQUM1REEsMEJBQTBCQywyQkFBMkIsS0FBSyxJQUFJLElBQUlBLHdCQUNsRWdZLHlCQUF5QmpaLFlBQVlvWCxjQUFjLEVBQ25EQSxpQkFBaUI2QiwyQkFBMkIsS0FBSyxJQUFJLFVBQVVBLHdCQUMvREMseUJBQXlCbFosWUFBWXFYLGNBQWMsRUFDbkRBLGlCQUFpQjZCLDJCQUEyQixLQUFLLElBQUksVUFBVUEsd0JBQy9EQyx3QkFBd0JuWixZQUFZNlksZUFBZSxFQUNuREEsa0JBQWtCTSwwQkFBMEIsS0FBSyxJQUFJLFVBQVVBLHVCQUMvREMseUJBQXlCcFosWUFBWThZLGVBQWUsRUFDcERBLGtCQUFrQk0sMkJBQTJCLEtBQUssSUFBSSxVQUFVQSx3QkFDaEVDLHdCQUF3QnJaLFlBQVk4WCxnQkFBZ0IsRUFDcERBLG1CQUFtQnVCLDBCQUEwQixLQUFLLElBQUksVUFBVUEsdUJBQ2hFQyx5QkFBeUJ0WixZQUFZK1gsZ0JBQWdCLEVBQ3JEQSxtQkFBbUJ1QiwyQkFBMkIsS0FBSyxJQUFJLFVBQVVBLHdCQUNqRUMseUJBQXlCdlosWUFBWXNZLGlCQUFpQixFQUN0REEsb0JBQW9CaUIsMkJBQTJCLEtBQUssSUFBSSxVQUFVQSx3QkFDbEVDLHlCQUF5QnhaLFlBQVl1WSxpQkFBaUIsRUFDdERBLG9CQUFvQmlCLDJCQUEyQixLQUFLLElBQUksVUFBVUE7SUFDcEUsSUFBSXZaLFFBQVE7UUFDVm1YLGdCQUFnQkE7UUFDaEJyRSxnQkFBZ0JBO1FBQ2hCc0UsZ0JBQWdCQTtRQUNoQndCLGlCQUFpQkE7UUFDakJoRyxpQkFBaUJBO1FBQ2pCaUcsaUJBQWlCQTtRQUNqQmhCLGtCQUFrQkE7UUFDbEI3RSxrQkFBa0JBO1FBQ2xCOEUsa0JBQWtCQTtRQUNsQk8sbUJBQW1CQTtRQUNuQm5GLG1CQUFtQkE7UUFDbkJvRixtQkFBbUJBO1FBQ25CM1gscUJBQXFCQTtRQUNyQkUsc0JBQXNCQTtRQUN0Qkksd0JBQXdCQTtRQUN4QkYseUJBQXlCQTtJQUMzQjtJQUNBLElBQUlHLE1BQU1ySixLQUFLc0osR0FBRyxDQUFDTixzQkFBc0IsTUFBTXBJLE9BQU8sTUFBTUM7SUFDNUQsSUFBSStJLE1BQU01SixLQUFLc0osR0FBRyxDQUFDUixxQkFBcUIsTUFBTWxJLE9BQU8sTUFBTUM7SUFDM0QsSUFBSTJJLE1BQU14SixLQUFLc0osR0FBRyxDQUFDSix5QkFBeUIsTUFBTXRJLE9BQU8sTUFBTUM7SUFDL0QsSUFBSTZJLE1BQU0xSixLQUFLc0osR0FBRyxDQUFDRix3QkFBd0IsTUFBTXhJLE9BQU8sTUFBTUM7SUFDOURwQixJQUFJb0YsSUFBSTtJQUNScEYsSUFBSXFPLGFBQWEsQ0FBQ3ZKO0lBQ2xCLElBQUkwVyxnQkFBZ0I7UUFDbEJ4YixJQUFJb0YsSUFBSTtRQUNSd1osY0FBYzVlLEtBQUtDLEtBQUt3RyxHQUFHLEVBQUVpQyxPQUFPa0IsS0FBS087UUFDekN5VixjQUFjNWYsS0FBS0MsS0FBS3dHLEdBQUcsRUFBRWlDLE9BQU9rQixLQUFLTztRQUN6Q25LLElBQUkyRixPQUFPO0lBQ2I7SUFDQSxJQUFJK1Ysa0JBQWtCO1FBQ3BCMWIsSUFBSW9GLElBQUk7UUFDUjRhLGdCQUFnQmhnQixLQUFLQyxLQUFLd0csR0FBRyxFQUFFaUMsT0FBT2tCLEtBQUtHO1FBQzNDdVcsZ0JBQWdCdGdCLEtBQUtDLEtBQUt3RyxHQUFHLEVBQUVpQyxPQUFPa0IsS0FBS0c7UUFDM0MvSixJQUFJMkYsT0FBTztJQUNiO0lBQ0EsSUFBSWlXLG1CQUFtQjtRQUNyQjViLElBQUlvRixJQUFJO1FBQ1JxYixpQkFBaUJ6Z0IsS0FBS0MsS0FBS3dHLEdBQUcsRUFBRWlDLE9BQU91QixLQUFLRjtRQUM1QytXLGlCQUFpQjlnQixLQUFLQyxLQUFLd0csR0FBRyxFQUFFaUMsT0FBT3VCLEtBQUtGO1FBQzVDL0osSUFBSTJGLE9BQU87SUFDYjtJQUNBLElBQUkyVixpQkFBaUI7UUFDbkJ0YixJQUFJb0YsSUFBSTtRQUNSNmIsZUFBZWpoQixLQUFLQyxLQUFLd0csR0FBRyxFQUFFaUMsT0FBT3VCLEtBQUtFO1FBQzFDa1gsZUFBZXJoQixLQUFLQyxLQUFLd0csR0FBRyxFQUFFaUMsT0FBT3VCLEtBQUtFO1FBQzFDbkssSUFBSTJGLE9BQU87SUFDYjtJQUNBM0YsSUFBSTJGLE9BQU87QUFDYjtBQUVBLElBQUl1YyxpQkFBaUIsU0FBU0EsZUFBZWxpQixHQUFHLEVBQUVDLElBQUk7SUFDcEQsSUFBSXdJO0lBQ0osSUFBSVEsWUFBWWhKLEtBQUt3RyxHQUFHLEVBQ3RCeUMsTUFBTUQsVUFBVUMsR0FBRyxFQUNuQkMsT0FBT0YsVUFBVUUsSUFBSSxFQUNyQmhJLFFBQVE4SCxVQUFVOUgsS0FBSyxFQUN2QkMsU0FBUzZILFVBQVU3SCxNQUFNO0lBQzNCLElBQUl5RCxRQUFRMk8sV0FBV3ZULEtBQUt5SSxLQUFLLENBQUMwTSxlQUFlO0lBQ2pELElBQUkrTSxjQUFjM2lCLHFEQUFLQSxDQUFDLENBQUNpSixjQUFjeEksS0FBS3lJLEtBQUssTUFBTSxRQUFRRCxnQkFBZ0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsWUFBWTNELE9BQU8sSUFBSSxJQUFJN0UsS0FBS3lJLEtBQUssQ0FBQzVELE9BQU87SUFDOUksSUFBSUEsVUFBVXZFLEtBQUtzSixHQUFHLENBQUNoRixNQUFNQyxPQUFPLEVBQUVxZDtJQUN0Q25pQixJQUFJZ0YsV0FBVyxDQUFDRixTQUFTQyxTQUFTLENBQUNGLE1BQU02RixLQUFLLEVBQUVzSyxJQUFJLENBQUM3TCxNQUFNRCxLQUFLL0gsT0FBT0MsUUFBUThOLElBQUk7QUFDckY7QUFDQSxJQUFJaUcsbUJBQW1CLFNBQVNBLGlCQUFpQm5WLEdBQUcsRUFBRUMsSUFBSTtJQUN4RCxJQUFJc1g7SUFDSixJQUFJNkssZ0JBQWdCLENBQUMsQ0FBQ25pQixLQUFLd0csR0FBRyxJQUFJLENBQUMsQ0FBRSxFQUFDOFEsZUFBZXRYLEtBQUt5SSxLQUFLLE1BQU0sUUFBUTZPLGlCQUFpQixLQUFLLEtBQUtBLGFBQWFuQyxlQUFlO0lBQ3BJLElBQUlnTixlQUFlO1FBQ2pCcGlCLElBQUlvRixJQUFJO1FBQ1I0RCxTQUFTaEosS0FBS0M7UUFDZGlpQixlQUFlbGlCLEtBQUtDO1FBQ3BCRCxJQUFJMkYsT0FBTztJQUNiO0FBQ0Y7QUFFQSxJQUFJb08sVUFBVSxTQUFTQSxRQUFRckosS0FBSztJQUNsQyxPQUFPLE9BQU80SyxJQUFJLENBQUM1SztBQUNyQjtBQUNBLElBQUkyWCxVQUFVLFNBQVNBLFFBQVFyaUIsR0FBRyxFQUFFQyxJQUFJO0lBQ3RDLElBQUlHLFFBQVFILEtBQUtHLEtBQUssSUFBSSxDQUFDO0lBQzNCLElBQUk2SSxZQUFZaEosS0FBS3dHLEdBQUcsRUFDdEJ5QyxNQUFNRCxVQUFVQyxHQUFHLEVBQ25CQyxPQUFPRixVQUFVRSxJQUFJLEVBQ3JCaEksUUFBUThILFVBQVU5SCxLQUFLLEVBQ3ZCQyxTQUFTNkgsVUFBVTdILE1BQU07SUFDM0IsSUFBSTRTLE1BQU01VCxNQUFNNFQsR0FBRyxJQUFJNVQsTUFBTTBJLElBQUk7SUFDakMsSUFBSWtMLEtBQUs7UUFDUCxJQUFJc08sT0FBT3ZPLFFBQVFDO1FBQ25CLElBQUl1TyxTQUFTRCxPQUFPLFNBQVM7UUFDN0IsSUFBSTVYLFFBQVE0WCxPQUFPdE8sSUFBSWxNLEtBQUssQ0FBQyxLQUFLa007UUFDbENoVSxHQUFHLENBQUN1aUIsT0FBTyxDQUFDcFosTUFBTUQsS0FBSy9ILE9BQU9DLFFBQVFzSjtJQUN4QztBQUNGO0FBRUEsSUFBSThYLGlCQUFpQixTQUFTQSxlQUFleGlCLEdBQUcsRUFBRUMsSUFBSTtJQUNwRCxJQUFJQztJQUNKLElBQUksQ0FBQ0EsY0FBY0QsS0FBS0csS0FBSyxNQUFNLFFBQVFGLGdCQUFnQixLQUFLLEtBQUtBLFlBQVkyVSxFQUFFLEVBQUU7UUFDbkY3VSxJQUFJeWlCLG1CQUFtQixDQUFDeGlCLEtBQUtHLEtBQUssQ0FBQ3lVLEVBQUUsRUFBRSxPQUFPLE1BQU01VSxLQUFLd0csR0FBRyxDQUFDeUMsR0FBRyxFQUFFO0lBQ3BFO0FBQ0Y7QUFFQSxJQUFJd1o7QUFDSixJQUFJQyxrQkFBa0IsU0FBU0EsZ0JBQWdCMWlCLElBQUk7SUFDakQsT0FBT0EsS0FBS3lOLElBQUksS0FBS25PLHVEQUFNLElBQUlVLEtBQUt5TixJQUFJLEtBQUtuTyxzREFBSztBQUNwRDtBQUNBLElBQUlzakIsaUJBQWlCLFNBQVNBLGVBQWU3aUIsR0FBRyxFQUFFQyxJQUFJLEVBQUVrRCxPQUFPO0lBQzdEbkQsSUFBSW9GLElBQUk7SUFDUixJQUFJbkYsS0FBS3dHLEdBQUcsRUFBRTtRQUNaekcsSUFBSXFGLFNBQVMsQ0FBQ3BGLEtBQUt3RyxHQUFHLENBQUMwQyxJQUFJLEVBQUVsSixLQUFLd0csR0FBRyxDQUFDeUMsR0FBRztJQUMzQztJQUNBLElBQUloQyxXQUFXakgsS0FBS2lILFFBQVEsSUFBSSxFQUFFO0lBQ2xDLElBQUk0YixjQUFjLFNBQVNBLFlBQVk1USxLQUFLO1FBQzFDLE9BQU9KLFdBQVc5UixLQUFLa1MsT0FBTy9PO0lBQ2hDO0lBQ0ErRCxTQUFTRixPQUFPLENBQUM4YjtJQUNqQjlpQixJQUFJMkYsT0FBTztBQUNiO0FBQ0EsSUFBSW9kLFlBQWFMLENBQUFBLGFBQWEsQ0FBQyxHQUFHQSxVQUFVLENBQUNuakIsdURBQU0sQ0FBQyxHQUFHa1gsWUFBWWlNLFVBQVUsQ0FBQ25qQix1REFBTSxDQUFDLEdBQUc4WCxZQUFZcUwsVUFBVSxDQUFDbmpCLHdEQUFPLENBQUMsR0FBRytJLGFBQWFvYSxVQUFVLENBQUNuakIseURBQVEsQ0FBQyxHQUFHZ2YsY0FBY21FLFVBQVUsQ0FBQ25qQixzREFBSyxDQUFDLEdBQUcrVCxXQUFXb1AsVUFBVSxDQUFDbmpCLHVEQUFNLENBQUMsR0FBRzhpQixTQUFTSyxVQUFTO0FBQ2xQLElBQUk1USxhQUFhLFNBQVNBLFdBQVc5UixHQUFHLEVBQUVDLElBQUksRUFBRWtELE9BQU87SUFDckQsSUFBSXNGO0lBQ0osSUFBSTBhLGlCQUFpQixDQUFDLENBQUMxYSxjQUFjeEksS0FBS3lJLEtBQUssTUFBTSxRQUFRRCxnQkFBZ0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsWUFBWTJhLFFBQVEsTUFBTTtJQUN6SCxJQUFJQyx1QkFBdUJWLGdCQUFnQjFpQjtJQUMzQyxJQUFJQSxLQUFLeU4sSUFBSSxLQUFLbk8sdURBQU0sRUFBRXdYLFdBQVcvVyxLQUFLQztJQUMxQ0QsSUFBSW9GLElBQUk7SUFDUixJQUFJK2QsZ0JBQWdCbmEsU0FBU2hKLEtBQUtDO0lBQ2xDbUwscUJBQXFCcEwsS0FBS0M7SUFDMUJrVixpQkFBaUJuVixLQUFLQztJQUN0QndoQixjQUFjemhCLEtBQUtDO0lBQ25CLElBQUk4UixXQUFXZ1IsU0FBUyxDQUFDOWlCLEtBQUt5TixJQUFJLENBQUM7SUFDbkMsSUFBSXFFLFVBQVVBLFNBQVMvUixLQUFLQyxNQUFNa0Q7SUFDbEMsSUFBSWtnQixzQkFBc0JSLGVBQWU3aUIsS0FBS0MsTUFBTWtEO0lBQ3BEcWYsZUFBZXhpQixLQUFLQztJQUNwQjZkLFlBQVk5ZCxLQUFLQztJQUNqQkQsSUFBSTJGLE9BQU87QUFDYjtBQUVBLG9DQUFvQyxHQUVwQyxJQUFJNGQsaUJBQWlCLFNBQVNBLGVBQWVDLE1BQU07SUFDakQsT0FBTyxTQUFVakosR0FBRyxFQUFFN1AsS0FBSztRQUN6QixJQUFJQSxPQUFPOFksT0FBT0MsSUFBSSxDQUFDbEosSUFBSSxHQUFHN1A7SUFDaEM7QUFDRjtBQUVBOzs7OztDQUtDLEdBQ0QsSUFBSWdaLGNBQWMsU0FBU0EsWUFBWTFqQixHQUFHLEVBQUUyakIsR0FBRztJQUM3QyxJQUFJQyxnQkFBZ0JDO0lBQ3BCLElBQUlDLFVBQVVQLGVBQWV2akI7SUFDN0IsSUFBSUksUUFBUXVqQixJQUFJdmpCLEtBQUssSUFBSSxDQUFDO0lBQzFCLElBQUkyakIsUUFBUTNqQixNQUFNMmpCLEtBQUssSUFBSTtJQUMzQixJQUFJQyxTQUFTNWpCLE1BQU00akIsTUFBTSxJQUFJO0lBQzdCLElBQUlDLFVBQVU3akIsTUFBTTZqQixPQUFPLElBQUk7SUFDL0IsSUFBSUMsV0FBVzlqQixNQUFNOGpCLFFBQVEsSUFBSTtJQUNqQyxJQUFJQyxVQUFVLENBQUNQLGlCQUFpQnhqQixNQUFNK2pCLE9BQU8sS0FBSyxPQUFPUCxpQkFBaUI7SUFDMUUsSUFBSVEsV0FBVyxDQUFDUCxrQkFBa0J6akIsTUFBTWdrQixRQUFRLEtBQUssT0FBT1Asa0JBQWtCO0lBQzlFLElBQUlRLGVBQWVqa0IsTUFBTWlrQixZQUFZLElBQUksSUFBSUM7SUFDN0MsSUFBSUMsbUJBQW1CbmtCLE1BQU1ta0IsZ0JBQWdCLElBQUk7SUFDakRULFFBQVEsU0FBU0M7SUFDakJELFFBQVEsVUFBVUU7SUFDbEJGLFFBQVEsV0FBV0c7SUFDbkJILFFBQVEsWUFBWUk7SUFDcEJKLFFBQVEsV0FBV0s7SUFDbkJMLFFBQVEsWUFBWU07SUFDcEJOLFFBQVEsZ0JBQWdCTztJQUN4QlAsUUFBUSxvQkFBb0JTO0FBQzlCO0FBRUEsb0NBQW9DLEdBRXBDLElBQUlDLGtCQUFrQixTQUFTQSxnQkFBZ0J4a0IsR0FBRyxFQUFFQyxJQUFJLEVBQUV3a0IsVUFBVSxFQUFFQyxRQUFRO0lBQzVFLElBQUl4a0I7SUFDSixJQUFJeWtCLFdBQVcsQ0FBQ3prQixjQUFjRCxLQUFLRyxLQUFLLE1BQU0sUUFBUUYsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVl5a0IsUUFBUTtJQUM1RyxJQUFJQSxVQUFVO1FBQ1osSUFBSVosUUFBUVksU0FBU1osS0FBSyxFQUN4QmEsU0FBU0QsU0FBU0MsTUFBTSxFQUN4QkMsV0FBV0YsU0FBU0UsUUFBUSxFQUM1QkMsT0FBT0gsU0FBU0csSUFBSSxFQUNwQnhRLE1BQU1xUSxTQUFTclEsR0FBRztRQUNwQixJQUFJeVEsVUFBVUwsUUFBUSxDQUFDRSxPQUFPLElBQUk1a0IsSUFBSStrQixPQUFPO1FBQzdDLElBQUk3YixNQUFNeWIsU0FBU3piLEdBQUcsSUFBSWpKLEtBQUt3RyxHQUFHLENBQUN5QyxHQUFHO1FBQ3RDLElBQUlDLE9BQU93YixTQUFTeGIsSUFBSSxJQUFJbEosS0FBS3dHLEdBQUcsQ0FBQzBDLElBQUk7UUFDekMsSUFBSTZiLFdBQVdELFFBQVFFLE9BQU8sQ0FBQ2xCLE9BQU87WUFDcENVLFlBQVlBO1lBQ1pJLFVBQVVBO1lBQ1YzYixLQUFLQTtZQUNMQyxNQUFNQTtZQUNOMmIsTUFBTUE7WUFDTnhRLEtBQUtBO1FBQ1A7UUFDQW9RLFFBQVEsQ0FBQ0MsU0FBU08sR0FBRyxDQUFDLEdBQUdGO0lBQzNCO0lBQ0EsSUFBSSxDQUFDL2tCLEtBQUtpSCxRQUFRLEVBQUU7SUFDcEJqSCxLQUFLaUgsUUFBUSxDQUFDRixPQUFPLENBQUMsU0FBVWtMLEtBQUs7UUFDbkMsT0FBT3NTLGdCQUFnQnhrQixLQUFLa1MsT0FBT3VTLFlBQVlDO0lBQ2pEO0FBQ0Y7QUFDQSxJQUFJUyxlQUFlLFNBQVNBLGFBQWFubEIsR0FBRyxFQUFFb2xCLElBQUk7SUFDaEQsSUFBSVYsV0FBVyxDQUFDO0lBQ2hCLElBQUlXLFFBQVFELEtBQUtsZSxRQUFRLElBQUksRUFBRTtJQUMvQm1lLE1BQU1yZSxPQUFPLENBQUMsU0FBVXNlLElBQUksRUFBRXZoQixDQUFDO1FBQzdCeWdCLGdCQUFnQnhrQixLQUFLc2xCLE1BQU12aEIsR0FBRzJnQjtJQUNoQztBQUNGO0FBRUEsSUFBSWhmLFNBQVMsU0FBU0EsT0FBTzFGLEdBQUcsRUFBRTJqQixHQUFHO0lBQ25DLElBQUkwQixRQUFRMUIsSUFBSXpjLFFBQVEsSUFBSSxFQUFFO0lBQzlCLElBQUkvRCxVQUFVO1FBQ1pnWCxZQUFZLElBQUlDO0lBQ2xCO0lBQ0FzSixZQUFZMWpCLEtBQUsyakI7SUFDakIwQixNQUFNcmUsT0FBTyxDQUFDLFNBQVVzZSxJQUFJO1FBQzFCLE9BQU94VCxXQUFXOVIsS0FBS3NsQixNQUFNbmlCO0lBQy9CO0lBQ0FnaUIsYUFBYW5sQixLQUFLMmpCO0lBQ2xCM2pCLElBQUl1bEIsR0FBRztJQUNQLE9BQU92bEI7QUFDVDtBQUU2QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1lY29tbWVyY2UtdWl0Ly4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYvcmVuZGVyL2xpYi9pbmRleC5qcz9kYzY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFAgZnJvbSAnQHJlYWN0LXBkZi9wcmltaXRpdmVzJztcbmltcG9ydCB7IGlzTmlsLCBtYXRjaFBlcmNlbnQgfSBmcm9tICdAcmVhY3QtcGRmL2Zucyc7XG5pbXBvcnQgYWJzUGF0aCBmcm9tICdhYnMtc3ZnLXBhdGgnO1xuaW1wb3J0IHBhcnNlUGF0aCBmcm9tICdwYXJzZS1zdmctcGF0aCc7XG5pbXBvcnQgbm9ybWFsaXplUGF0aCBmcm9tICdub3JtYWxpemUtc3ZnLXBhdGgnO1xuaW1wb3J0IGNvbG9yU3RyaW5nIGZyb20gJ2NvbG9yLXN0cmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzJztcblxudmFyIHJlbmRlclBhdGggPSBmdW5jdGlvbiByZW5kZXJQYXRoKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHM7XG4gIHZhciBkID0gKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzLmQ7XG4gIGlmIChkKSBjdHgucGF0aChub2RlLnByb3BzLmQpO1xufTtcblxudmFyIEtBUFBBJDMgPSA0LjAgKiAoKE1hdGguc3FydCgyKSAtIDEuMCkgLyAzLjApO1xudmFyIHJlbmRlclJlY3QgPSBmdW5jdGlvbiByZW5kZXJSZWN0KGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHMsIF9ub2RlJHByb3BzMiwgX25vZGUkcHJvcHMzLCBfbm9kZSRwcm9wczQsIF9ub2RlJHByb3BzNSwgX25vZGUkcHJvcHM2O1xuICB2YXIgeCA9ICgoX25vZGUkcHJvcHMgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMueCkgfHwgMDtcbiAgdmFyIHkgPSAoKF9ub2RlJHByb3BzMiA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMyLnkpIHx8IDA7XG4gIHZhciByeCA9ICgoX25vZGUkcHJvcHMzID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczMucngpIHx8IDA7XG4gIHZhciByeSA9ICgoX25vZGUkcHJvcHM0ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczQucnkpIHx8IDA7XG4gIHZhciB3aWR0aCA9ICgoX25vZGUkcHJvcHM1ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczUud2lkdGgpIHx8IDA7XG4gIHZhciBoZWlnaHQgPSAoKF9ub2RlJHByb3BzNiA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzNiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHM2LmhlaWdodCkgfHwgMDtcbiAgaWYgKCF3aWR0aCB8fCAhaGVpZ2h0KSByZXR1cm47XG4gIGlmIChyeCAmJiByeSkge1xuICAgIHZhciBrcnggPSByeCAqIEtBUFBBJDM7XG4gICAgdmFyIGtyeSA9IHJ5ICogS0FQUEEkMztcbiAgICBjdHgubW92ZVRvKHggKyByeCwgeSk7XG4gICAgY3R4LmxpbmVUbyh4IC0gcnggKyB3aWR0aCwgeSk7XG4gICAgY3R4LmJlemllckN1cnZlVG8oeCAtIHJ4ICsgd2lkdGggKyBrcngsIHksIHggKyB3aWR0aCwgeSArIHJ5IC0ga3J5LCB4ICsgd2lkdGgsIHkgKyByeSk7XG4gICAgY3R4LmxpbmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQgLSByeSk7XG4gICAgY3R4LmJlemllckN1cnZlVG8oeCArIHdpZHRoLCB5ICsgaGVpZ2h0IC0gcnkgKyBrcnksIHggLSByeCArIHdpZHRoICsga3J4LCB5ICsgaGVpZ2h0LCB4IC0gcnggKyB3aWR0aCwgeSArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyh4ICsgcngsIHkgKyBoZWlnaHQpO1xuICAgIGN0eC5iZXppZXJDdXJ2ZVRvKHggKyByeCAtIGtyeCwgeSArIGhlaWdodCwgeCwgeSArIGhlaWdodCAtIHJ5ICsga3J5LCB4LCB5ICsgaGVpZ2h0IC0gcnkpO1xuICAgIGN0eC5saW5lVG8oeCwgeSArIHJ5KTtcbiAgICBjdHguYmV6aWVyQ3VydmVUbyh4LCB5ICsgcnkgLSBrcnksIHggKyByeCAtIGtyeCwgeSwgeCArIHJ4LCB5KTtcbiAgfSBlbHNlIHtcbiAgICBjdHgubW92ZVRvKHgsIHkpO1xuICAgIGN0eC5saW5lVG8oeCArIHdpZHRoLCB5KTtcbiAgICBjdHgubGluZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyh4LCB5ICsgaGVpZ2h0KTtcbiAgfVxuICBjdHguY2xvc2VQYXRoKCk7XG59O1xuXG52YXIgcmVuZGVyTGluZSQxID0gZnVuY3Rpb24gcmVuZGVyTGluZShjdHgsIG5vZGUpIHtcbiAgdmFyIF9yZWYgPSBub2RlLnByb3BzIHx8IHt9LFxuICAgIHgxID0gX3JlZi54MSxcbiAgICB4MiA9IF9yZWYueDIsXG4gICAgeTEgPSBfcmVmLnkxLFxuICAgIHkyID0gX3JlZi55MjtcbiAgY3R4Lm1vdmVUbyh4MSwgeTEpO1xuICBjdHgubGluZVRvKHgyLCB5Mik7XG59O1xuXG52YXIgcmVuZGVyR3JvdXAgPSBmdW5jdGlvbiByZW5kZXJHcm91cCgpIHtcbiAgLy8gbm9vcFxufTtcblxudmFyIEtBUFBBJDIgPSA0LjAgKiAoKE1hdGguc3FydCgyKSAtIDEuMCkgLyAzLjApO1xudmFyIGRyYXdFbGxpcHNlID0gZnVuY3Rpb24gZHJhd0VsbGlwc2UoY3R4LCBjeCwgY3ksIHJ4LCByeSkge1xuICBpZiAoY3ggPT09IHZvaWQgMCkge1xuICAgIGN4ID0gMDtcbiAgfVxuICBpZiAoY3kgPT09IHZvaWQgMCkge1xuICAgIGN5ID0gMDtcbiAgfVxuICB2YXIgeCA9IGN4IC0gcng7XG4gIHZhciB5ID0gY3kgLSByeTtcbiAgdmFyIG94ID0gcnggKiBLQVBQQSQyO1xuICB2YXIgb3kgPSByeSAqIEtBUFBBJDI7XG4gIHZhciB4ZSA9IHggKyByeCAqIDI7XG4gIHZhciB5ZSA9IHkgKyByeSAqIDI7XG4gIHZhciB4bSA9IHggKyByeDtcbiAgdmFyIHltID0geSArIHJ5O1xuICBjdHgubW92ZVRvKHgsIHltKTtcbiAgY3R4LmJlemllckN1cnZlVG8oeCwgeW0gLSBveSwgeG0gLSBveCwgeSwgeG0sIHkpO1xuICBjdHguYmV6aWVyQ3VydmVUbyh4bSArIG94LCB5LCB4ZSwgeW0gLSBveSwgeGUsIHltKTtcbiAgY3R4LmJlemllckN1cnZlVG8oeGUsIHltICsgb3ksIHhtICsgb3gsIHllLCB4bSwgeWUpO1xuICBjdHguYmV6aWVyQ3VydmVUbyh4bSAtIG94LCB5ZSwgeCwgeW0gKyBveSwgeCwgeW0pO1xuICBjdHguY2xvc2VQYXRoKCk7XG59O1xudmFyIHJlbmRlckVsbGlwc2UgPSBmdW5jdGlvbiByZW5kZXJFbGxpcHNlKGN0eCwgbm9kZSkge1xuICB2YXIgX3JlZiA9IG5vZGUucHJvcHMgfHwge30sXG4gICAgY3ggPSBfcmVmLmN4LFxuICAgIGN5ID0gX3JlZi5jeSxcbiAgICByeCA9IF9yZWYucngsXG4gICAgcnkgPSBfcmVmLnJ5O1xuICBkcmF3RWxsaXBzZShjdHgsIGN4LCBjeSwgcngsIHJ5KTtcbn07XG5cbnZhciByZW5kZXJDaXJjbGUgPSBmdW5jdGlvbiByZW5kZXJDaXJjbGUoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wcywgX25vZGUkcHJvcHMyLCBfbm9kZSRwcm9wczM7XG4gIHZhciBjeCA9IChfbm9kZSRwcm9wcyA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wcy5jeDtcbiAgdmFyIGN5ID0gKF9ub2RlJHByb3BzMiA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMyLmN5O1xuICB2YXIgciA9IChfbm9kZSRwcm9wczMgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMy5yO1xuICBkcmF3RWxsaXBzZShjdHgsIGN4LCBjeSwgciwgcik7XG59O1xuXG52YXIgcmVuZGVyR2x5cGhzID0gZnVuY3Rpb24gcmVuZGVyR2x5cGhzKGN0eCwgZ2x5cGhzLCBwb3NpdGlvbnMsIHgsIHksIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICB2YXIgc2NhbGUgPSAxMDAwIC8gY3R4Ll9mb250U2l6ZTtcbiAgdmFyIHVuaXRzUGVyRW0gPSBjdHguX2ZvbnQuZm9udC51bml0c1BlckVtIHx8IDEwMDA7XG4gIHZhciBhZHZhbmNlV2lkdGhTY2FsZSA9IDEwMDAgLyB1bml0c1BlckVtO1xuXG4gIC8vIEdseXBoIGVuY29kaW5nIGFuZCBwb3NpdGlvbmluZ1xuICB2YXIgZW5jb2RlZEdseXBocyA9IGN0eC5fZm9udC5lbmNvZGVHbHlwaHMoZ2x5cGhzKTtcbiAgdmFyIGVuY29kZWRQb3NpdGlvbnMgPSBwb3NpdGlvbnMubWFwKGZ1bmN0aW9uIChwb3MsIGkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeEFkdmFuY2U6IHBvcy54QWR2YW5jZSAqIHNjYWxlLFxuICAgICAgeUFkdmFuY2U6IHBvcy55QWR2YW5jZSAqIHNjYWxlLFxuICAgICAgeE9mZnNldDogcG9zLnhPZmZzZXQsXG4gICAgICB5T2Zmc2V0OiBwb3MueU9mZnNldCxcbiAgICAgIGFkdmFuY2VXaWR0aDogZ2x5cGhzW2ldLmFkdmFuY2VXaWR0aCAqIGFkdmFuY2VXaWR0aFNjYWxlXG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiBjdHguX2dseXBocyhlbmNvZGVkR2x5cGhzLCBlbmNvZGVkUG9zaXRpb25zLCB4LCB5LCBvcHRpb25zKTtcbn07XG5cbnZhciByZW5kZXJSdW4kMSA9IGZ1bmN0aW9uIHJlbmRlclJ1bihjdHgsIHJ1bikge1xuICB2YXIgcnVuQWR2YW5jZVdpZHRoID0gcnVuLnhBZHZhbmNlO1xuICB2YXIgX3J1biRhdHRyaWJ1dGVzID0gcnVuLmF0dHJpYnV0ZXMsXG4gICAgZm9udCA9IF9ydW4kYXR0cmlidXRlcy5mb250LFxuICAgIGZvbnRTaXplID0gX3J1biRhdHRyaWJ1dGVzLmZvbnRTaXplLFxuICAgIGNvbG9yID0gX3J1biRhdHRyaWJ1dGVzLmNvbG9yLFxuICAgIG9wYWNpdHkgPSBfcnVuJGF0dHJpYnV0ZXMub3BhY2l0eTtcbiAgY3R4LmZpbGxDb2xvcihjb2xvcik7XG4gIGN0eC5maWxsT3BhY2l0eShvcGFjaXR5KTtcbiAgaWYgKGZvbnQuc2JpeCB8fCBmb250LkNPTFIgJiYgZm9udC5DUEFMKSB7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjdHgudHJhbnNsYXRlKDAsIC1ydW4uYXNjZW50KTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bi5nbHlwaHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBwb3NpdGlvbiA9IHJ1bi5wb3NpdGlvbnNbaV07XG4gICAgICB2YXIgZ2x5cGggPSBydW4uZ2x5cGhzW2ldO1xuICAgICAgY3R4LnNhdmUoKTtcbiAgICAgIGN0eC50cmFuc2xhdGUocG9zaXRpb24ueE9mZnNldCwgcG9zaXRpb24ueU9mZnNldCk7XG4gICAgICBnbHlwaC5yZW5kZXIoY3R4LCBmb250U2l6ZSk7XG4gICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgY3R4LnRyYW5zbGF0ZShwb3NpdGlvbi54QWR2YW5jZSwgcG9zaXRpb24ueUFkdmFuY2UpO1xuICAgIH1cbiAgICBjdHgucmVzdG9yZSgpO1xuICB9IGVsc2Uge1xuICAgIGN0eC5mb250KHR5cGVvZiBmb250Lm5hbWUgPT09ICdzdHJpbmcnID8gZm9udC5uYW1lIDogZm9udCwgZm9udFNpemUpO1xuICAgIHRyeSB7XG4gICAgICByZW5kZXJHbHlwaHMoY3R4LCBydW4uZ2x5cGhzLCBydW4ucG9zaXRpb25zLCAwLCAwKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfVxuICBjdHgudHJhbnNsYXRlKHJ1bkFkdmFuY2VXaWR0aCwgMCk7XG59O1xudmFyIHJlbmRlclNwYW4gPSBmdW5jdGlvbiByZW5kZXJTcGFuKGN0eCwgbGluZSwgdGV4dEFuY2hvciwgZG9taW5hbnRCYXNlbGluZSkge1xuICB2YXIgX2xpbmUkYm94LCBfbGluZSRib3gyLCBfbGluZSRydW5zJCwgX2xpbmUkcnVucyQyLCBfbGluZSRydW5zJDIkYXR0cmlidXQ7XG4gIGN0eC5zYXZlKCk7XG4gIHZhciB4ID0gKChfbGluZSRib3ggPSBsaW5lLmJveCkgPT09IG51bGwgfHwgX2xpbmUkYm94ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbGluZSRib3gueCkgfHwgMDtcbiAgdmFyIHkgPSAoKF9saW5lJGJveDIgPSBsaW5lLmJveCkgPT09IG51bGwgfHwgX2xpbmUkYm94MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2xpbmUkYm94Mi55KSB8fCAwO1xuICB2YXIgZm9udCA9IChfbGluZSRydW5zJCA9IGxpbmUucnVuc1swXSkgPT09IG51bGwgfHwgX2xpbmUkcnVucyQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9saW5lJHJ1bnMkLmF0dHJpYnV0ZXMuZm9udDtcbiAgdmFyIHNjYWxlID0gKChfbGluZSRydW5zJDIgPSBsaW5lLnJ1bnNbMF0pID09PSBudWxsIHx8IF9saW5lJHJ1bnMkMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9saW5lJHJ1bnMkMiRhdHRyaWJ1dCA9IF9saW5lJHJ1bnMkMi5hdHRyaWJ1dGVzKSA9PT0gbnVsbCB8fCBfbGluZSRydW5zJDIkYXR0cmlidXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9saW5lJHJ1bnMkMiRhdHRyaWJ1dC5zY2FsZSkgfHwgMTtcbiAgdmFyIHdpZHRoID0gbGluZS54QWR2YW5jZTtcbiAgdmFyIGFzY2VudCA9IGZvbnQuYXNjZW50ICogc2NhbGU7XG4gIHZhciB4SGVpZ2h0ID0gZm9udC54SGVpZ2h0ICogc2NhbGU7XG4gIHZhciBkZXNjZW50ID0gZm9udC5kZXNjZW50ICogc2NhbGU7XG4gIHZhciBjYXBIZWlnaHQgPSBmb250LmNhcEhlaWdodCAqIHNjYWxlO1xuICB2YXIgeFRyYW5zbGF0ZSA9IHg7XG4gIHZhciB5VHJhbnNsYXRlID0geTtcbiAgc3dpdGNoICh0ZXh0QW5jaG9yKSB7XG4gICAgY2FzZSAnbWlkZGxlJzpcbiAgICAgIHhUcmFuc2xhdGUgPSB4IC0gd2lkdGggLyAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZW5kJzpcbiAgICAgIHhUcmFuc2xhdGUgPSB4IC0gd2lkdGg7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgeFRyYW5zbGF0ZSA9IHg7XG4gICAgICBicmVhaztcbiAgfVxuICBzd2l0Y2ggKGRvbWluYW50QmFzZWxpbmUpIHtcbiAgICBjYXNlICdtaWRkbGUnOlxuICAgIGNhc2UgJ2NlbnRyYWwnOlxuICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBjYXBIZWlnaHQgLyAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnaGFuZ2luZyc6XG4gICAgICB5VHJhbnNsYXRlID0geSArIGNhcEhlaWdodDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ21hdGhlbWF0aWNhbCc6XG4gICAgICB5VHJhbnNsYXRlID0geSArIHhIZWlnaHQ7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd0ZXh0LWFmdGVyLWVkZ2UnOlxuICAgICAgeVRyYW5zbGF0ZSA9IHkgKyBkZXNjZW50O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndGV4dC1iZWZvcmUtZWRnZSc6XG4gICAgICB5VHJhbnNsYXRlID0geSArIGFzY2VudDtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICB5VHJhbnNsYXRlID0geTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIGN0eC50cmFuc2xhdGUoeFRyYW5zbGF0ZSwgeVRyYW5zbGF0ZSk7XG4gIGxpbmUucnVucy5mb3JFYWNoKGZ1bmN0aW9uIChydW4pIHtcbiAgICByZXR1cm4gcmVuZGVyUnVuJDEoY3R4LCBydW4pO1xuICB9KTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG52YXIgcmVuZGVyU3ZnVGV4dCA9IGZ1bmN0aW9uIHJlbmRlclN2Z1RleHQoY3R4LCBub2RlKSB7XG4gIG5vZGUuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoc3Bhbikge1xuICAgIHJldHVybiByZW5kZXJTcGFuKGN0eCwgc3Bhbi5saW5lc1swXSwgc3Bhbi5wcm9wcy50ZXh0QW5jaG9yLCBzcGFuLnByb3BzLmRvbWluYW50QmFzZWxpbmUpO1xuICB9KTtcbn07XG5cbi8qKlxuICogQ3JlYXRlIHBhaXJzIGZyb20gYXJyYXlcbiAqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUW119IHZhbHVlcyBhcnJheVxuICogQHJldHVybnMge1RbXVtdfSBwYWlyc1xuICovXG52YXIgcGFpcnMgPSBmdW5jdGlvbiBwYWlycyh2YWx1ZXMpIHtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGg7IGkgKz0gMikge1xuICAgIHJlc3VsdC5wdXNoKFt2YWx1ZXNbaV0sIHZhbHVlc1tpICsgMV1dKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBQYXJzZSBzdmctbGlrZSBwb2ludHMgaW50byBudW1iZXIgYXJyYXlzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHBvaW50cyBzdHJpbmcgZXguIFwiMjAsMzAgNTAsNjBcIlxuICogQHJldHVybnMge251bWJlcltdW119IHBvaW50cyBhcnJheSBleC4gW1syMCwgMzBdLCBbNTAsIDYwXV1cbiAqL1xudmFyIHBhcnNlUG9pbnRzID0gZnVuY3Rpb24gcGFyc2VQb2ludHMocG9pbnRzKSB7XG4gIHZhciB2YWx1ZXMgPSAocG9pbnRzIHx8ICcnKS50cmltKCkucmVwbGFjZSgvLC9nLCAnICcpLnJlcGxhY2UoLyhcXGQpLShcXGQpL2csICckMSAtJDInKS5zcGxpdCgvXFxzKy8pO1xuICBpZiAodmFsdWVzLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICB2YWx1ZXMgPSB2YWx1ZXMuc2xpY2UoMCwgLTEpO1xuICB9XG4gIHZhciBtYXBwZWRWYWx1ZXMgPSB2YWx1ZXMubWFwKHBhcnNlRmxvYXQpO1xuICByZXR1cm4gcGFpcnMobWFwcGVkVmFsdWVzKTtcbn07XG5cbnZhciBkcmF3UG9seWxpbmUgPSBmdW5jdGlvbiBkcmF3UG9seWxpbmUoY3R4LCBwb2ludHMpIHtcbiAgaWYgKHBvaW50cy5sZW5ndGggPiAwKSB7XG4gICAgY3R4Lm1vdmVUbyhwb2ludHNbMF1bMF0sIHBvaW50c1swXVsxXSk7XG4gICAgcG9pbnRzLnNsaWNlKDEpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgIHJldHVybiBjdHgubGluZVRvKHBbMF0sIHBbMV0pO1xuICAgIH0pO1xuICB9XG59O1xudmFyIHJlbmRlclBvbHlsaW5lID0gZnVuY3Rpb24gcmVuZGVyUG9seWxpbmUoY3R4LCBub2RlKSB7XG4gIHZhciBwb2ludHMgPSBwYXJzZVBvaW50cyhub2RlLnByb3BzLnBvaW50cyB8fCAnJyk7XG4gIGRyYXdQb2x5bGluZShjdHgsIHBvaW50cyk7XG59O1xuXG52YXIgcmVuZGVyUG9seWdvbiA9IGZ1bmN0aW9uIHJlbmRlclBvbHlnb24oY3R4LCBub2RlKSB7XG4gIHJlbmRlclBvbHlsaW5lKGN0eCwgbm9kZSk7XG4gIGN0eC5jbG9zZVBhdGgoKTtcbn07XG5cbnZhciByZW5kZXJJbWFnZSQxID0gZnVuY3Rpb24gcmVuZGVySW1hZ2UoY3R4LCBub2RlKSB7XG4gIGlmICghbm9kZS5pbWFnZS5kYXRhKSByZXR1cm47XG4gIHZhciBfbm9kZSRwcm9wcyA9IG5vZGUucHJvcHMsXG4gICAgeCA9IF9ub2RlJHByb3BzLngsXG4gICAgeSA9IF9ub2RlJHByb3BzLnk7XG4gIHZhciBfbm9kZSRzdHlsZSA9IG5vZGUuc3R5bGUsXG4gICAgd2lkdGggPSBfbm9kZSRzdHlsZS53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRzdHlsZS5oZWlnaHQsXG4gICAgb3BhY2l0eSA9IF9ub2RlJHN0eWxlLm9wYWNpdHk7XG4gIHZhciBwYWRkaW5nVG9wID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgdmFyIHBhZGRpbmdMZWZ0ID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgaWYgKHdpZHRoID09PSAwIHx8IGhlaWdodCA9PT0gMCkge1xuICAgIGNvbnNvbGUud2FybihcIkltYWdlIHdpdGggc3JjICdcIiArIG5vZGUucHJvcHMuaHJlZiArIFwiJyBza2lwcGVkIGR1ZSB0byBpbnZhbGlkIGRpbWVuc2lvbnNcIik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC5maWxsT3BhY2l0eShvcGFjaXR5IHx8IDEpLmltYWdlKG5vZGUuaW1hZ2UuZGF0YSwgeCArIHBhZGRpbmdMZWZ0LCB5ICsgcGFkZGluZ1RvcCwge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodFxuICB9KTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbi8vIFRoaXMgY29uc3RhbnQgaXMgdXNlZCB0byBhcHByb3hpbWF0ZSBhIHN5bW1ldHJpY2FsIGFyYyB1c2luZyBhIGN1YmljXG4vLyBCZXppZXIgY3VydmUuXG52YXIgS0FQUEEkMSA9IDQuMCAqICgoTWF0aC5zcXJ0KDIpIC0gMS4wKSAvIDMuMCk7XG52YXIgY2xpcE5vZGUgPSBmdW5jdGlvbiBjbGlwTm9kZShjdHgsIG5vZGUpIHtcbiAgaWYgKCFub2RlLnN0eWxlKSByZXR1cm47XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB0b3AgPSBfbm9kZSRib3gudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gubGVmdCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0O1xuICB2YXIgX25vZGUkc3R5bGUgPSBub2RlLnN0eWxlLFxuICAgIF9ub2RlJHN0eWxlJGJvcmRlclRvcCA9IF9ub2RlJHN0eWxlLmJvcmRlclRvcExlZnRSYWRpdXMsXG4gICAgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IF9ub2RlJHN0eWxlJGJvcmRlclRvcCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJHN0eWxlJGJvcmRlclRvcCxcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJUb3AyID0gX25vZGUkc3R5bGUuYm9yZGVyVG9wUmlnaHRSYWRpdXMsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXMgPSBfbm9kZSRzdHlsZSRib3JkZXJUb3AyID09PSB2b2lkIDAgPyAwIDogX25vZGUkc3R5bGUkYm9yZGVyVG9wMixcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJCb3QgPSBfbm9kZSRzdHlsZS5ib3JkZXJCb3R0b21SaWdodFJhZGl1cyxcbiAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1cyA9IF9ub2RlJHN0eWxlJGJvcmRlckJvdCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJHN0eWxlJGJvcmRlckJvdCxcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJCb3QyID0gX25vZGUkc3R5bGUuYm9yZGVyQm90dG9tTGVmdFJhZGl1cyxcbiAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzID0gX25vZGUkc3R5bGUkYm9yZGVyQm90MiA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJHN0eWxlJGJvcmRlckJvdDI7XG5cbiAgLy8gQm9yZGVyIHRvcFxuICB2YXIgcnRyID0gTWF0aC5taW4oYm9yZGVyVG9wUmlnaHRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICB2YXIgY3RyID0gcnRyICogKDEuMCAtIEtBUFBBJDEpO1xuICBjdHgubW92ZVRvKGxlZnQgKyBydHIsIHRvcCk7XG4gIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gcnRyLCB0b3ApO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjdHIsIHRvcCwgbGVmdCArIHdpZHRoLCB0b3AgKyBjdHIsIGxlZnQgKyB3aWR0aCwgdG9wICsgcnRyKTtcblxuICAvLyBCb3JkZXIgcmlnaHRcbiAgdmFyIHJiciA9IE1hdGgubWluKGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzLCAwLjUgKiB3aWR0aCwgMC41ICogaGVpZ2h0KTtcbiAgdmFyIGNiciA9IHJiciAqICgxLjAgLSBLQVBQQSQxKTtcbiAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIHJicik7XG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gY2JyLCBsZWZ0ICsgd2lkdGggLSBjYnIsIHRvcCArIGhlaWdodCwgbGVmdCArIHdpZHRoIC0gcmJyLCB0b3AgKyBoZWlnaHQpO1xuXG4gIC8vIEJvcmRlciBib3R0b21cbiAgdmFyIHJibCA9IE1hdGgubWluKGJvcmRlckJvdHRvbUxlZnRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICB2YXIgY2JsID0gcmJsICogKDEuMCAtIEtBUFBBJDEpO1xuICBjdHgubGluZVRvKGxlZnQgKyByYmwsIHRvcCArIGhlaWdodCk7XG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBjYmwsIHRvcCArIGhlaWdodCwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gY2JsLCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuXG4gIC8vIEJvcmRlciBsZWZ0XG4gIHZhciBydGwgPSBNYXRoLm1pbihib3JkZXJUb3BMZWZ0UmFkaXVzLCAwLjUgKiB3aWR0aCwgMC41ICogaGVpZ2h0KTtcbiAgdmFyIGN0bCA9IHJ0bCAqICgxLjAgLSBLQVBQQSQxKTtcbiAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBydGwpO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0LCB0b3AgKyBjdGwsIGxlZnQgKyBjdGwsIHRvcCwgbGVmdCArIHJ0bCwgdG9wKTtcbiAgY3R4LmNsb3NlUGF0aCgpO1xuICBjdHguY2xpcCgpO1xufTtcblxudmFyIGFwcGx5U2luZ2xlVHJhbnNmb3JtYXRpb24gPSBmdW5jdGlvbiBhcHBseVNpbmdsZVRyYW5zZm9ybWF0aW9uKGN0eCwgdHJhbnNmb3JtLCBvcmlnaW4pIHtcbiAgdmFyIG9wZXJhdGlvbiA9IHRyYW5zZm9ybS5vcGVyYXRpb24sXG4gICAgdmFsdWUgPSB0cmFuc2Zvcm0udmFsdWU7XG4gIHN3aXRjaCAob3BlcmF0aW9uKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAge1xuICAgICAgICB2YXIgc2NhbGVYID0gdmFsdWVbMF0sXG4gICAgICAgICAgc2NhbGVZID0gdmFsdWVbMV07XG4gICAgICAgIGN0eC5zY2FsZShzY2FsZVgsIHNjYWxlWSwge1xuICAgICAgICAgIG9yaWdpbjogb3JpZ2luXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICBjYXNlICdyb3RhdGUnOlxuICAgICAge1xuICAgICAgICB2YXIgYW5nbGUgPSB2YWx1ZVswXTtcbiAgICAgICAgY3R4LnJvdGF0ZShhbmdsZSwge1xuICAgICAgICAgIG9yaWdpbjogb3JpZ2luXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICBjYXNlICd0cmFuc2xhdGUnOlxuICAgICAge1xuICAgICAgICB2YXIgeCA9IHZhbHVlWzBdLFxuICAgICAgICAgIF92YWx1ZSQgPSB2YWx1ZVsxXSxcbiAgICAgICAgICB5ID0gX3ZhbHVlJCA9PT0gdm9pZCAwID8gMCA6IF92YWx1ZSQ7XG4gICAgICAgIGN0eC50cmFuc2xhdGUoeCwgeSwge1xuICAgICAgICAgIG9yaWdpbjogb3JpZ2luXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICBjYXNlICdza2V3JzpcbiAgICAgIHtcbiAgICAgICAgdmFyIHhBbmdsZSA9IHZhbHVlWzBdLFxuICAgICAgICAgIHlBbmdsZSA9IHZhbHVlWzFdO1xuICAgICAgICBjdHguc2tldyh4QW5nbGUsIHlBbmdsZSwge1xuICAgICAgICAgIG9yaWdpbjogb3JpZ2luXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICBjYXNlICdtYXRyaXgnOlxuICAgICAge1xuICAgICAgICBjdHgudHJhbnNmb3JtLmFwcGx5KGN0eCwgdmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiVHJhbnNmb3JtIG9wZXJhdGlvbjogJ1wiICsgb3BlcmF0aW9uICsgXCInIGRvZXNuJ3Qgc3VwcG9ydGVkXCIpO1xuICAgICAgfVxuICB9XG59O1xudmFyIGFwcGx5VHJhbnNmb3JtYXRpb25zID0gZnVuY3Rpb24gYXBwbHlUcmFuc2Zvcm1hdGlvbnMoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRzdHlsZSwgX25vZGUkcHJvcHM7XG4gIGlmICghbm9kZS5vcmlnaW4pIHJldHVybjtcbiAgdmFyIG9yaWdpbiA9IFtub2RlLm9yaWdpbi5sZWZ0LCBub2RlLm9yaWdpbi50b3BdO1xuICB2YXIgb3BlcmF0aW9ucyA9ICgoX25vZGUkc3R5bGUgPSBub2RlLnN0eWxlKSA9PT0gbnVsbCB8fCBfbm9kZSRzdHlsZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkc3R5bGUudHJhbnNmb3JtKSB8fCAoKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzLnRyYW5zZm9ybSkgfHwgW107XG4gIG9wZXJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAob3BlcmF0aW9uKSB7XG4gICAgYXBwbHlTaW5nbGVUcmFuc2Zvcm1hdGlvbihjdHgsIG9wZXJhdGlvbiwgb3JpZ2luKTtcbiAgfSk7XG59O1xuXG52YXIgX2JvdW5kaW5nQm94Rm5zO1xuXG4vLyBGcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9keS9zdmctcGF0aC1ib3VuZHMvYmxvYi9tYXN0ZXIvaW5kZXguanNcbnZhciBnZXRQYXRoQm91bmRpbmdCb3ggPSBmdW5jdGlvbiBnZXRQYXRoQm91bmRpbmdCb3gobm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHM7XG4gIHZhciBwYXRoID0gbm9ybWFsaXplUGF0aChhYnNQYXRoKHBhcnNlUGF0aCgoKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzLmQpIHx8ICcnKSkpO1xuICBpZiAoIXBhdGgubGVuZ3RoKSByZXR1cm4gWzAsIDAsIDAsIDBdO1xuICB2YXIgYm91bmRzID0gW0luZmluaXR5LCBJbmZpbml0eSwgLUluZmluaXR5LCAtSW5maW5pdHldO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHBhdGgubGVuZ3RoOyBpIDwgbDsgaSArPSAxKSB7XG4gICAgdmFyIHBvaW50cyA9IHBhdGhbaV0uc2xpY2UoMSk7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBwb2ludHMubGVuZ3RoOyBqICs9IDIpIHtcbiAgICAgIGlmIChwb2ludHNbaiArIDBdIDwgYm91bmRzWzBdKSBib3VuZHNbMF0gPSBwb2ludHNbaiArIDBdO1xuICAgICAgaWYgKHBvaW50c1tqICsgMV0gPCBib3VuZHNbMV0pIGJvdW5kc1sxXSA9IHBvaW50c1tqICsgMV07XG4gICAgICBpZiAocG9pbnRzW2ogKyAwXSA+IGJvdW5kc1syXSkgYm91bmRzWzJdID0gcG9pbnRzW2ogKyAwXTtcbiAgICAgIGlmIChwb2ludHNbaiArIDFdID4gYm91bmRzWzNdKSBib3VuZHNbM10gPSBwb2ludHNbaiArIDFdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRzO1xufTtcbnZhciBnZXRDaXJjbGVCb3VuZGluZ0JveCA9IGZ1bmN0aW9uIGdldENpcmNsZUJvdW5kaW5nQm94KG5vZGUpIHtcbiAgdmFyIF9ub2RlJHByb3BzMiwgX25vZGUkcHJvcHMzLCBfbm9kZSRwcm9wczQ7XG4gIHZhciByID0gKChfbm9kZSRwcm9wczIgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMi5yKSB8fCAwO1xuICB2YXIgY3ggPSAoKF9ub2RlJHByb3BzMyA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMzLmN4KSB8fCAwO1xuICB2YXIgY3kgPSAoKF9ub2RlJHByb3BzNCA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHM0LmN5KSB8fCAwO1xuICByZXR1cm4gW2N4IC0gciwgY3kgLSByLCBjeCArIHIsIGN5ICsgcl07XG59O1xudmFyIGdldEVsbGlwc2VCb3VuZGluZ0JveCA9IGZ1bmN0aW9uIGdldEVsbGlwc2VCb3VuZGluZ0JveChub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczUsIF9ub2RlJHByb3BzNiwgX25vZGUkcHJvcHM3LCBfbm9kZSRwcm9wczg7XG4gIHZhciBjeCA9ICgoX25vZGUkcHJvcHM1ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczUuY3gpIHx8IDA7XG4gIHZhciBjeSA9ICgoX25vZGUkcHJvcHM2ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczYuY3kpIHx8IDA7XG4gIHZhciByeCA9ICgoX25vZGUkcHJvcHM3ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM3ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczcucngpIHx8IDA7XG4gIHZhciByeSA9ICgoX25vZGUkcHJvcHM4ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczgucnkpIHx8IDA7XG4gIHJldHVybiBbY3ggLSByeCwgY3kgLSByeSwgY3ggKyByeCwgY3kgKyByeV07XG59O1xudmFyIGdldExpbmVCb3VuZGluZ0JveCA9IGZ1bmN0aW9uIGdldExpbmVCb3VuZGluZ0JveChub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczksIF9ub2RlJHByb3BzMTAsIF9ub2RlJHByb3BzMTEsIF9ub2RlJHByb3BzMTI7XG4gIHZhciB4MSA9ICgoX25vZGUkcHJvcHM5ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczkueDEpIHx8IDA7XG4gIHZhciB5MSA9ICgoX25vZGUkcHJvcHMxMCA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTAueTEpIHx8IDA7XG4gIHZhciB4MiA9ICgoX25vZGUkcHJvcHMxMSA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTEueDIpIHx8IDA7XG4gIHZhciB5MiA9ICgoX25vZGUkcHJvcHMxMiA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTIueTIpIHx8IDA7XG4gIHJldHVybiBbTWF0aC5taW4oeDEsIHgyKSwgTWF0aC5taW4oeTEsIHkyKSwgTWF0aC5tYXgoeDEsIHgyKSwgTWF0aC5tYXgoeTEsIHkyKV07XG59O1xudmFyIGdldFJlY3RCb3VuZGluZ0JveCA9IGZ1bmN0aW9uIGdldFJlY3RCb3VuZGluZ0JveChub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczEzLCBfbm9kZSRwcm9wczE0LCBfbm9kZSRwcm9wczE1LCBfbm9kZSRwcm9wczE2O1xuICB2YXIgeCA9ICgoX25vZGUkcHJvcHMxMyA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTMueCkgfHwgMDtcbiAgdmFyIHkgPSAoKF9ub2RlJHByb3BzMTQgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczE0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczE0LnkpIHx8IDA7XG4gIHZhciB3aWR0aCA9ICgoX25vZGUkcHJvcHMxNSA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTUud2lkdGgpIHx8IDA7XG4gIHZhciBoZWlnaHQgPSAoKF9ub2RlJHByb3BzMTYgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczE2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczE2LmhlaWdodCkgfHwgMDtcbiAgcmV0dXJuIFt4LCB5LCB4ICsgd2lkdGgsIHkgKyBoZWlnaHRdO1xufTtcbnZhciBtYXggPSBmdW5jdGlvbiBtYXgodmFsdWVzKSB7XG4gIHJldHVybiBNYXRoLm1heC5hcHBseShNYXRoLCBbLUluZmluaXR5XS5jb25jYXQodmFsdWVzKSk7XG59O1xudmFyIG1pbiA9IGZ1bmN0aW9uIG1pbih2YWx1ZXMpIHtcbiAgcmV0dXJuIE1hdGgubWluLmFwcGx5KE1hdGgsIFtJbmZpbml0eV0uY29uY2F0KHZhbHVlcykpO1xufTtcbnZhciBnZXRQb2x5bGluZUJvdW5kaW5nQm94ID0gZnVuY3Rpb24gZ2V0UG9seWxpbmVCb3VuZGluZ0JveChub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczE3O1xuICB2YXIgcG9pbnRzID0gcGFyc2VQb2ludHMoKChfbm9kZSRwcm9wczE3ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMxNyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMxNy5wb2ludHMpIHx8IFtdKTtcbiAgdmFyIHhWYWx1ZXMgPSBwb2ludHMubWFwKGZ1bmN0aW9uIChwKSB7XG4gICAgcmV0dXJuIHBbMF07XG4gIH0pO1xuICB2YXIgeVZhbHVlcyA9IHBvaW50cy5tYXAoZnVuY3Rpb24gKHApIHtcbiAgICByZXR1cm4gcFsxXTtcbiAgfSk7XG4gIHJldHVybiBbbWluKHhWYWx1ZXMpLCBtaW4oeVZhbHVlcyksIG1heCh4VmFsdWVzKSwgbWF4KHlWYWx1ZXMpXTtcbn07XG52YXIgYm91bmRpbmdCb3hGbnMgPSAoX2JvdW5kaW5nQm94Rm5zID0ge30sIF9ib3VuZGluZ0JveEZuc1tQLlJlY3RdID0gZ2V0UmVjdEJvdW5kaW5nQm94LCBfYm91bmRpbmdCb3hGbnNbUC5MaW5lXSA9IGdldExpbmVCb3VuZGluZ0JveCwgX2JvdW5kaW5nQm94Rm5zW1AuUGF0aF0gPSBnZXRQYXRoQm91bmRpbmdCb3gsIF9ib3VuZGluZ0JveEZuc1tQLkNpcmNsZV0gPSBnZXRDaXJjbGVCb3VuZGluZ0JveCwgX2JvdW5kaW5nQm94Rm5zW1AuRWxsaXBzZV0gPSBnZXRFbGxpcHNlQm91bmRpbmdCb3gsIF9ib3VuZGluZ0JveEZuc1tQLlBvbHlnb25dID0gZ2V0UG9seWxpbmVCb3VuZGluZ0JveCwgX2JvdW5kaW5nQm94Rm5zW1AuUG9seWxpbmVdID0gZ2V0UG9seWxpbmVCb3VuZGluZ0JveCwgX2JvdW5kaW5nQm94Rm5zKTtcbnZhciBnZXRCb3VuZGluZ0JveCA9IGZ1bmN0aW9uIGdldEJvdW5kaW5nQm94KG5vZGUpIHtcbiAgdmFyIGJvdW5kaW5nQm94Rm4gPSBib3VuZGluZ0JveEZuc1tub2RlLnR5cGVdO1xuICByZXR1cm4gYm91bmRpbmdCb3hGbiA/IGJvdW5kaW5nQm94Rm4obm9kZSkgOiBbMCwgMCwgMCwgMF07XG59O1xuXG52YXIgX3JlbmRlckZucyQxO1xudmFyIHNldFN0cm9rZVdpZHRoID0gZnVuY3Rpb24gc2V0U3Ryb2tlV2lkdGgoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wcztcbiAgdmFyIGxpbmVXaWR0aCA9ICgoX25vZGUkcHJvcHMgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMuc3Ryb2tlV2lkdGgpIHx8IDA7XG4gIGlmIChsaW5lV2lkdGgpIGN0eC5saW5lV2lkdGgobGluZVdpZHRoKTtcbn07XG52YXIgc2V0U3Ryb2tlQ29sb3IgPSBmdW5jdGlvbiBzZXRTdHJva2VDb2xvcihjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHByb3BzMjtcbiAgdmFyIHN0cm9rZUNvbG9yID0gKChfbm9kZSRwcm9wczIgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMi5zdHJva2UpIHx8IG51bGw7XG4gIGlmIChzdHJva2VDb2xvcikgY3R4LnN0cm9rZUNvbG9yKHN0cm9rZUNvbG9yKTtcbn07XG52YXIgc2V0T3BhY2l0eSA9IGZ1bmN0aW9uIHNldE9wYWNpdHkoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczM7XG4gIHZhciBvcGFjaXR5ID0gKChfbm9kZSRwcm9wczMgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMy5vcGFjaXR5KSB8fCBudWxsO1xuICBpZiAoIWlzTmlsKG9wYWNpdHkpKSBjdHgub3BhY2l0eShvcGFjaXR5KTtcbn07XG52YXIgc2V0RmlsbE9wYWNpdHkgPSBmdW5jdGlvbiBzZXRGaWxsT3BhY2l0eShjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHByb3BzNDtcbiAgdmFyIGZpbGxPcGFjaXR5ID0gKChfbm9kZSRwcm9wczQgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzNC5maWxsT3BhY2l0eSkgfHwgbnVsbDtcbiAgaWYgKCFpc05pbChmaWxsT3BhY2l0eSkpIGN0eC5maWxsT3BhY2l0eShmaWxsT3BhY2l0eSk7XG59O1xudmFyIHNldFN0cm9rZU9wYWNpdHkgPSBmdW5jdGlvbiBzZXRTdHJva2VPcGFjaXR5KGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHM1O1xuICB2YXIgc3Ryb2tlT3BhY2l0eSA9ICgoX25vZGUkcHJvcHM1ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczUuc3Ryb2tlT3BhY2l0eSkgfHwgbnVsbDtcbiAgaWYgKCFpc05pbChzdHJva2VPcGFjaXR5KSkgY3R4LnN0cm9rZU9wYWNpdHkoc3Ryb2tlT3BhY2l0eSk7XG59O1xudmFyIHNldExpbmVKb2luID0gZnVuY3Rpb24gc2V0TGluZUpvaW4oY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczY7XG4gIHZhciBsaW5lSm9pbiA9ICgoX25vZGUkcHJvcHM2ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczYuc3Ryb2tlTGluZWpvaW4pIHx8IG51bGw7XG4gIGlmIChsaW5lSm9pbikgY3R4LmxpbmVKb2luKGxpbmVKb2luKTtcbn07XG52YXIgc2V0TGluZUNhcCA9IGZ1bmN0aW9uIHNldExpbmVDYXAoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczc7XG4gIHZhciBsaW5lQ2FwID0gKChfbm9kZSRwcm9wczcgPSBub2RlLnByb3BzKSA9PT0gbnVsbCB8fCBfbm9kZSRwcm9wczcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzNy5zdHJva2VMaW5lY2FwKSB8fCBudWxsO1xuICBpZiAobGluZUNhcCkgY3R4LmxpbmVDYXAobGluZUNhcCk7XG59O1xudmFyIHNldExpbmVEYXNoID0gZnVuY3Rpb24gc2V0TGluZURhc2goY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczg7XG4gIHZhciB2YWx1ZSA9ICgoX25vZGUkcHJvcHM4ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczguc3Ryb2tlRGFzaGFycmF5KSB8fCBudWxsO1xuICBpZiAodmFsdWUpIGN0eC5kYXNoKHZhbHVlLnNwbGl0KCcsJykubWFwKE51bWJlcikpO1xufTtcbnZhciBoYXNMaW5lYXJHcmFkaWVudEZpbGwgPSBmdW5jdGlvbiBoYXNMaW5lYXJHcmFkaWVudEZpbGwobm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHM5LCBfbm9kZSRwcm9wczkkZmlsbDtcbiAgcmV0dXJuICgoX25vZGUkcHJvcHM5ID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHM5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX25vZGUkcHJvcHM5JGZpbGwgPSBfbm9kZSRwcm9wczkuZmlsbCkgPT09IG51bGwgfHwgX25vZGUkcHJvcHM5JGZpbGwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzOSRmaWxsLnR5cGUpID09PSBQLkxpbmVhckdyYWRpZW50O1xufTtcbnZhciBoYXNSYWRpYWxHcmFkaWVudEZpbGwgPSBmdW5jdGlvbiBoYXNSYWRpYWxHcmFkaWVudEZpbGwobm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHMxMCwgX25vZGUkcHJvcHMxMCRmaWxsO1xuICByZXR1cm4gKChfbm9kZSRwcm9wczEwID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMxMCA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9ub2RlJHByb3BzMTAkZmlsbCA9IF9ub2RlJHByb3BzMTAuZmlsbCkgPT09IG51bGwgfHwgX25vZGUkcHJvcHMxMCRmaWxsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wczEwJGZpbGwudHlwZSkgPT09IFAuUmFkaWFsR3JhZGllbnQ7XG59O1xuXG4vLyBNYXRoIHNpbXBsaWZpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZGV2b25nb3ZldHQvc3Zna2l0L2Jsb2IvbWFzdGVyL3NyYy9lbGVtZW50cy9TVkdHcmFkaWVudC5qcyNMMTA0XG52YXIgc2V0TGluZWFyR3JhZGllbnRGaWxsID0gZnVuY3Rpb24gc2V0TGluZWFyR3JhZGllbnRGaWxsKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHMxMTtcbiAgdmFyIGJib3ggPSBnZXRCb3VuZGluZ0JveChub2RlKTtcbiAgdmFyIGdyYWRpZW50ID0gKChfbm9kZSRwcm9wczExID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMxMSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkcHJvcHMxMS5maWxsKSB8fCBudWxsO1xuICB2YXIgeDEgPSBncmFkaWVudC5wcm9wcy54MSB8fCAwO1xuICB2YXIgeTEgPSBncmFkaWVudC5wcm9wcy55MSB8fCAwO1xuICB2YXIgeDIgPSBncmFkaWVudC5wcm9wcy54MiB8fCAxO1xuICB2YXIgeTIgPSBncmFkaWVudC5wcm9wcy55MiB8fCAwO1xuICB2YXIgbTAgPSBiYm94WzJdIC0gYmJveFswXTtcbiAgdmFyIG0zID0gYmJveFszXSAtIGJib3hbMV07XG4gIHZhciBtNCA9IGJib3hbMF07XG4gIHZhciBtNSA9IGJib3hbMV07XG4gIHZhciBneDEgPSBtMCAqIHgxICsgbTQ7XG4gIHZhciBneTEgPSBtMyAqIHkxICsgbTU7XG4gIHZhciBneDIgPSBtMCAqIHgyICsgbTQ7XG4gIHZhciBneTIgPSBtMyAqIHkyICsgbTU7XG4gIHZhciBncmFkID0gY3R4LmxpbmVhckdyYWRpZW50KGd4MSwgZ3kxLCBneDIsIGd5Mik7XG4gIGdyYWRpZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKHN0b3ApIHtcbiAgICBncmFkLnN0b3Aoc3RvcC5wcm9wcy5vZmZzZXQsIHN0b3AucHJvcHMuc3RvcENvbG9yLCBzdG9wLnByb3BzLnN0b3BPcGFjaXR5KTtcbiAgfSk7XG4gIGN0eC5maWxsKGdyYWQpO1xufTtcblxuLy8gTWF0aCBzaW1wbGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2Rldm9uZ292ZXR0L3N2Z2tpdC9ibG9iL21hc3Rlci9zcmMvZWxlbWVudHMvU1ZHR3JhZGllbnQuanMjTDE1NVxudmFyIHNldFJhZGlhbEdyYWRpZW50RmlsbCA9IGZ1bmN0aW9uIHNldFJhZGlhbEdyYWRpZW50RmlsbChjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHByb3BzMTI7XG4gIHZhciBiYm94ID0gZ2V0Qm91bmRpbmdCb3gobm9kZSk7XG4gIHZhciBncmFkaWVudCA9ICgoX25vZGUkcHJvcHMxMiA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTIuZmlsbCkgfHwgbnVsbDtcbiAgdmFyIGN4ID0gZ3JhZGllbnQucHJvcHMuY3ggfHwgMC41O1xuICB2YXIgY3kgPSBncmFkaWVudC5wcm9wcy5jeSB8fCAwLjU7XG4gIHZhciBmeCA9IGdyYWRpZW50LnByb3BzLmZ4IHx8IGN4O1xuICB2YXIgZnkgPSBncmFkaWVudC5wcm9wcy5meSB8fCBjeTtcbiAgdmFyIHIgPSBncmFkaWVudC5wcm9wcy5yIHx8IDAuNTtcbiAgdmFyIG0wID0gYmJveFsyXSAtIGJib3hbMF07XG4gIHZhciBtMyA9IGJib3hbM10gLSBiYm94WzFdO1xuICB2YXIgbTQgPSBiYm94WzBdO1xuICB2YXIgbTUgPSBiYm94WzFdO1xuICB2YXIgZ3IgPSByICogbTA7XG4gIHZhciBnY3ggPSBtMCAqIGN4ICsgbTQ7XG4gIHZhciBnY3kgPSBtMyAqIGN5ICsgbTU7XG4gIHZhciBnZnggPSBtMCAqIGZ4ICsgbTQ7XG4gIHZhciBnZnkgPSBtMyAqIGZ5ICsgbTU7XG4gIHZhciBncmFkID0gY3R4LnJhZGlhbEdyYWRpZW50KGdmeCwgZ2Z5LCAwLCBnY3gsIGdjeSwgZ3IpO1xuICBncmFkaWVudC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChzdG9wKSB7XG4gICAgZ3JhZC5zdG9wKHN0b3AucHJvcHMub2Zmc2V0LCBzdG9wLnByb3BzLnN0b3BDb2xvciwgc3RvcC5wcm9wcy5zdG9wT3BhY2l0eSk7XG4gIH0pO1xuICBjdHguZmlsbChncmFkKTtcbn07XG52YXIgc2V0RmlsbENvbG9yID0gZnVuY3Rpb24gc2V0RmlsbENvbG9yKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHMxMztcbiAgdmFyIGZpbGxDb2xvciA9ICgoX25vZGUkcHJvcHMxMyA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTMuZmlsbCkgfHwgbnVsbDtcbiAgaWYgKGZpbGxDb2xvcikgY3R4LmZpbGxDb2xvcihmaWxsQ29sb3IpO1xufTtcbnZhciBzZXRGaWxsID0gZnVuY3Rpb24gc2V0RmlsbChjdHgsIG5vZGUpIHtcbiAgaWYgKGhhc0xpbmVhckdyYWRpZW50RmlsbChub2RlKSkgcmV0dXJuIHNldExpbmVhckdyYWRpZW50RmlsbChjdHgsIG5vZGUpO1xuICBpZiAoaGFzUmFkaWFsR3JhZGllbnRGaWxsKG5vZGUpKSByZXR1cm4gc2V0UmFkaWFsR3JhZGllbnRGaWxsKGN0eCwgbm9kZSk7XG4gIHJldHVybiBzZXRGaWxsQ29sb3IoY3R4LCBub2RlKTtcbn07XG52YXIgZHJhdyA9IGZ1bmN0aW9uIGRyYXcoY3R4LCBub2RlKSB7XG4gIHZhciBwcm9wcyA9IG5vZGUucHJvcHMgfHwge307XG4gIGlmIChwcm9wcy5maWxsICYmIHByb3BzLnN0cm9rZSkge1xuICAgIGN0eC5maWxsQW5kU3Ryb2tlKHByb3BzLmZpbGxSdWxlKTtcbiAgfSBlbHNlIGlmIChwcm9wcy5maWxsKSB7XG4gICAgY3R4LmZpbGwocHJvcHMuZmlsbFJ1bGUpO1xuICB9IGVsc2UgaWYgKHByb3BzLnN0cm9rZSkge1xuICAgIGN0eC5zdHJva2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC5vcGFjaXR5KDApO1xuICAgIGN0eC5maWxsKG51bGwpO1xuICAgIGN0eC5yZXN0b3JlKCk7XG4gIH1cbn07XG52YXIgbm9vcCA9IGZ1bmN0aW9uIG5vb3AoKSB7fTtcbnZhciByZW5kZXJGbnMkMSA9IChfcmVuZGVyRm5zJDEgPSB7fSwgX3JlbmRlckZucyQxW1AuVHNwYW5dID0gbm9vcCwgX3JlbmRlckZucyQxW1AuVGV4dEluc3RhbmNlXSA9IG5vb3AsIF9yZW5kZXJGbnMkMVtQLlBhdGhdID0gcmVuZGVyUGF0aCwgX3JlbmRlckZucyQxW1AuUmVjdF0gPSByZW5kZXJSZWN0LCBfcmVuZGVyRm5zJDFbUC5MaW5lXSA9IHJlbmRlckxpbmUkMSwgX3JlbmRlckZucyQxW1AuR10gPSByZW5kZXJHcm91cCwgX3JlbmRlckZucyQxW1AuVGV4dF0gPSByZW5kZXJTdmdUZXh0LCBfcmVuZGVyRm5zJDFbUC5DaXJjbGVdID0gcmVuZGVyQ2lyY2xlLCBfcmVuZGVyRm5zJDFbUC5JbWFnZV0gPSByZW5kZXJJbWFnZSQxLCBfcmVuZGVyRm5zJDFbUC5FbGxpcHNlXSA9IHJlbmRlckVsbGlwc2UsIF9yZW5kZXJGbnMkMVtQLlBvbHlnb25dID0gcmVuZGVyUG9seWdvbiwgX3JlbmRlckZucyQxW1AuUG9seWxpbmVdID0gcmVuZGVyUG9seWxpbmUsIF9yZW5kZXJGbnMkMSk7XG52YXIgcmVuZGVyTm9kZSQxID0gZnVuY3Rpb24gcmVuZGVyTm9kZShjdHgsIG5vZGUpIHtcbiAgdmFyIHJlbmRlckZuID0gcmVuZGVyRm5zJDFbbm9kZS50eXBlXTtcbiAgaWYgKHJlbmRlckZucyQxKSB7XG4gICAgcmVuZGVyRm4oY3R4LCBub2RlKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLndhcm4oXCJTVkcgbm9kZSBvZiB0eXBlIFwiICsgbm9kZS50eXBlICsgXCIgaXMgbm90IGN1cnJlbnR5IHN1cHBvcnRlZFwiKTtcbiAgfVxufTtcbnZhciBkcmF3Tm9kZSA9IGZ1bmN0aW9uIGRyYXdOb2RlKGN0eCwgbm9kZSkge1xuICBzZXRMaW5lQ2FwKGN0eCwgbm9kZSk7XG4gIHNldExpbmVEYXNoKGN0eCwgbm9kZSk7XG4gIHNldExpbmVKb2luKGN0eCwgbm9kZSk7XG4gIHNldFN0cm9rZVdpZHRoKGN0eCwgbm9kZSk7XG4gIHNldFN0cm9rZUNvbG9yKGN0eCwgbm9kZSk7XG4gIHNldEZpbGwoY3R4LCBub2RlKTtcbiAgc2V0U3Ryb2tlT3BhY2l0eShjdHgsIG5vZGUpO1xuICBzZXRGaWxsT3BhY2l0eShjdHgsIG5vZGUpO1xuICBzZXRPcGFjaXR5KGN0eCwgbm9kZSk7XG4gIGFwcGx5VHJhbnNmb3JtYXRpb25zKGN0eCwgbm9kZSk7XG4gIHJlbmRlck5vZGUkMShjdHgsIG5vZGUpO1xuICBkcmF3KGN0eCwgbm9kZSk7XG59O1xudmFyIGNsaXBQYXRoID0gZnVuY3Rpb24gY2xpcFBhdGgoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wczE0O1xuICB2YXIgdmFsdWUgPSAoX25vZGUkcHJvcHMxNCA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzMTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzMTQuY2xpcFBhdGg7XG4gIGlmICh2YWx1ZSkge1xuICAgIHZhciBjaGlsZHJlbiA9IHZhbHVlLmNoaWxkcmVuIHx8IFtdO1xuICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICByZXR1cm4gcmVuZGVyTm9kZSQxKGN0eCwgY2hpbGQpO1xuICAgIH0pO1xuICAgIGN0eC5jbGlwKCk7XG4gIH1cbn07XG52YXIgZHJhd0NoaWxkcmVuID0gZnVuY3Rpb24gZHJhd0NoaWxkcmVuKGN0eCwgbm9kZSkge1xuICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuIHx8IFtdO1xuICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgIGN0eC5zYXZlKCk7XG4gICAgY2xpcFBhdGgoY3R4LCBjaGlsZCk7XG4gICAgZHJhd05vZGUoY3R4LCBjaGlsZCk7XG4gICAgZHJhd0NoaWxkcmVuKGN0eCwgY2hpbGQpO1xuICAgIGN0eC5yZXN0b3JlKCk7XG4gIH0pO1xufTtcbnZhciByZXNvbHZlQXNwZWN0UmF0aW8gPSBmdW5jdGlvbiByZXNvbHZlQXNwZWN0UmF0aW8oY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0O1xuICB2YXIgX25vZGUkcHJvcHMxNSA9IG5vZGUucHJvcHMsXG4gICAgdmlld0JveCA9IF9ub2RlJHByb3BzMTUudmlld0JveCxcbiAgICBfbm9kZSRwcm9wczE1JHByZXNlcnYgPSBfbm9kZSRwcm9wczE1LnByZXNlcnZlQXNwZWN0UmF0aW8sXG4gICAgcHJlc2VydmVBc3BlY3RSYXRpbyA9IF9ub2RlJHByb3BzMTUkcHJlc2VydiA9PT0gdm9pZCAwID8ge30gOiBfbm9kZSRwcm9wczE1JHByZXNlcnY7XG4gIHZhciBfcHJlc2VydmVBc3BlY3RSYXRpbyQgPSBwcmVzZXJ2ZUFzcGVjdFJhdGlvLm1lZXRPclNsaWNlLFxuICAgIG1lZXRPclNsaWNlID0gX3ByZXNlcnZlQXNwZWN0UmF0aW8kID09PSB2b2lkIDAgPyAnbWVldCcgOiBfcHJlc2VydmVBc3BlY3RSYXRpbyQsXG4gICAgX3ByZXNlcnZlQXNwZWN0UmF0aW8kMiA9IHByZXNlcnZlQXNwZWN0UmF0aW8uYWxpZ24sXG4gICAgYWxpZ24gPSBfcHJlc2VydmVBc3BlY3RSYXRpbyQyID09PSB2b2lkIDAgPyAneE1pZFlNaWQnIDogX3ByZXNlcnZlQXNwZWN0UmF0aW8kMjtcbiAgaWYgKHZpZXdCb3ggPT0gbnVsbCB8fCB3aWR0aCA9PSBudWxsIHx8IGhlaWdodCA9PSBudWxsKSByZXR1cm47XG4gIHZhciB4ID0gKHZpZXdCb3ggPT09IG51bGwgfHwgdmlld0JveCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmlld0JveC5taW5YKSB8fCAwO1xuICB2YXIgeSA9ICh2aWV3Qm94ID09PSBudWxsIHx8IHZpZXdCb3ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZpZXdCb3gubWluWSkgfHwgMDtcbiAgdmFyIGxvZ2ljYWxXaWR0aCA9ICh2aWV3Qm94ID09PSBudWxsIHx8IHZpZXdCb3ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZpZXdCb3gubWF4WCkgfHwgd2lkdGg7XG4gIHZhciBsb2dpY2FsSGVpZ2h0ID0gKHZpZXdCb3ggPT09IG51bGwgfHwgdmlld0JveCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmlld0JveC5tYXhZKSB8fCBoZWlnaHQ7XG4gIHZhciBsb2dpY2FsUmF0aW8gPSBsb2dpY2FsV2lkdGggLyBsb2dpY2FsSGVpZ2h0O1xuICB2YXIgcGh5c2ljYWxSYXRpbyA9IHdpZHRoIC8gaGVpZ2h0O1xuICB2YXIgc2NhbGVYID0gd2lkdGggLyBsb2dpY2FsV2lkdGg7XG4gIHZhciBzY2FsZVkgPSBoZWlnaHQgLyBsb2dpY2FsSGVpZ2h0O1xuICBpZiAoYWxpZ24gPT09ICdub25lJykge1xuICAgIGN0eC5zY2FsZShzY2FsZVgsIHNjYWxlWSk7XG4gICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAobG9naWNhbFJhdGlvIDwgcGh5c2ljYWxSYXRpbyAmJiBtZWV0T3JTbGljZSA9PT0gJ21lZXQnIHx8IGxvZ2ljYWxSYXRpbyA+PSBwaHlzaWNhbFJhdGlvICYmIG1lZXRPclNsaWNlID09PSAnc2xpY2UnKSB7XG4gICAgY3R4LnNjYWxlKHNjYWxlWSwgc2NhbGVZKTtcbiAgICBzd2l0Y2ggKGFsaWduKSB7XG4gICAgICBjYXNlICd4TWluWU1pbic6XG4gICAgICBjYXNlICd4TWluWU1pZCc6XG4gICAgICBjYXNlICd4TWluWU1heCc6XG4gICAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd4TWlkWU1pbic6XG4gICAgICBjYXNlICd4TWlkWU1pZCc6XG4gICAgICBjYXNlICd4TWlkWU1heCc6XG4gICAgICAgIGN0eC50cmFuc2xhdGUoLXggLSAobG9naWNhbFdpZHRoIC0gd2lkdGggKiBsb2dpY2FsSGVpZ2h0IC8gaGVpZ2h0KSAvIDIsIC15KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjdHgudHJhbnNsYXRlKC14IC0gKGxvZ2ljYWxXaWR0aCAtIHdpZHRoICogbG9naWNhbEhlaWdodCAvIGhlaWdodCksIC15KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY3R4LnNjYWxlKHNjYWxlWCwgc2NhbGVYKTtcbiAgICBzd2l0Y2ggKGFsaWduKSB7XG4gICAgICBjYXNlICd4TWluWU1pbic6XG4gICAgICBjYXNlICd4TWlkWU1pbic6XG4gICAgICBjYXNlICd4TWF4WU1pbic6XG4gICAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd4TWluWU1pZCc6XG4gICAgICBjYXNlICd4TWlkWU1pZCc6XG4gICAgICBjYXNlICd4TWF4WU1pZCc6XG4gICAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15IC0gKGxvZ2ljYWxIZWlnaHQgLSBoZWlnaHQgKiBsb2dpY2FsV2lkdGggLyB3aWR0aCkgLyAyKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjdHgudHJhbnNsYXRlKC14LCAteSAtIChsb2dpY2FsSGVpZ2h0IC0gaGVpZ2h0ICogbG9naWNhbFdpZHRoIC8gd2lkdGgpKTtcbiAgICB9XG4gIH1cbn07XG52YXIgbW92ZVRvT3JpZ2luID0gZnVuY3Rpb24gbW92ZVRvT3JpZ2luKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkYm94MiA9IG5vZGUuYm94LFxuICAgIHRvcCA9IF9ub2RlJGJveDIudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gyLmxlZnQ7XG4gIHZhciBwYWRkaW5nTGVmdCA9IG5vZGUuYm94LnBhZGRpbmdMZWZ0IHx8IDA7XG4gIHZhciBwYWRkaW5nVG9wID0gbm9kZS5ib3gucGFkZGluZ1RvcCB8fCAwO1xuICBjdHgudHJhbnNsYXRlKGxlZnQgKyBwYWRkaW5nTGVmdCwgdG9wICsgcGFkZGluZ1RvcCk7XG59O1xudmFyIHJlbmRlclN2ZyA9IGZ1bmN0aW9uIHJlbmRlclN2ZyhjdHgsIG5vZGUpIHtcbiAgY3R4LnNhdmUoKTtcbiAgY2xpcE5vZGUoY3R4LCBub2RlKTtcbiAgbW92ZVRvT3JpZ2luKGN0eCwgbm9kZSk7XG4gIHJlc29sdmVBc3BlY3RSYXRpbyhjdHgsIG5vZGUpO1xuICBkcmF3Q2hpbGRyZW4oY3R4LCBub2RlKTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbnZhciBibGFjayA9IHtcbiAgdmFsdWU6IFswLCAwLCAwXSxcbiAgb3BhY2l0eTogMVxufTtcbnZhciBwYXJzZUNvbG9yID0gZnVuY3Rpb24gcGFyc2VDb2xvcihoZXgpIHtcbiAgdmFyIHBhcnNlZCA9IGNvbG9yU3RyaW5nLmdldChoZXgpO1xuICBpZiAoIXBhcnNlZCkgcmV0dXJuIGJsYWNrO1xuICB2YXIgdmFsdWUgPSBjb2xvclN0cmluZy50by5oZXgocGFyc2VkLnZhbHVlLnNsaWNlKDAsIDMpKTtcbiAgdmFyIG9wYWNpdHkgPSBwYXJzZWQudmFsdWVbM107XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IHZhbHVlLFxuICAgIG9wYWNpdHk6IG9wYWNpdHlcbiAgfTtcbn07XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovXG52YXIgREVTVF9SRUdFWFAgPSAvXiMuKy87XG52YXIgaXNTcmNJZCQxID0gZnVuY3Rpb24gaXNTcmNJZChzcmMpIHtcbiAgcmV0dXJuIHNyYy5tYXRjaChERVNUX1JFR0VYUCk7XG59O1xudmFyIHJlbmRlckF0dGFjaG1lbnQgPSBmdW5jdGlvbiByZW5kZXJBdHRhY2htZW50KGN0eCwgYXR0YWNobWVudCkge1xuICB2YXIgX2F0dGFjaG1lbnQkeE9mZnNldCA9IGF0dGFjaG1lbnQueE9mZnNldCxcbiAgICB4T2Zmc2V0ID0gX2F0dGFjaG1lbnQkeE9mZnNldCA9PT0gdm9pZCAwID8gMCA6IF9hdHRhY2htZW50JHhPZmZzZXQsXG4gICAgX2F0dGFjaG1lbnQkeU9mZnNldCA9IGF0dGFjaG1lbnQueU9mZnNldCxcbiAgICB5T2Zmc2V0ID0gX2F0dGFjaG1lbnQkeU9mZnNldCA9PT0gdm9pZCAwID8gMCA6IF9hdHRhY2htZW50JHlPZmZzZXQsXG4gICAgd2lkdGggPSBhdHRhY2htZW50LndpZHRoLFxuICAgIGhlaWdodCA9IGF0dGFjaG1lbnQuaGVpZ2h0LFxuICAgIGltYWdlID0gYXR0YWNobWVudC5pbWFnZTtcbiAgY3R4LnRyYW5zbGF0ZSgtd2lkdGggKyB4T2Zmc2V0LCAtaGVpZ2h0ICsgeU9mZnNldCk7XG4gIGN0eC5pbWFnZShpbWFnZSwgMCwgMCwge1xuICAgIGZpdDogW3dpZHRoLCBoZWlnaHRdLFxuICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICB2YWxpZ246ICdib3R0b20nXG4gIH0pO1xufTtcbnZhciByZW5kZXJBdHRhY2htZW50cyA9IGZ1bmN0aW9uIHJlbmRlckF0dGFjaG1lbnRzKGN0eCwgcnVuKSB7XG4gIGN0eC5zYXZlKCk7XG4gIHZhciBmb250ID0gcnVuLmF0dHJpYnV0ZXMuZm9udDtcbiAgdmFyIHNwYWNlID0gZm9udC5nbHlwaEZvckNvZGVQb2ludCgweDIwKTtcbiAgdmFyIG9iamVjdFJlcGxhY2VtZW50ID0gZm9udC5nbHlwaEZvckNvZGVQb2ludCgweGZmZmMpO1xuICB2YXIgYXR0YWNobWVudEFkdmFuY2UgPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bi5nbHlwaHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIgcG9zaXRpb24gPSBydW4ucG9zaXRpb25zW2ldO1xuICAgIHZhciBnbHlwaCA9IHJ1bi5nbHlwaHNbaV07XG4gICAgYXR0YWNobWVudEFkdmFuY2UgKz0gcG9zaXRpb24ueEFkdmFuY2UgfHwgMDtcbiAgICBpZiAoZ2x5cGguaWQgPT09IG9iamVjdFJlcGxhY2VtZW50LmlkICYmIHJ1bi5hdHRyaWJ1dGVzLmF0dGFjaG1lbnQpIHtcbiAgICAgIGN0eC50cmFuc2xhdGUoYXR0YWNobWVudEFkdmFuY2UsIHBvc2l0aW9uLnlPZmZzZXQgfHwgMCk7XG4gICAgICByZW5kZXJBdHRhY2htZW50KGN0eCwgcnVuLmF0dHJpYnV0ZXMuYXR0YWNobWVudCk7XG4gICAgICBydW4uZ2x5cGhzW2ldID0gc3BhY2U7XG4gICAgICBhdHRhY2htZW50QWR2YW5jZSA9IDA7XG4gICAgfVxuICB9XG4gIGN0eC5yZXN0b3JlKCk7XG59O1xudmFyIHJlbmRlclJ1biA9IGZ1bmN0aW9uIHJlbmRlclJ1bihjdHgsIHJ1biwgb3B0aW9ucykge1xuICB2YXIgX3J1biRhdHRyaWJ1dGVzID0gcnVuLmF0dHJpYnV0ZXMsXG4gICAgZm9udCA9IF9ydW4kYXR0cmlidXRlcy5mb250LFxuICAgIGZvbnRTaXplID0gX3J1biRhdHRyaWJ1dGVzLmZvbnRTaXplLFxuICAgIGxpbmsgPSBfcnVuJGF0dHJpYnV0ZXMubGluaztcbiAgdmFyIGNvbG9yID0gcGFyc2VDb2xvcihydW4uYXR0cmlidXRlcy5jb2xvcik7XG4gIHZhciBvcGFjaXR5ID0gaXNOaWwocnVuLmF0dHJpYnV0ZXMub3BhY2l0eSkgPyBjb2xvci5vcGFjaXR5IDogcnVuLmF0dHJpYnV0ZXMub3BhY2l0eTtcbiAgdmFyIGhlaWdodCA9IHJ1bi5oZWlnaHQsXG4gICAgZGVzY2VudCA9IHJ1bi5kZXNjZW50LFxuICAgIHhBZHZhbmNlID0gcnVuLnhBZHZhbmNlO1xuICBpZiAob3B0aW9ucy5vdXRsaW5lUnVucykge1xuICAgIGN0eC5yZWN0KDAsIC1oZWlnaHQsIHhBZHZhbmNlLCBoZWlnaHQpLnN0cm9rZSgpO1xuICB9XG4gIGN0eC5maWxsQ29sb3IoY29sb3IudmFsdWUpO1xuICBjdHguZmlsbE9wYWNpdHkob3BhY2l0eSk7XG4gIGlmIChsaW5rKSB7XG4gICAgaWYgKGlzU3JjSWQkMShsaW5rKSkge1xuICAgICAgY3R4LmdvVG8oMCwgLWhlaWdodCAtIGRlc2NlbnQsIHhBZHZhbmNlLCBoZWlnaHQsIGxpbmsuc2xpY2UoMSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdHgubGluaygwLCAtaGVpZ2h0IC0gZGVzY2VudCwgeEFkdmFuY2UsIGhlaWdodCwgbGluayk7XG4gICAgfVxuICB9XG4gIHJlbmRlckF0dGFjaG1lbnRzKGN0eCwgcnVuKTtcbiAgaWYgKGZvbnQuc2JpeCB8fCBmb250LkNPTFIgJiYgZm9udC5DUEFMKSB7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjdHgudHJhbnNsYXRlKDAsIC1ydW4uYXNjZW50KTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bi5nbHlwaHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBwb3NpdGlvbiA9IHJ1bi5wb3NpdGlvbnNbaV07XG4gICAgICB2YXIgZ2x5cGggPSBydW4uZ2x5cGhzW2ldO1xuICAgICAgY3R4LnNhdmUoKTtcbiAgICAgIGN0eC50cmFuc2xhdGUocG9zaXRpb24ueE9mZnNldCwgcG9zaXRpb24ueU9mZnNldCk7XG4gICAgICBnbHlwaC5yZW5kZXIoY3R4LCBmb250U2l6ZSk7XG4gICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgY3R4LnRyYW5zbGF0ZShwb3NpdGlvbi54QWR2YW5jZSwgcG9zaXRpb24ueUFkdmFuY2UpO1xuICAgIH1cbiAgICBjdHgucmVzdG9yZSgpO1xuICB9IGVsc2Uge1xuICAgIGN0eC5mb250KHR5cGVvZiBmb250Lm5hbWUgPT09ICdzdHJpbmcnID8gZm9udC5uYW1lIDogZm9udCwgZm9udFNpemUpO1xuICAgIHRyeSB7XG4gICAgICByZW5kZXJHbHlwaHMoY3R4LCBydW4uZ2x5cGhzLCBydW4ucG9zaXRpb25zLCAwLCAwKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH1cbiAgfVxuICBjdHgudHJhbnNsYXRlKHhBZHZhbmNlLCAwKTtcbn07XG52YXIgcmVuZGVyQmFja2dyb3VuZCQxID0gZnVuY3Rpb24gcmVuZGVyQmFja2dyb3VuZChjdHgsIHJlY3QsIGJhY2tncm91bmRDb2xvcikge1xuICB2YXIgY29sb3IgPSBwYXJzZUNvbG9yKGJhY2tncm91bmRDb2xvcik7XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC5maWxsT3BhY2l0eShjb2xvci5vcGFjaXR5KTtcbiAgY3R4LnJlY3QocmVjdC54LCByZWN0LnksIHJlY3Qud2lkdGgsIHJlY3QuaGVpZ2h0KTtcbiAgY3R4LmZpbGwoY29sb3IudmFsdWUpO1xuICBjdHgucmVzdG9yZSgpO1xufTtcbnZhciByZW5kZXJEZWNvcmF0aW9uTGluZSA9IGZ1bmN0aW9uIHJlbmRlckRlY29yYXRpb25MaW5lKGN0eCwgbGluZSkge1xuICBjdHguc2F2ZSgpO1xuICBjdHgubGluZVdpZHRoKGxpbmUucmVjdC5oZWlnaHQpO1xuICBjdHguc3Ryb2tlT3BhY2l0eShsaW5lLm9wYWNpdHkpO1xuICBpZiAoL2Rhc2hlZC8udGVzdChsaW5lLnN0eWxlKSkge1xuICAgIGN0eC5kYXNoKDMgKiBsaW5lLnJlY3QuaGVpZ2h0KTtcbiAgfSBlbHNlIGlmICgvZG90dGVkLy50ZXN0KGxpbmUuc3R5bGUpKSB7XG4gICAgY3R4LmRhc2gobGluZS5yZWN0LmhlaWdodCk7XG4gIH1cbiAgaWYgKC93YXZ5Ly50ZXN0KGxpbmUuc3R5bGUpKSB7XG4gICAgdmFyIGRpc3QgPSBNYXRoLm1heCgyLCBsaW5lLnJlY3QuaGVpZ2h0KTtcbiAgICB2YXIgc3RlcCA9IDEuMSAqIGRpc3Q7XG4gICAgdmFyIHN0ZXBDb3VudCA9IE1hdGguZmxvb3IobGluZS5yZWN0LndpZHRoIC8gKDIgKiBzdGVwKSk7XG5cbiAgICAvLyBBZGp1c3Qgc3RlcCB0byBmaWxsIGVudGlyZSB3aWR0aFxuICAgIHZhciByZW1haW5pbmdXaWR0aCA9IGxpbmUucmVjdC53aWR0aCAtIHN0ZXBDb3VudCAqIDIgKiBzdGVwO1xuICAgIHZhciBhZGp1c3RtZW50ID0gcmVtYWluaW5nV2lkdGggLyBzdGVwQ291bnQgLyAyO1xuICAgIHN0ZXAgKz0gYWRqdXN0bWVudDtcbiAgICB2YXIgY3AxeSA9IGxpbmUucmVjdC55ICsgZGlzdDtcbiAgICB2YXIgY3AyeSA9IGxpbmUucmVjdC55IC0gZGlzdDtcbiAgICB2YXIgeCA9IGxpbmUucmVjdC54O1xuICAgIGN0eC5tb3ZlVG8obGluZS5yZWN0LngsIGxpbmUucmVjdC55KTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ZXBDb3VudDsgaSArPSAxKSB7XG4gICAgICBjdHguYmV6aWVyQ3VydmVUbyh4ICsgc3RlcCwgY3AxeSwgeCArIHN0ZXAsIGNwMnksIHggKyAyICogc3RlcCwgbGluZS5yZWN0LnkpO1xuICAgICAgeCArPSAyICogc3RlcDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY3R4Lm1vdmVUbyhsaW5lLnJlY3QueCwgbGluZS5yZWN0LnkpO1xuICAgIGN0eC5saW5lVG8obGluZS5yZWN0LnggKyBsaW5lLnJlY3Qud2lkdGgsIGxpbmUucmVjdC55KTtcbiAgICBpZiAoL2RvdWJsZS8udGVzdChsaW5lLnN0eWxlKSkge1xuICAgICAgY3R4Lm1vdmVUbyhsaW5lLnJlY3QueCwgbGluZS5yZWN0LnkgKyBsaW5lLnJlY3QuaGVpZ2h0ICogMik7XG4gICAgICBjdHgubGluZVRvKGxpbmUucmVjdC54ICsgbGluZS5yZWN0LndpZHRoLCBsaW5lLnJlY3QueSArIGxpbmUucmVjdC5oZWlnaHQgKiAyKTtcbiAgICB9XG4gIH1cbiAgY3R4LnN0cm9rZShsaW5lLmNvbG9yKTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG52YXIgcmVuZGVyTGluZSA9IGZ1bmN0aW9uIHJlbmRlckxpbmUoY3R4LCBsaW5lLCBvcHRpb25zKSB7XG4gIHZhciBsaW5lQXNjZW50ID0gbGluZS5hc2NlbnQ7XG4gIGlmIChvcHRpb25zLm91dGxpbmVMaW5lcykge1xuICAgIGN0eC5yZWN0KGxpbmUuYm94LngsIGxpbmUuYm94LnksIGxpbmUuYm94LndpZHRoLCBsaW5lLmJveC5oZWlnaHQpLnN0cm9rZSgpO1xuICB9XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC50cmFuc2xhdGUobGluZS5ib3gueCwgbGluZS5ib3gueSArIGxpbmVBc2NlbnQpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmUucnVucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHZhciBydW4gPSBsaW5lLnJ1bnNbaV07XG4gICAgdmFyIGlzTGFzdFJ1biA9IGkgPT09IGxpbmUucnVucy5sZW5ndGggLSAxO1xuICAgIGlmIChydW4uYXR0cmlidXRlcy5iYWNrZ3JvdW5kQ29sb3IpIHtcbiAgICAgIHZhciBvdmVyZmxvd1JpZ2h0ID0gaXNMYXN0UnVuID8gbGluZS5vdmVyZmxvd1JpZ2h0IDogMDtcbiAgICAgIHZhciBiYWNrZ3JvdW5kUmVjdCA9IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogLWxpbmVBc2NlbnQsXG4gICAgICAgIGhlaWdodDogbGluZS5ib3guaGVpZ2h0LFxuICAgICAgICB3aWR0aDogcnVuLnhBZHZhbmNlIC0gb3ZlcmZsb3dSaWdodFxuICAgICAgfTtcbiAgICAgIHJlbmRlckJhY2tncm91bmQkMShjdHgsIGJhY2tncm91bmRSZWN0LCBydW4uYXR0cmlidXRlcy5iYWNrZ3JvdW5kQ29sb3IpO1xuICAgIH1cbiAgICByZW5kZXJSdW4oY3R4LCBydW4sIG9wdGlvbnMpO1xuICB9XG4gIGN0eC5yZXN0b3JlKCk7XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC50cmFuc2xhdGUobGluZS5ib3gueCwgbGluZS5ib3gueSk7XG4gIGZvciAodmFyIF9pID0gMDsgX2kgPCBsaW5lLmRlY29yYXRpb25MaW5lcy5sZW5ndGg7IF9pICs9IDEpIHtcbiAgICB2YXIgZGVjb3JhdGlvbkxpbmUgPSBsaW5lLmRlY29yYXRpb25MaW5lc1tfaV07XG4gICAgcmVuZGVyRGVjb3JhdGlvbkxpbmUoY3R4LCBkZWNvcmF0aW9uTGluZSk7XG4gIH1cbiAgY3R4LnJlc3RvcmUoKTtcbn07XG52YXIgcmVuZGVyQmxvY2sgPSBmdW5jdGlvbiByZW5kZXJCbG9jayhjdHgsIGJsb2NrLCBvcHRpb25zKSB7XG4gIGJsb2NrLmZvckVhY2goZnVuY3Rpb24gKGxpbmUpIHtcbiAgICByZW5kZXJMaW5lKGN0eCwgbGluZSwgb3B0aW9ucyk7XG4gIH0pO1xufTtcbnZhciByZW5kZXJUZXh0ID0gZnVuY3Rpb24gcmVuZGVyVGV4dChjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJGJveDIsIF9ub2RlJGJveDM7XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB0b3AgPSBfbm9kZSRib3gudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gubGVmdDtcbiAgdmFyIGJsb2NrcyA9IFtub2RlLmxpbmVzXTtcbiAgdmFyIHBhZGRpbmdUb3AgPSAoKF9ub2RlJGJveDIgPSBub2RlLmJveCkgPT09IG51bGwgfHwgX25vZGUkYm94MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkYm94Mi5wYWRkaW5nVG9wKSB8fCAwO1xuICB2YXIgcGFkZGluZ0xlZnQgPSAoKF9ub2RlJGJveDMgPSBub2RlLmJveCkgPT09IG51bGwgfHwgX25vZGUkYm94MyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkYm94My5wYWRkaW5nTGVmdCkgfHwgMDtcbiAgdmFyIGluaXRpYWxZID0gbm9kZS5saW5lc1swXSA/IG5vZGUubGluZXNbMF0uYm94LnkgOiAwO1xuICB2YXIgb2Zmc2V0WCA9IG5vZGUuYWxpZ25PZmZzZXQgfHwgMDtcbiAgY3R4LnNhdmUoKTtcbiAgY3R4LnRyYW5zbGF0ZShsZWZ0ICsgcGFkZGluZ0xlZnQgLSBvZmZzZXRYLCB0b3AgKyBwYWRkaW5nVG9wIC0gaW5pdGlhbFkpO1xuICBibG9ja3MuZm9yRWFjaChmdW5jdGlvbiAoYmxvY2spIHtcbiAgICByZW5kZXJCbG9jayhjdHgsIGJsb2NrLCB7fSk7XG4gIH0pO1xuICBjdHgucmVzdG9yZSgpO1xufTtcblxudmFyIHJlbmRlclBhZ2UgPSBmdW5jdGlvbiByZW5kZXJQYWdlKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkcHJvcHM7XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0O1xuICB2YXIgZHBpID0gKChfbm9kZSRwcm9wcyA9IG5vZGUucHJvcHMpID09PSBudWxsIHx8IF9ub2RlJHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRwcm9wcy5kcGkpIHx8IDcyO1xuICB2YXIgdXNlclVuaXQgPSBkcGkgLyA3MjtcbiAgY3R4LmFkZFBhZ2Uoe1xuICAgIHNpemU6IFt3aWR0aCwgaGVpZ2h0XSxcbiAgICBtYXJnaW46IDAsXG4gICAgdXNlclVuaXQ6IHVzZXJVbml0XG4gIH0pO1xufTtcblxudmFyIHJlbmRlck5vdGUgPSBmdW5jdGlvbiByZW5kZXJOb3RlKGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkY2hpbGRyZW4sIF9ub2RlJHN0eWxlLCBfbm9kZSRzdHlsZTI7XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB0b3AgPSBfbm9kZSRib3gudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gubGVmdDtcbiAgdmFyIHZhbHVlID0gKG5vZGUgPT09IG51bGwgfHwgbm9kZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9ub2RlJGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgPT09IG51bGwgfHwgX25vZGUkY2hpbGRyZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJGNoaWxkcmVuWzBdLnZhbHVlKSB8fCAnJztcbiAgdmFyIGNvbG9yID0gKChfbm9kZSRzdHlsZSA9IG5vZGUuc3R5bGUpID09PSBudWxsIHx8IF9ub2RlJHN0eWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRzdHlsZS5iYWNrZ3JvdW5kQ29sb3IpIHx8IG51bGw7XG4gIHZhciBib3JkZXJXaWR0aCA9ICgoX25vZGUkc3R5bGUyID0gbm9kZS5zdHlsZSkgPT09IG51bGwgfHwgX25vZGUkc3R5bGUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRzdHlsZTIuYm9yZGVyV2lkdGgpIHx8IG51bGw7XG4gIGN0eC5ub3RlKGxlZnQsIHRvcCwgMCwgMCwgdmFsdWUsIHtcbiAgICBjb2xvcjogY29sb3IsXG4gICAgYm9yZGVyV2lkdGg6IGJvcmRlcldpZHRoXG4gIH0pO1xufTtcblxudmFyIGlzTnVtZXJpYyA9IGZ1bmN0aW9uIGlzTnVtZXJpYyhuKSB7XG4gIHJldHVybiAhTnVtYmVyLmlzTmFOKHBhcnNlRmxvYXQobikpICYmIE51bWJlci5pc0Zpbml0ZShuKTtcbn07XG52YXIgYXBwbHlDb250YWluT2JqZWN0Rml0ID0gZnVuY3Rpb24gYXBwbHlDb250YWluT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpIHtcbiAgdmFyIGNyID0gY3cgLyBjaDtcbiAgdmFyIGlyID0gaXcgLyBpaDtcbiAgdmFyIHB4cCA9IG1hdGNoUGVyY2VudChweCk7XG4gIHZhciBweXAgPSBtYXRjaFBlcmNlbnQocHkpO1xuICB2YXIgcHh2ID0gcHhwID8gcHhwLnBlcmNlbnQgOiAwLjU7XG4gIHZhciBweXYgPSBweXAgPyBweXAucGVyY2VudCA6IDAuNTtcbiAgaWYgKGNyID4gaXIpIHtcbiAgICB2YXIgX2hlaWdodCA9IGNoO1xuICAgIHZhciBfd2lkdGggPSBfaGVpZ2h0ICogaXI7XG4gICAgdmFyIF95T2Zmc2V0ID0gaXNOdW1lcmljKHB5KSA/IHB5IDogMDtcbiAgICB2YXIgX3hPZmZzZXQgPSBpc051bWVyaWMocHgpID8gcHggOiAoY3cgLSBfd2lkdGgpICogcHh2O1xuICAgIHJldHVybiB7XG4gICAgICB3aWR0aDogX3dpZHRoLFxuICAgICAgaGVpZ2h0OiBfaGVpZ2h0LFxuICAgICAgeE9mZnNldDogX3hPZmZzZXQsXG4gICAgICB5T2Zmc2V0OiBfeU9mZnNldFxuICAgIH07XG4gIH1cbiAgdmFyIHdpZHRoID0gY3c7XG4gIHZhciBoZWlnaHQgPSB3aWR0aCAvIGlyO1xuICB2YXIgeE9mZnNldCA9IGlzTnVtZXJpYyhweCkgPyBweCA6IDA7XG4gIHZhciB5T2Zmc2V0ID0gaXNOdW1lcmljKHB5KSA/IHB5IDogKGNoIC0gaGVpZ2h0KSAqIHB5djtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgeU9mZnNldDogeU9mZnNldCxcbiAgICB4T2Zmc2V0OiB4T2Zmc2V0XG4gIH07XG59O1xudmFyIGFwcGx5Tm9uZU9iamVjdEZpdCA9IGZ1bmN0aW9uIGFwcGx5Tm9uZU9iamVjdEZpdChjdywgY2gsIGl3LCBpaCwgcHgsIHB5KSB7XG4gIHZhciB3aWR0aCA9IGl3O1xuICB2YXIgaGVpZ2h0ID0gaWg7XG4gIHZhciBweHAgPSBtYXRjaFBlcmNlbnQocHgpO1xuICB2YXIgcHlwID0gbWF0Y2hQZXJjZW50KHB5KTtcbiAgdmFyIHB4diA9IHB4cCA/IHB4cC5wZXJjZW50IDogMC41O1xuICB2YXIgcHl2ID0gcHlwID8gcHlwLnBlcmNlbnQgOiAwLjU7XG4gIHZhciB4T2Zmc2V0ID0gaXNOdW1lcmljKHB4KSA/IHB4IDogKGN3IC0gd2lkdGgpICogcHh2O1xuICB2YXIgeU9mZnNldCA9IGlzTnVtZXJpYyhweSkgPyBweSA6IChjaCAtIGhlaWdodCkgKiBweXY7XG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHhPZmZzZXQ6IHhPZmZzZXQsXG4gICAgeU9mZnNldDogeU9mZnNldFxuICB9O1xufTtcbnZhciBhcHBseUNvdmVyT2JqZWN0Rml0ID0gZnVuY3Rpb24gYXBwbHlDb3Zlck9iamVjdEZpdChjdywgY2gsIGl3LCBpaCwgcHgsIHB5KSB7XG4gIHZhciBpciA9IGl3IC8gaWg7XG4gIHZhciBjciA9IGN3IC8gY2g7XG4gIHZhciBweHAgPSBtYXRjaFBlcmNlbnQocHgpO1xuICB2YXIgcHlwID0gbWF0Y2hQZXJjZW50KHB5KTtcbiAgdmFyIHB4diA9IHB4cCA/IHB4cC5wZXJjZW50IDogMC41O1xuICB2YXIgcHl2ID0gcHlwID8gcHlwLnBlcmNlbnQgOiAwLjU7XG4gIGlmIChjciA+IGlyKSB7XG4gICAgdmFyIF93aWR0aDIgPSBjdztcbiAgICB2YXIgX2hlaWdodDIgPSBfd2lkdGgyIC8gaXI7XG4gICAgdmFyIF94T2Zmc2V0MiA9IGlzTnVtZXJpYyhweCkgPyBweCA6IDA7XG4gICAgdmFyIF95T2Zmc2V0MiA9IGlzTnVtZXJpYyhweSkgPyBweSA6IChjaCAtIF9oZWlnaHQyKSAqIHB5djtcbiAgICByZXR1cm4ge1xuICAgICAgd2lkdGg6IF93aWR0aDIsXG4gICAgICBoZWlnaHQ6IF9oZWlnaHQyLFxuICAgICAgeU9mZnNldDogX3lPZmZzZXQyLFxuICAgICAgeE9mZnNldDogX3hPZmZzZXQyXG4gICAgfTtcbiAgfVxuICB2YXIgaGVpZ2h0ID0gY2g7XG4gIHZhciB3aWR0aCA9IGhlaWdodCAqIGlyO1xuICB2YXIgeE9mZnNldCA9IGlzTnVtZXJpYyhweCkgPyBweCA6IChjdyAtIHdpZHRoKSAqIHB4djtcbiAgdmFyIHlPZmZzZXQgPSBpc051bWVyaWMocHkpID8gcHkgOiAwO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICB4T2Zmc2V0OiB4T2Zmc2V0LFxuICAgIHlPZmZzZXQ6IHlPZmZzZXRcbiAgfTtcbn07XG52YXIgYXBwbHlTY2FsZURvd25PYmplY3RGaXQgPSBmdW5jdGlvbiBhcHBseVNjYWxlRG93bk9iamVjdEZpdChjdywgY2gsIGl3LCBpaCwgcHgsIHB5KSB7XG4gIHZhciBjb250YWluRGltZW5zaW9uID0gYXBwbHlDb250YWluT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpO1xuICB2YXIgbm9uZURpbWVuc2lvbiA9IGFwcGx5Tm9uZU9iamVjdEZpdChjdywgY2gsIGl3LCBpaCwgcHgsIHB5KTtcbiAgcmV0dXJuIGNvbnRhaW5EaW1lbnNpb24ud2lkdGggPCBub25lRGltZW5zaW9uLndpZHRoID8gY29udGFpbkRpbWVuc2lvbiA6IG5vbmVEaW1lbnNpb247XG59O1xudmFyIGFwcGx5RmlsbE9iamVjdEZpdCA9IGZ1bmN0aW9uIGFwcGx5RmlsbE9iamVjdEZpdChjdywgY2gsIHB4LCBweSkge1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjdyxcbiAgICBoZWlnaHQ6IGNoLFxuICAgIHhPZmZzZXQ6IG1hdGNoUGVyY2VudChweCkgPyAwIDogcHggfHwgMCxcbiAgICB5T2Zmc2V0OiBtYXRjaFBlcmNlbnQocHkpID8gMCA6IHB5IHx8IDBcbiAgfTtcbn07XG52YXIgcmVzb2x2ZU9iamVjdEZpdCA9IGZ1bmN0aW9uIHJlc29sdmVPYmplY3RGaXQodHlwZSwgY3csIGNoLCBpdywgaWgsIHB4LCBweSkge1xuICBpZiAodHlwZSA9PT0gdm9pZCAwKSB7XG4gICAgdHlwZSA9ICdmaWxsJztcbiAgfVxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdjb250YWluJzpcbiAgICAgIHJldHVybiBhcHBseUNvbnRhaW5PYmplY3RGaXQoY3csIGNoLCBpdywgaWgsIHB4LCBweSk7XG4gICAgY2FzZSAnY292ZXInOlxuICAgICAgcmV0dXJuIGFwcGx5Q292ZXJPYmplY3RGaXQoY3csIGNoLCBpdywgaWgsIHB4LCBweSk7XG4gICAgY2FzZSAnbm9uZSc6XG4gICAgICByZXR1cm4gYXBwbHlOb25lT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpO1xuICAgIGNhc2UgJ3NjYWxlLWRvd24nOlxuICAgICAgcmV0dXJuIGFwcGx5U2NhbGVEb3duT2JqZWN0Rml0KGN3LCBjaCwgaXcsIGloLCBweCwgcHkpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYXBwbHlGaWxsT2JqZWN0Rml0KGN3LCBjaCwgcHgsIHB5KTtcbiAgfVxufTtcblxudmFyIGRyYXdJbWFnZSA9IGZ1bmN0aW9uIGRyYXdJbWFnZShjdHgsIG5vZGUsIG9wdGlvbnMpIHtcbiAgdmFyIF9ub2RlJHN0eWxlLCBfbm9kZSRzdHlsZTIsIF9ub2RlJHN0eWxlMywgX25vZGUkc3R5bGU0O1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICBsZWZ0ID0gX25vZGUkYm94LmxlZnQsXG4gICAgdG9wID0gX25vZGUkYm94LnRvcDtcbiAgdmFyIG9wYWNpdHkgPSAoX25vZGUkc3R5bGUgPSBub2RlLnN0eWxlKSA9PT0gbnVsbCB8fCBfbm9kZSRzdHlsZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkc3R5bGUub3BhY2l0eTtcbiAgdmFyIG9iamVjdEZpdCA9IChfbm9kZSRzdHlsZTIgPSBub2RlLnN0eWxlKSA9PT0gbnVsbCB8fCBfbm9kZSRzdHlsZTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHN0eWxlMi5vYmplY3RGaXQ7XG4gIHZhciBvYmplY3RQb3NpdGlvblggPSAoX25vZGUkc3R5bGUzID0gbm9kZS5zdHlsZSkgPT09IG51bGwgfHwgX25vZGUkc3R5bGUzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRzdHlsZTMub2JqZWN0UG9zaXRpb25YO1xuICB2YXIgb2JqZWN0UG9zaXRpb25ZID0gKF9ub2RlJHN0eWxlNCA9IG5vZGUuc3R5bGUpID09PSBudWxsIHx8IF9ub2RlJHN0eWxlNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25vZGUkc3R5bGU0Lm9iamVjdFBvc2l0aW9uWTtcbiAgdmFyIHBhZGRpbmdUb3AgPSBub2RlLmJveC5wYWRkaW5nVG9wIHx8IDA7XG4gIHZhciBwYWRkaW5nUmlnaHQgPSBub2RlLmJveC5wYWRkaW5nUmlnaHQgfHwgMDtcbiAgdmFyIHBhZGRpbmdCb3R0b20gPSBub2RlLmJveC5wYWRkaW5nQm90dG9tIHx8IDA7XG4gIHZhciBwYWRkaW5nTGVmdCA9IG5vZGUuYm94LnBhZGRpbmdMZWZ0IHx8IDA7XG4gIHZhciBpbWFnZUNhY2hlID0gb3B0aW9ucy5pbWFnZUNhY2hlIHx8IG5ldyBNYXAoKTtcbiAgdmFyIF9yZXNvbHZlT2JqZWN0Rml0ID0gcmVzb2x2ZU9iamVjdEZpdChvYmplY3RGaXQsIG5vZGUuYm94LndpZHRoIC0gcGFkZGluZ0xlZnQgLSBwYWRkaW5nUmlnaHQsIG5vZGUuYm94LmhlaWdodCAtIHBhZGRpbmdUb3AgLSBwYWRkaW5nQm90dG9tLCBub2RlLmltYWdlLndpZHRoLCBub2RlLmltYWdlLmhlaWdodCwgb2JqZWN0UG9zaXRpb25YLCBvYmplY3RQb3NpdGlvblkpLFxuICAgIHdpZHRoID0gX3Jlc29sdmVPYmplY3RGaXQud2lkdGgsXG4gICAgaGVpZ2h0ID0gX3Jlc29sdmVPYmplY3RGaXQuaGVpZ2h0LFxuICAgIHhPZmZzZXQgPSBfcmVzb2x2ZU9iamVjdEZpdC54T2Zmc2V0LFxuICAgIHlPZmZzZXQgPSBfcmVzb2x2ZU9iamVjdEZpdC55T2Zmc2V0O1xuICBpZiAobm9kZS5pbWFnZS5kYXRhKSB7XG4gICAgaWYgKHdpZHRoICE9PSAwICYmIGhlaWdodCAhPT0gMCkge1xuICAgICAgdmFyIGNhY2hlS2V5ID0gbm9kZS5pbWFnZS5rZXk7XG4gICAgICB2YXIgaW1hZ2UgPSBpbWFnZUNhY2hlLmdldChjYWNoZUtleSkgfHwgY3R4LmVtYmVkSW1hZ2Uobm9kZS5pbWFnZS5kYXRhKTtcbiAgICAgIGlmIChjYWNoZUtleSkgaW1hZ2VDYWNoZS5zZXQoY2FjaGVLZXksIGltYWdlKTtcbiAgICAgIHZhciBpbWFnZU9wYWNpdHkgPSBpc05pbChvcGFjaXR5KSA/IDEgOiBvcGFjaXR5O1xuICAgICAgY3R4LmZpbGxPcGFjaXR5KGltYWdlT3BhY2l0eSkuaW1hZ2UoaW1hZ2UsIGxlZnQgKyBwYWRkaW5nTGVmdCArIHhPZmZzZXQsIHRvcCArIHBhZGRpbmdUb3AgKyB5T2Zmc2V0LCB7XG4gICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJJbWFnZSB3aXRoIHNyYyAnXCIgKyBKU09OLnN0cmluZ2lmeShub2RlLnByb3BzLnNyYykgKyBcIicgc2tpcHBlZCBkdWUgdG8gaW52YWxpZCBkaW1lbnNpb25zXCIpO1xuICAgIH1cbiAgfVxufTtcbnZhciByZW5kZXJJbWFnZSA9IGZ1bmN0aW9uIHJlbmRlckltYWdlKGN0eCwgbm9kZSwgb3B0aW9ucykge1xuICBjdHguc2F2ZSgpO1xuICBjbGlwTm9kZShjdHgsIG5vZGUpO1xuICBkcmF3SW1hZ2UoY3R4LCBub2RlLCBvcHRpb25zKTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbnZhciBDT05URU5UX0NPTE9SID0gJyNhMWM2ZTcnO1xudmFyIFBBRERJTkdfQ09MT1IgPSAnI2M0ZGViOSc7XG52YXIgTUFSR0lOX0NPTE9SID0gJyNmOGNjYTEnO1xuXG4vLyBUT0RPOiBEcmF3IGRlYnVnIGJveGVzIHVzaW5nIGNsaXBwaW5nIHRvIGVuaGFuY2UgcXVhbGl0eVxuXG52YXIgZGVidWdDb250ZW50ID0gZnVuY3Rpb24gZGVidWdDb250ZW50KGN0eCwgbm9kZSkge1xuICB2YXIgX25vZGUkYm94ID0gbm9kZS5ib3gsXG4gICAgbGVmdCA9IF9ub2RlJGJveC5sZWZ0LFxuICAgIHRvcCA9IF9ub2RlJGJveC50b3AsXG4gICAgd2lkdGggPSBfbm9kZSRib3gud2lkdGgsXG4gICAgaGVpZ2h0ID0gX25vZGUkYm94LmhlaWdodCxcbiAgICBfbm9kZSRib3gkcGFkZGluZ0xlZnQgPSBfbm9kZSRib3gucGFkZGluZ0xlZnQsXG4gICAgcGFkZGluZ0xlZnQgPSBfbm9kZSRib3gkcGFkZGluZ0xlZnQgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gkcGFkZGluZ0xlZnQsXG4gICAgX25vZGUkYm94JHBhZGRpbmdUb3AgPSBfbm9kZSRib3gucGFkZGluZ1RvcCxcbiAgICBwYWRkaW5nVG9wID0gX25vZGUkYm94JHBhZGRpbmdUb3AgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gkcGFkZGluZ1RvcCxcbiAgICBfbm9kZSRib3gkcGFkZGluZ1JpZ2ggPSBfbm9kZSRib3gucGFkZGluZ1JpZ2h0LFxuICAgIHBhZGRpbmdSaWdodCA9IF9ub2RlJGJveCRwYWRkaW5nUmlnaCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveCRwYWRkaW5nUmlnaCxcbiAgICBfbm9kZSRib3gkcGFkZGluZ0JvdHQgPSBfbm9kZSRib3gucGFkZGluZ0JvdHRvbSxcbiAgICBwYWRkaW5nQm90dG9tID0gX25vZGUkYm94JHBhZGRpbmdCb3R0ID09PSB2b2lkIDAgPyAwIDogX25vZGUkYm94JHBhZGRpbmdCb3R0LFxuICAgIF9ub2RlJGJveCRib3JkZXJMZWZ0VyA9IF9ub2RlJGJveC5ib3JkZXJMZWZ0V2lkdGgsXG4gICAgYm9yZGVyTGVmdFdpZHRoID0gX25vZGUkYm94JGJvcmRlckxlZnRXID09PSB2b2lkIDAgPyAwIDogX25vZGUkYm94JGJvcmRlckxlZnRXLFxuICAgIF9ub2RlJGJveCRib3JkZXJUb3BXaSA9IF9ub2RlJGJveC5ib3JkZXJUb3BXaWR0aCxcbiAgICBib3JkZXJUb3BXaWR0aCA9IF9ub2RlJGJveCRib3JkZXJUb3BXaSA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveCRib3JkZXJUb3BXaSxcbiAgICBfbm9kZSRib3gkYm9yZGVyUmlnaHQgPSBfbm9kZSRib3guYm9yZGVyUmlnaHRXaWR0aCxcbiAgICBib3JkZXJSaWdodFdpZHRoID0gX25vZGUkYm94JGJvcmRlclJpZ2h0ID09PSB2b2lkIDAgPyAwIDogX25vZGUkYm94JGJvcmRlclJpZ2h0LFxuICAgIF9ub2RlJGJveCRib3JkZXJCb3R0byA9IF9ub2RlJGJveC5ib3JkZXJCb3R0b21XaWR0aCxcbiAgICBib3JkZXJCb3R0b21XaWR0aCA9IF9ub2RlJGJveCRib3JkZXJCb3R0byA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveCRib3JkZXJCb3R0bztcbiAgY3R4LmZpbGxDb2xvcihDT05URU5UX0NPTE9SKS5vcGFjaXR5KDAuNSkucmVjdChsZWZ0ICsgcGFkZGluZ0xlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIHBhZGRpbmdUb3AgKyBib3JkZXJUb3BXaWR0aCwgd2lkdGggLSBwYWRkaW5nTGVmdCAtIHBhZGRpbmdSaWdodCAtIGJvcmRlclJpZ2h0V2lkdGggLSBib3JkZXJMZWZ0V2lkdGgsIGhlaWdodCAtIHBhZGRpbmdUb3AgLSBwYWRkaW5nQm90dG9tIC0gYm9yZGVyVG9wV2lkdGggLSBib3JkZXJCb3R0b21XaWR0aCkuZmlsbCgpO1xufTtcbnZhciBkZWJ1Z1BhZGRpbmcgPSBmdW5jdGlvbiBkZWJ1Z1BhZGRpbmcoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRib3gyID0gbm9kZS5ib3gsXG4gICAgbGVmdCA9IF9ub2RlJGJveDIubGVmdCxcbiAgICB0b3AgPSBfbm9kZSRib3gyLnRvcCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveDIud2lkdGgsXG4gICAgaGVpZ2h0ID0gX25vZGUkYm94Mi5oZWlnaHQsXG4gICAgX25vZGUkYm94MiRwYWRkaW5nTGVmID0gX25vZGUkYm94Mi5wYWRkaW5nTGVmdCxcbiAgICBwYWRkaW5nTGVmdCA9IF9ub2RlJGJveDIkcGFkZGluZ0xlZiA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveDIkcGFkZGluZ0xlZixcbiAgICBfbm9kZSRib3gyJHBhZGRpbmdUb3AgPSBfbm9kZSRib3gyLnBhZGRpbmdUb3AsXG4gICAgcGFkZGluZ1RvcCA9IF9ub2RlJGJveDIkcGFkZGluZ1RvcCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveDIkcGFkZGluZ1RvcCxcbiAgICBfbm9kZSRib3gyJHBhZGRpbmdSaWcgPSBfbm9kZSRib3gyLnBhZGRpbmdSaWdodCxcbiAgICBwYWRkaW5nUmlnaHQgPSBfbm9kZSRib3gyJHBhZGRpbmdSaWcgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gyJHBhZGRpbmdSaWcsXG4gICAgX25vZGUkYm94MiRwYWRkaW5nQm90ID0gX25vZGUkYm94Mi5wYWRkaW5nQm90dG9tLFxuICAgIHBhZGRpbmdCb3R0b20gPSBfbm9kZSRib3gyJHBhZGRpbmdCb3QgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gyJHBhZGRpbmdCb3QsXG4gICAgX25vZGUkYm94MiRib3JkZXJMZWZ0ID0gX25vZGUkYm94Mi5ib3JkZXJMZWZ0V2lkdGgsXG4gICAgYm9yZGVyTGVmdFdpZHRoID0gX25vZGUkYm94MiRib3JkZXJMZWZ0ID09PSB2b2lkIDAgPyAwIDogX25vZGUkYm94MiRib3JkZXJMZWZ0LFxuICAgIF9ub2RlJGJveDIkYm9yZGVyVG9wVyA9IF9ub2RlJGJveDIuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyVG9wV2lkdGggPSBfbm9kZSRib3gyJGJvcmRlclRvcFcgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gyJGJvcmRlclRvcFcsXG4gICAgX25vZGUkYm94MiRib3JkZXJSaWdoID0gX25vZGUkYm94Mi5ib3JkZXJSaWdodFdpZHRoLFxuICAgIGJvcmRlclJpZ2h0V2lkdGggPSBfbm9kZSRib3gyJGJvcmRlclJpZ2ggPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRib3gyJGJvcmRlclJpZ2gsXG4gICAgX25vZGUkYm94MiRib3JkZXJCb3R0ID0gX25vZGUkYm94Mi5ib3JkZXJCb3R0b21XaWR0aCxcbiAgICBib3JkZXJCb3R0b21XaWR0aCA9IF9ub2RlJGJveDIkYm9yZGVyQm90dCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJGJveDIkYm9yZGVyQm90dDtcbiAgY3R4LmZpbGxDb2xvcihQQURESU5HX0NPTE9SKS5vcGFjaXR5KDAuNSk7XG5cbiAgLy8gUGFkZGluZyB0b3BcbiAgY3R4LnJlY3QobGVmdCArIHBhZGRpbmdMZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgd2lkdGggLSBwYWRkaW5nUmlnaHQgLSBwYWRkaW5nTGVmdCAtIGJvcmRlckxlZnRXaWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHBhZGRpbmdUb3ApLmZpbGwoKTtcblxuICAvLyBQYWRkaW5nIGxlZnRcbiAgY3R4LnJlY3QobGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgYm9yZGVyVG9wV2lkdGgsIHBhZGRpbmdMZWZ0LCBoZWlnaHQgLSBib3JkZXJUb3BXaWR0aCAtIGJvcmRlckJvdHRvbVdpZHRoKS5maWxsKCk7XG5cbiAgLy8gUGFkZGluZyByaWdodFxuICBjdHgucmVjdChsZWZ0ICsgd2lkdGggLSBwYWRkaW5nUmlnaHQgLSBib3JkZXJSaWdodFdpZHRoLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgcGFkZGluZ1JpZ2h0LCBoZWlnaHQgLSBib3JkZXJUb3BXaWR0aCAtIGJvcmRlckJvdHRvbVdpZHRoKS5maWxsKCk7XG5cbiAgLy8gUGFkZGluZyBib3R0b21cbiAgY3R4LnJlY3QobGVmdCArIHBhZGRpbmdMZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCB0b3AgKyBoZWlnaHQgLSBwYWRkaW5nQm90dG9tIC0gYm9yZGVyQm90dG9tV2lkdGgsIHdpZHRoIC0gcGFkZGluZ1JpZ2h0IC0gcGFkZGluZ0xlZnQgLSBib3JkZXJMZWZ0V2lkdGggLSBib3JkZXJSaWdodFdpZHRoLCBwYWRkaW5nQm90dG9tKS5maWxsKCk7XG59O1xudmFyIGdldE1hcmdpbiA9IGZ1bmN0aW9uIGdldE1hcmdpbihib3gpIHtcbiAgdmFyIG1hcmdpbkxlZnQgPSBib3gubWFyZ2luTGVmdCA9PT0gJ2F1dG8nID8gMCA6IGJveC5tYXJnaW5MZWZ0O1xuICB2YXIgbWFyZ2luVG9wID0gYm94Lm1hcmdpblRvcCA9PT0gJ2F1dG8nID8gMCA6IGJveC5tYXJnaW5Ub3A7XG4gIHZhciBtYXJnaW5SaWdodCA9IGJveC5tYXJnaW5SaWdodCA9PT0gJ2F1dG8nID8gMCA6IGJveC5tYXJnaW5SaWdodDtcbiAgdmFyIG1hcmdpbkJvdHRvbSA9IGJveC5tYXJnaW5Cb3R0b20gPT09ICdhdXRvJyA/IDAgOiBib3gubWFyZ2luQm90dG9tO1xuICByZXR1cm4ge1xuICAgIG1hcmdpbkxlZnQ6IG1hcmdpbkxlZnQsXG4gICAgbWFyZ2luVG9wOiBtYXJnaW5Ub3AsXG4gICAgbWFyZ2luUmlnaHQ6IG1hcmdpblJpZ2h0LFxuICAgIG1hcmdpbkJvdHRvbTogbWFyZ2luQm90dG9tXG4gIH07XG59O1xudmFyIGRlYnVnTWFyZ2luID0gZnVuY3Rpb24gZGVidWdNYXJnaW4oY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRib3gzID0gbm9kZS5ib3gsXG4gICAgbGVmdCA9IF9ub2RlJGJveDMubGVmdCxcbiAgICB0b3AgPSBfbm9kZSRib3gzLnRvcCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveDMud2lkdGgsXG4gICAgaGVpZ2h0ID0gX25vZGUkYm94My5oZWlnaHQ7XG4gIHZhciBfZ2V0TWFyZ2luID0gZ2V0TWFyZ2luKG5vZGUuYm94KSxcbiAgICBfZ2V0TWFyZ2luJG1hcmdpbkxlZnQgPSBfZ2V0TWFyZ2luLm1hcmdpbkxlZnQsXG4gICAgbWFyZ2luTGVmdCA9IF9nZXRNYXJnaW4kbWFyZ2luTGVmdCA9PT0gdm9pZCAwID8gMCA6IF9nZXRNYXJnaW4kbWFyZ2luTGVmdCxcbiAgICBfZ2V0TWFyZ2luJG1hcmdpblRvcCA9IF9nZXRNYXJnaW4ubWFyZ2luVG9wLFxuICAgIG1hcmdpblRvcCA9IF9nZXRNYXJnaW4kbWFyZ2luVG9wID09PSB2b2lkIDAgPyAwIDogX2dldE1hcmdpbiRtYXJnaW5Ub3AsXG4gICAgX2dldE1hcmdpbiRtYXJnaW5SaWdoID0gX2dldE1hcmdpbi5tYXJnaW5SaWdodCxcbiAgICBtYXJnaW5SaWdodCA9IF9nZXRNYXJnaW4kbWFyZ2luUmlnaCA9PT0gdm9pZCAwID8gMCA6IF9nZXRNYXJnaW4kbWFyZ2luUmlnaCxcbiAgICBfZ2V0TWFyZ2luJG1hcmdpbkJvdHQgPSBfZ2V0TWFyZ2luLm1hcmdpbkJvdHRvbSxcbiAgICBtYXJnaW5Cb3R0b20gPSBfZ2V0TWFyZ2luJG1hcmdpbkJvdHQgPT09IHZvaWQgMCA/IDAgOiBfZ2V0TWFyZ2luJG1hcmdpbkJvdHQ7XG4gIGN0eC5maWxsQ29sb3IoTUFSR0lOX0NPTE9SKS5vcGFjaXR5KDAuNSk7XG5cbiAgLy8gTWFyZ2luIHRvcFxuICBjdHgucmVjdChsZWZ0LCB0b3AgLSBtYXJnaW5Ub3AsIHdpZHRoLCBtYXJnaW5Ub3ApLmZpbGwoKTtcblxuICAvLyBNYXJnaW4gbGVmdFxuICBjdHgucmVjdChsZWZ0IC0gbWFyZ2luTGVmdCwgdG9wIC0gbWFyZ2luVG9wLCBtYXJnaW5MZWZ0LCBoZWlnaHQgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b20pLmZpbGwoKTtcblxuICAvLyBNYXJnaW4gcmlnaHRcbiAgY3R4LnJlY3QobGVmdCArIHdpZHRoLCB0b3AgLSBtYXJnaW5Ub3AsIG1hcmdpblJpZ2h0LCBoZWlnaHQgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b20pLmZpbGwoKTtcblxuICAvLyBNYXJnaW4gYm90dG9tXG4gIGN0eC5yZWN0KGxlZnQsIHRvcCArIGhlaWdodCwgd2lkdGgsIG1hcmdpbkJvdHRvbSkuZmlsbCgpO1xufTtcbnZhciBkZWJ1Z1RleHQgPSBmdW5jdGlvbiBkZWJ1Z1RleHQoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRib3g0ID0gbm9kZS5ib3gsXG4gICAgbGVmdCA9IF9ub2RlJGJveDQubGVmdCxcbiAgICB0b3AgPSBfbm9kZSRib3g0LnRvcCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveDQud2lkdGgsXG4gICAgaGVpZ2h0ID0gX25vZGUkYm94NC5oZWlnaHQ7XG4gIHZhciBfZ2V0TWFyZ2luMiA9IGdldE1hcmdpbihub2RlLmJveCksXG4gICAgX2dldE1hcmdpbjIkbWFyZ2luTGVmID0gX2dldE1hcmdpbjIubWFyZ2luTGVmdCxcbiAgICBtYXJnaW5MZWZ0ID0gX2dldE1hcmdpbjIkbWFyZ2luTGVmID09PSB2b2lkIDAgPyAwIDogX2dldE1hcmdpbjIkbWFyZ2luTGVmLFxuICAgIF9nZXRNYXJnaW4yJG1hcmdpblRvcCA9IF9nZXRNYXJnaW4yLm1hcmdpblRvcCxcbiAgICBtYXJnaW5Ub3AgPSBfZ2V0TWFyZ2luMiRtYXJnaW5Ub3AgPT09IHZvaWQgMCA/IDAgOiBfZ2V0TWFyZ2luMiRtYXJnaW5Ub3AsXG4gICAgX2dldE1hcmdpbjIkbWFyZ2luUmlnID0gX2dldE1hcmdpbjIubWFyZ2luUmlnaHQsXG4gICAgbWFyZ2luUmlnaHQgPSBfZ2V0TWFyZ2luMiRtYXJnaW5SaWcgPT09IHZvaWQgMCA/IDAgOiBfZ2V0TWFyZ2luMiRtYXJnaW5SaWcsXG4gICAgX2dldE1hcmdpbjIkbWFyZ2luQm90ID0gX2dldE1hcmdpbjIubWFyZ2luQm90dG9tLFxuICAgIG1hcmdpbkJvdHRvbSA9IF9nZXRNYXJnaW4yJG1hcmdpbkJvdCA9PT0gdm9pZCAwID8gMCA6IF9nZXRNYXJnaW4yJG1hcmdpbkJvdDtcbiAgdmFyIHJvdW5kZWRXaWR0aCA9IE1hdGgucm91bmQod2lkdGggKyBtYXJnaW5MZWZ0ICsgbWFyZ2luUmlnaHQpO1xuICB2YXIgcm91bmRlZEhlaWdodCA9IE1hdGgucm91bmQoaGVpZ2h0ICsgbWFyZ2luVG9wICsgbWFyZ2luQm90dG9tKTtcbiAgY3R4LmZvbnRTaXplKDYpLm9wYWNpdHkoMSkuZmlsbENvbG9yKCdibGFjaycpLnRleHQocm91bmRlZFdpZHRoICsgXCIgeCBcIiArIHJvdW5kZWRIZWlnaHQsIGxlZnQgLSBtYXJnaW5MZWZ0LCBNYXRoLm1heCh0b3AgLSBtYXJnaW5Ub3AgLSA0LCAxKSk7XG59O1xudmFyIGRlYnVnT3JpZ2luID0gZnVuY3Rpb24gZGVidWdPcmlnaW4oY3R4LCBub2RlKSB7XG4gIGlmIChub2RlLm9yaWdpbikge1xuICAgIGN0eC5jaXJjbGUobm9kZS5vcmlnaW4ubGVmdCwgbm9kZS5vcmlnaW4udG9wLCAzKS5maWxsKCdyZWQnKS5jaXJjbGUobm9kZS5vcmlnaW4ubGVmdCwgbm9kZS5vcmlnaW4udG9wLCA1KS5zdHJva2UoJ3JlZCcpO1xuICB9XG59O1xudmFyIHJlbmRlckRlYnVnID0gZnVuY3Rpb24gcmVuZGVyRGVidWcoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRwcm9wcztcbiAgaWYgKCEoKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgIT09IG51bGwgJiYgX25vZGUkcHJvcHMgIT09IHZvaWQgMCAmJiBfbm9kZSRwcm9wcy5kZWJ1ZykpIHJldHVybjtcbiAgY3R4LnNhdmUoKTtcbiAgZGVidWdDb250ZW50KGN0eCwgbm9kZSk7XG4gIGRlYnVnUGFkZGluZyhjdHgsIG5vZGUpO1xuICBkZWJ1Z01hcmdpbihjdHgsIG5vZGUpO1xuICBkZWJ1Z1RleHQoY3R4LCBub2RlKTtcbiAgZGVidWdPcmlnaW4oY3R4LCBub2RlKTtcbiAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbnZhciBhdmFpbGFibGVNZXRob2RzID0gWydkYXNoJywgJ2NsaXAnLCAnc2F2ZScsICdwYXRoJywgJ2ZpbGwnLCAnZm9udCcsICd0ZXh0JywgJ3JlY3QnLCAnc2NhbGUnLCAnbW92ZVRvJywgJ2xpbmVUbycsICdzdHJva2UnLCAncm90YXRlJywgJ2NpcmNsZScsICdsaW5lQ2FwJywgJ29wYWNpdHknLCAnZWxsaXBzZScsICdwb2x5Z29uJywgJ3Jlc3RvcmUnLCAnbGluZUpvaW4nLCAnZm9udFNpemUnLCAnZmlsbENvbG9yJywgJ2xpbmVXaWR0aCcsICd0cmFuc2xhdGUnLCAnbWl0ZXJMaW1pdCcsICdzdHJva2VDb2xvcicsICdmaWxsT3BhY2l0eScsICdyb3VuZGVkUmVjdCcsICdmaWxsQW5kU3Ryb2tlJywgJ3N0cm9rZU9wYWNpdHknLCAnYmV6aWVyQ3VydmVUbycsICdxdWFkcmF0aWNDdXJ2ZVRvJywgJ2xpbmVhckdyYWRpZW50JywgJ3JhZGlhbEdyYWRpZW50J107XG52YXIgcGFpbnRlciA9IGZ1bmN0aW9uIHBhaW50ZXIoY3R4KSB7XG4gIHZhciBwID0gYXZhaWxhYmxlTWV0aG9kcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcHJvcCkge1xuICAgIHZhciBfZXh0ZW5kczI7XG4gICAgcmV0dXJuIF9leHRlbmRzKHt9LCBhY2MsIChfZXh0ZW5kczIgPSB7fSwgX2V4dGVuZHMyW3Byb3BdID0gZnVuY3Rpb24gKCkge1xuICAgICAgY3R4W3Byb3BdLmFwcGx5KGN0eCwgYXJndW1lbnRzKTtcbiAgICAgIHJldHVybiBwO1xuICAgIH0sIF9leHRlbmRzMikpO1xuICB9LCB7fSk7XG4gIHJldHVybiBwO1xufTtcbnZhciByZW5kZXJDYW52YXMgPSBmdW5jdGlvbiByZW5kZXJDYW52YXMoY3R4LCBub2RlKSB7XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB0b3AgPSBfbm9kZSRib3gudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gubGVmdCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0O1xuICB2YXIgcGFkZGluZ1RvcCA9IG5vZGUuYm94LnBhZGRpbmdUb3AgfHwgMDtcbiAgdmFyIHBhZGRpbmdMZWZ0ID0gbm9kZS5ib3gucGFkZGluZ0xlZnQgfHwgMDtcbiAgdmFyIHBhZGRpbmdSaWdodCA9IG5vZGUuYm94LnBhZGRpbmdSaWdodCB8fCAwO1xuICB2YXIgcGFkZGluZ0JvdHRvbSA9IG5vZGUuYm94LnBhZGRpbmdCb3R0b20gfHwgMDtcbiAgdmFyIGF2YWlsYWJsZVdpZHRoID0gd2lkdGggLSBwYWRkaW5nTGVmdCAtIHBhZGRpbmdSaWdodDtcbiAgdmFyIGF2YWlsYWJsZUhlaWdodCA9IGhlaWdodCAtIHBhZGRpbmdUb3AgLSBwYWRkaW5nQm90dG9tO1xuICBpZiAoIWF2YWlsYWJsZVdpZHRoIHx8ICFhdmFpbGFibGVIZWlnaHQpIHtcbiAgICBjb25zb2xlLndhcm4oJ0NhbnZhcyBlbGVtZW50IGhhcyBudWxsIHdpZHRoIG9yIGhlaWdodC4gUGxlYXNlIHByb3ZpZGUgdmFsaWQgdmFsdWVzIHZpYSB0aGUgYHN0eWxlYCBwcm9wIGluIG9yZGVyIHRvIGNvcnJlY3RseSByZW5kZXIgaXQuJyk7XG4gIH1cbiAgY3R4LnNhdmUoKS50cmFuc2xhdGUobGVmdCArIHBhZGRpbmdMZWZ0LCB0b3AgKyBwYWRkaW5nVG9wKTtcbiAgaWYgKG5vZGUucHJvcHMucGFpbnQpIHtcbiAgICBub2RlLnByb3BzLnBhaW50KHBhaW50ZXIoY3R4KSwgYXZhaWxhYmxlV2lkdGgsIGF2YWlsYWJsZUhlaWdodCk7XG4gIH1cbiAgY3R4LnJlc3RvcmUoKTtcbn07XG5cbi8vIFJlZjogaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1iYWNrZ3JvdW5kcy0zLyNib3JkZXJzXG5cbi8vIFRoaXMgY29uc3RhbnQgaXMgdXNlZCB0byBhcHByb3hpbWF0ZSBhIHN5bW1ldHJpY2FsIGFyYyB1c2luZyBhIGN1YmljIEJlemllciBjdXJ2ZS5cbnZhciBLQVBQQSA9IDQuMCAqICgoTWF0aC5zcXJ0KDIpIC0gMS4wKSAvIDMuMCk7XG52YXIgY2xpcEJvcmRlclRvcCA9IGZ1bmN0aW9uIGNsaXBCb3JkZXJUb3AoY3R4LCBsYXlvdXQsIHN0eWxlLCBydHIsIHJ0bCkge1xuICB2YXIgdG9wID0gbGF5b3V0LnRvcCxcbiAgICBsZWZ0ID0gbGF5b3V0LmxlZnQsXG4gICAgd2lkdGggPSBsYXlvdXQud2lkdGgsXG4gICAgaGVpZ2h0ID0gbGF5b3V0LmhlaWdodDtcbiAgdmFyIGJvcmRlclRvcFdpZHRoID0gc3R5bGUuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyUmlnaHRXaWR0aCA9IHN0eWxlLmJvcmRlclJpZ2h0V2lkdGgsXG4gICAgYm9yZGVyTGVmdFdpZHRoID0gc3R5bGUuYm9yZGVyTGVmdFdpZHRoO1xuXG4gIC8vIENsaXAgb3V0ZXIgdG9wIGJvcmRlciBlZGdlXG4gIGN0eC5tb3ZlVG8obGVmdCArIHJ0bCwgdG9wKTtcbiAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGggLSBydHIsIHRvcCk7XG5cbiAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIHJpZ2h0IGNhcFxuICB2YXIgYzAgPSBydHIgKiAoMS4wIC0gS0FQUEEpO1xuXG4gIC8vIENsaXAgb3V0ZXIgdG9wIHJpZ2h0IGNhcFxuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjMCwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGMwLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG5cbiAgLy8gTW92ZSBkb3duIGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gIHZhciB0b3BSaWdodFlDb29yZCA9IHRvcCArIE1hdGgubWF4KGJvcmRlclRvcFdpZHRoLCBydHIpO1xuICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wUmlnaHRZQ29vcmQpO1xuXG4gIC8vIENsaXAgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcFJpZ2h0WUNvb3JkKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciB0b3AgcmlnaHQgY2FwXG4gIHZhciBpbm5lclRvcFJpZ2h0UmFkaXVzWCA9IE1hdGgubWF4KHJ0ciAtIGJvcmRlclJpZ2h0V2lkdGgsIDApO1xuICB2YXIgaW5uZXJUb3BSaWdodFJhZGl1c1kgPSBNYXRoLm1heChydHIgLSBib3JkZXJUb3BXaWR0aCwgMCk7XG4gIHZhciBjMSA9IGlubmVyVG9wUmlnaHRSYWRpdXNYICogKDEuMCAtIEtBUFBBKTtcbiAgdmFyIGMyID0gaW5uZXJUb3BSaWdodFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuXG4gIC8vIENsaXAgaW5uZXIgdG9wIHJpZ2h0IGNhcFxuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoLCB0b3AgKyBib3JkZXJUb3BXaWR0aCArIGMyLCBsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoIC0gYzEsIHRvcCArIGJvcmRlclRvcFdpZHRoLCBsZWZ0ICsgd2lkdGggLSBib3JkZXJSaWdodFdpZHRoIC0gaW5uZXJUb3BSaWdodFJhZGl1c1gsIHRvcCArIGJvcmRlclRvcFdpZHRoKTtcblxuICAvLyBDbGlwIGlubmVyIHRvcCBib3JkZXIgZWRnZVxuICBjdHgubGluZVRvKGxlZnQgKyBNYXRoLm1heChydGwsIGJvcmRlckxlZnRXaWR0aCksIHRvcCArIGJvcmRlclRvcFdpZHRoKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciB0b3AgbGVmdCBjYXBcbiAgdmFyIGlubmVyVG9wTGVmdFJhZGl1c1ggPSBNYXRoLm1heChydGwgLSBib3JkZXJMZWZ0V2lkdGgsIDApO1xuICB2YXIgaW5uZXJUb3BMZWZ0UmFkaXVzWSA9IE1hdGgubWF4KHJ0bCAtIGJvcmRlclRvcFdpZHRoLCAwKTtcbiAgdmFyIGMzID0gaW5uZXJUb3BMZWZ0UmFkaXVzWCAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciBjNCA9IGlubmVyVG9wTGVmdFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgdG9wTGVmdFlDb29yZCA9IHRvcCArIE1hdGgubWF4KGJvcmRlclRvcFdpZHRoLCBydGwpO1xuXG4gIC8vIENsaXAgaW5uZXIgdG9wIGxlZnQgY2FwXG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBib3JkZXJMZWZ0V2lkdGggKyBjMywgdG9wICsgYm9yZGVyVG9wV2lkdGgsIGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGJvcmRlclRvcFdpZHRoICsgYzQsIGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcExlZnRZQ29vcmQpO1xuICBjdHgubGluZVRvKGxlZnQsIHRvcExlZnRZQ29vcmQpO1xuXG4gIC8vIE1vdmUgZG93biBpbiBjYXNlIHRoZSBtYXJnaW4gZXhjZWVkZXMgdGhlIHJhZGl1c1xuICBjdHgubGluZVRvKGxlZnQsIHRvcCArIHJ0bCk7XG5cbiAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIGxlZnQgY2FwXG4gIHZhciBjNSA9IHJ0bCAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgbGVmdCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCwgdG9wICsgYzUsIGxlZnQgKyBjNSwgdG9wLCBsZWZ0ICsgcnRsLCB0b3ApO1xuICBjdHguY2xvc2VQYXRoKCk7XG4gIGN0eC5jbGlwKCk7XG5cbiAgLy8gQ2xpcCBib3JkZXIgdG9wIGNhcCBqb2luc1xuICBpZiAoYm9yZGVyUmlnaHRXaWR0aCkge1xuICAgIHZhciB0clNsb3BlID0gLWJvcmRlclRvcFdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAoLXdpZHRoIC8gMikgKyB0b3ApO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3ApO1xuICAgIGN0eC5saW5lVG8obGVmdCwgdG9wKTtcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgIGN0eC5jbGlwKCk7XG4gIH1cbiAgaWYgKGJvcmRlckxlZnRXaWR0aCkge1xuICAgIHZhciBfdHJTbG9wZSA9IC1ib3JkZXJUb3BXaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIF90clNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wKTtcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgIGN0eC5jbGlwKCk7XG4gIH1cbn07XG52YXIgZmlsbEJvcmRlclRvcCA9IGZ1bmN0aW9uIGZpbGxCb3JkZXJUb3AoY3R4LCBsYXlvdXQsIHN0eWxlLCBydHIsIHJ0bCkge1xuICB2YXIgdG9wID0gbGF5b3V0LnRvcCxcbiAgICBsZWZ0ID0gbGF5b3V0LmxlZnQsXG4gICAgd2lkdGggPSBsYXlvdXQud2lkdGg7XG4gIHZhciBib3JkZXJUb3BDb2xvciA9IHN0eWxlLmJvcmRlclRvcENvbG9yLFxuICAgIGJvcmRlclRvcFdpZHRoID0gc3R5bGUuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyVG9wU3R5bGUgPSBzdHlsZS5ib3JkZXJUb3BTdHlsZSxcbiAgICBib3JkZXJSaWdodFdpZHRoID0gc3R5bGUuYm9yZGVyUmlnaHRXaWR0aCxcbiAgICBib3JkZXJMZWZ0V2lkdGggPSBzdHlsZS5ib3JkZXJMZWZ0V2lkdGg7XG4gIHZhciBjMCA9IHJ0bCAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciBjMSA9IHJ0ciAqICgxLjAgLSBLQVBQQSk7XG4gIGN0eC5tb3ZlVG8obGVmdCwgdG9wICsgTWF0aC5tYXgocnRsLCBib3JkZXJUb3BXaWR0aCkpO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0LCB0b3AgKyBjMCwgbGVmdCArIGMwLCB0b3AsIGxlZnQgKyBydGwsIHRvcCk7XG4gIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gcnRyLCB0b3ApO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGggLSBjMSwgdG9wLCBsZWZ0ICsgd2lkdGgsIHRvcCArIGMxLCBsZWZ0ICsgd2lkdGgsIHRvcCArIHJ0cik7XG4gIGN0eC5zdHJva2VDb2xvcihib3JkZXJUb3BDb2xvcik7XG4gIGN0eC5saW5lV2lkdGgoTWF0aC5tYXgoYm9yZGVyUmlnaHRXaWR0aCwgYm9yZGVyVG9wV2lkdGgsIGJvcmRlckxlZnRXaWR0aCkgKiAyKTtcbiAgaWYgKGJvcmRlclRvcFN0eWxlID09PSAnZGFzaGVkJykge1xuICAgIGN0eC5kYXNoKGJvcmRlclRvcFdpZHRoICogMiwge1xuICAgICAgc3BhY2U6IGJvcmRlclRvcFdpZHRoICogMS4yXG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoYm9yZGVyVG9wU3R5bGUgPT09ICdkb3R0ZWQnKSB7XG4gICAgY3R4LmRhc2goYm9yZGVyVG9wV2lkdGgsIHtcbiAgICAgIHNwYWNlOiBib3JkZXJUb3BXaWR0aCAqIDEuMlxuICAgIH0pO1xuICB9XG4gIGN0eC5zdHJva2UoKTtcbiAgY3R4LnVuZGFzaCgpO1xufTtcbnZhciBjbGlwQm9yZGVyUmlnaHQgPSBmdW5jdGlvbiBjbGlwQm9yZGVyUmlnaHQoY3R4LCBsYXlvdXQsIHN0eWxlLCBydHIsIHJicikge1xuICB2YXIgdG9wID0gbGF5b3V0LnRvcCxcbiAgICBsZWZ0ID0gbGF5b3V0LmxlZnQsXG4gICAgd2lkdGggPSBsYXlvdXQud2lkdGgsXG4gICAgaGVpZ2h0ID0gbGF5b3V0LmhlaWdodDtcbiAgdmFyIGJvcmRlclRvcFdpZHRoID0gc3R5bGUuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyUmlnaHRXaWR0aCA9IHN0eWxlLmJvcmRlclJpZ2h0V2lkdGgsXG4gICAgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aDtcblxuICAvLyBDbGlwIG91dGVyIHJpZ2h0IGJvcmRlciBlZGdlXG4gIGN0eC5tb3ZlVG8obGVmdCArIHdpZHRoLCB0b3AgKyBydHIpO1xuICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gcmJyKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBvdXRlciBib3R0b20gcmlnaHQgY2FwXG4gIHZhciBjMCA9IHJiciAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gYzAsIGxlZnQgKyB3aWR0aCAtIGMwLCB0b3AgKyBoZWlnaHQsIGxlZnQgKyB3aWR0aCAtIHJiciwgdG9wICsgaGVpZ2h0KTtcblxuICAvLyBNb3ZlIGxlZnQgaW4gY2FzZSB0aGUgbWFyZ2luIGV4Y2VlZGVzIHRoZSByYWRpdXNcbiAgdmFyIHRvcEJvdHRvbVhDb29yZCA9IGxlZnQgKyB3aWR0aCAtIE1hdGgubWF4KGJvcmRlclJpZ2h0V2lkdGgsIHJicik7XG4gIGN0eC5saW5lVG8odG9wQm90dG9tWENvb3JkLCB0b3AgKyBoZWlnaHQpO1xuXG4gIC8vIENsaXAgaW5uZXIgYm90dG9tIHJpZ2h0IGNhcFxuICBjdHgubGluZVRvKHRvcEJvdHRvbVhDb29yZCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgpO1xuXG4gIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIGJvdHRvbSByaWdodCBjYXBcbiAgdmFyIGlubmVyQm90dG9tUmlnaHRSYWRpdXNYID0gTWF0aC5tYXgocmJyIC0gYm9yZGVyUmlnaHRXaWR0aCwgMCk7XG4gIHZhciBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWSA9IE1hdGgubWF4KHJiciAtIGJvcmRlckJvdHRvbVdpZHRoLCAwKTtcbiAgdmFyIGMxID0gaW5uZXJCb3R0b21SaWdodFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgYzIgPSBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWSAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBpbm5lciB0b3AgcmlnaHQgY2FwXG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGggLSBjMSwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoIC0gYzIsIGxlZnQgKyB3aWR0aCAtIGJvcmRlclJpZ2h0V2lkdGgsIHRvcCArIGhlaWdodCAtIE1hdGgubWF4KHJiciwgYm9yZGVyQm90dG9tV2lkdGgpKTtcblxuICAvLyBDbGlwIGlubmVyIHJpZ2h0IGJvcmRlciBlZGdlXG4gIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgdG9wICsgTWF0aC5tYXgocnRyLCBib3JkZXJUb3BXaWR0aCkpO1xuXG4gIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCByaWdodCBjYXBcbiAgdmFyIGlubmVyVG9wUmlnaHRSYWRpdXNYID0gTWF0aC5tYXgocnRyIC0gYm9yZGVyUmlnaHRXaWR0aCwgMCk7XG4gIHZhciBpbm5lclRvcFJpZ2h0UmFkaXVzWSA9IE1hdGgubWF4KHJ0ciAtIGJvcmRlclRvcFdpZHRoLCAwKTtcbiAgdmFyIGMzID0gaW5uZXJUb3BSaWdodFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgYzQgPSBpbm5lclRvcFJpZ2h0UmFkaXVzWSAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciB0b3BSaWdodFhDb29yZCA9IGxlZnQgKyB3aWR0aCAtIE1hdGgubWF4KHJ0ciwgYm9yZGVyUmlnaHRXaWR0aCk7XG5cbiAgLy8gQ2xpcCBpbm5lciB0b3AgbGVmdCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgdG9wICsgYm9yZGVyVG9wV2lkdGggKyBjNCwgbGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCAtIGMzLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgdG9wUmlnaHRYQ29vcmQsIHRvcCArIGJvcmRlclRvcFdpZHRoKTtcbiAgY3R4LmxpbmVUbyh0b3BSaWdodFhDb29yZCwgdG9wKTtcblxuICAvLyBNb3ZlIHJpZ2h0IGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gcnRyLCB0b3ApO1xuXG4gIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIG91dGVyIHRvcCByaWdodCBjYXBcbiAgdmFyIGM1ID0gcnRyICogKDEuMCAtIEtBUFBBKTtcblxuICAvLyBDbGlwIG91dGVyIHRvcCByaWdodCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoIC0gYzUsIHRvcCwgbGVmdCArIHdpZHRoLCB0b3AgKyBjNSwgbGVmdCArIHdpZHRoLCB0b3AgKyBydHIpO1xuICBjdHguY2xvc2VQYXRoKCk7XG4gIGN0eC5jbGlwKCk7XG5cbiAgLy8gQ2xpcCBib3JkZXIgcmlnaHQgY2FwIGpvaW5zXG4gIGlmIChib3JkZXJUb3BXaWR0aCkge1xuICAgIHZhciB0clNsb3BlID0gLWJvcmRlclRvcFdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAoLXdpZHRoIC8gMikgKyB0b3ApO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3ApO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCwgdG9wICsgaGVpZ2h0KTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgY3R4LmNsaXAoKTtcbiAgfVxuICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICB2YXIgYnJTbG9wZSA9IGJvcmRlckJvdHRvbVdpZHRoIC8gYm9yZGVyUmlnaHRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIGJyU2xvcGUgKiAoLXdpZHRoIC8gMikgKyB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3ApO1xuICAgIGN0eC5saW5lVG8obGVmdCwgdG9wKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgY3R4LmNsaXAoKTtcbiAgfVxufTtcbnZhciBmaWxsQm9yZGVyUmlnaHQgPSBmdW5jdGlvbiBmaWxsQm9yZGVyUmlnaHQoY3R4LCBsYXlvdXQsIHN0eWxlLCBydHIsIHJicikge1xuICB2YXIgdG9wID0gbGF5b3V0LnRvcCxcbiAgICBsZWZ0ID0gbGF5b3V0LmxlZnQsXG4gICAgd2lkdGggPSBsYXlvdXQud2lkdGgsXG4gICAgaGVpZ2h0ID0gbGF5b3V0LmhlaWdodDtcbiAgdmFyIGJvcmRlclJpZ2h0Q29sb3IgPSBzdHlsZS5ib3JkZXJSaWdodENvbG9yLFxuICAgIGJvcmRlclJpZ2h0U3R5bGUgPSBzdHlsZS5ib3JkZXJSaWdodFN0eWxlLFxuICAgIGJvcmRlclJpZ2h0V2lkdGggPSBzdHlsZS5ib3JkZXJSaWdodFdpZHRoLFxuICAgIGJvcmRlclRvcFdpZHRoID0gc3R5bGUuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aDtcbiAgdmFyIGMwID0gcmJyICogKDEuMCAtIEtBUFBBKTtcbiAgdmFyIGMxID0gcnRyICogKDEuMCAtIEtBUFBBKTtcbiAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLSBydHIsIHRvcCk7XG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCAtIGMxLCB0b3AsIGxlZnQgKyB3aWR0aCwgdG9wICsgYzEsIGxlZnQgKyB3aWR0aCwgdG9wICsgcnRyKTtcbiAgY3R4LmxpbmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIHJicik7XG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gYzAsIGxlZnQgKyB3aWR0aCAtIGMwLCB0b3AgKyBoZWlnaHQsIGxlZnQgKyB3aWR0aCAtIHJiciwgdG9wICsgaGVpZ2h0KTtcbiAgY3R4LnN0cm9rZUNvbG9yKGJvcmRlclJpZ2h0Q29sb3IpO1xuICBjdHgubGluZVdpZHRoKE1hdGgubWF4KGJvcmRlclJpZ2h0V2lkdGgsIGJvcmRlclRvcFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCkgKiAyKTtcbiAgaWYgKGJvcmRlclJpZ2h0U3R5bGUgPT09ICdkYXNoZWQnKSB7XG4gICAgY3R4LmRhc2goYm9yZGVyUmlnaHRXaWR0aCAqIDIsIHtcbiAgICAgIHNwYWNlOiBib3JkZXJSaWdodFdpZHRoICogMS4yXG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoYm9yZGVyUmlnaHRTdHlsZSA9PT0gJ2RvdHRlZCcpIHtcbiAgICBjdHguZGFzaChib3JkZXJSaWdodFdpZHRoLCB7XG4gICAgICBzcGFjZTogYm9yZGVyUmlnaHRXaWR0aCAqIDEuMlxuICAgIH0pO1xuICB9XG4gIGN0eC5zdHJva2UoKTtcbiAgY3R4LnVuZGFzaCgpO1xufTtcbnZhciBjbGlwQm9yZGVyQm90dG9tID0gZnVuY3Rpb24gY2xpcEJvcmRlckJvdHRvbShjdHgsIGxheW91dCwgc3R5bGUsIHJibCwgcmJyKSB7XG4gIHZhciB0b3AgPSBsYXlvdXQudG9wLFxuICAgIGxlZnQgPSBsYXlvdXQubGVmdCxcbiAgICB3aWR0aCA9IGxheW91dC53aWR0aCxcbiAgICBoZWlnaHQgPSBsYXlvdXQuaGVpZ2h0O1xuICB2YXIgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aCxcbiAgICBib3JkZXJSaWdodFdpZHRoID0gc3R5bGUuYm9yZGVyUmlnaHRXaWR0aCxcbiAgICBib3JkZXJMZWZ0V2lkdGggPSBzdHlsZS5ib3JkZXJMZWZ0V2lkdGg7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgYm9yZGVyIGVkZ2VcbiAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLSByYnIsIHRvcCArIGhlaWdodCk7XG4gIGN0eC5saW5lVG8obGVmdCArIHJibCwgdG9wICsgaGVpZ2h0KTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBvdXRlciB0b3AgcmlnaHQgY2FwXG4gIHZhciBjMCA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBjMCwgdG9wICsgaGVpZ2h0LCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSBjMCwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gcmJsKTtcblxuICAvLyBNb3ZlIHVwIGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gIHZhciBib3R0b21MZWZ0WUNvb3JkID0gdG9wICsgaGVpZ2h0IC0gTWF0aC5tYXgoYm9yZGVyQm90dG9tV2lkdGgsIHJibCk7XG4gIGN0eC5saW5lVG8obGVmdCwgYm90dG9tTGVmdFlDb29yZCk7XG5cbiAgLy8gQ2xpcCBpbm5lciBib3R0b20gbGVmdCBjYXBcbiAgY3R4LmxpbmVUbyhsZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCBib3R0b21MZWZ0WUNvb3JkKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciB0b3AgcmlnaHQgY2FwXG4gIHZhciBpbm5lckJvdHRvbUxlZnRSYWRpdXNYID0gTWF0aC5tYXgocmJsIC0gYm9yZGVyTGVmdFdpZHRoLCAwKTtcbiAgdmFyIGlubmVyQm90dG9tTGVmdFJhZGl1c1kgPSBNYXRoLm1heChyYmwgLSBib3JkZXJCb3R0b21XaWR0aCwgMCk7XG4gIHZhciBjMSA9IGlubmVyQm90dG9tTGVmdFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgYzIgPSBpbm5lckJvdHRvbUxlZnRSYWRpdXNZICogKDEuMCAtIEtBUFBBKTtcblxuICAvLyBDbGlwIGlubmVyIGJvdHRvbSBsZWZ0IGNhcFxuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgYm9yZGVyTGVmdFdpZHRoLCB0b3AgKyBoZWlnaHQgLSBib3JkZXJCb3R0b21XaWR0aCAtIGMyLCBsZWZ0ICsgYm9yZGVyTGVmdFdpZHRoICsgYzEsIHRvcCArIGhlaWdodCAtIGJvcmRlckJvdHRvbVdpZHRoLCBsZWZ0ICsgYm9yZGVyTGVmdFdpZHRoICsgaW5uZXJCb3R0b21MZWZ0UmFkaXVzWCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgpO1xuXG4gIC8vIENsaXAgaW5uZXIgYm90dG9tIGJvcmRlciBlZGdlXG4gIGN0eC5saW5lVG8obGVmdCArIHdpZHRoIC0gTWF0aC5tYXgocmJyLCBib3JkZXJSaWdodFdpZHRoKSwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgpO1xuXG4gIC8vIEVsbGlwc2UgY29lZmZpY2llbnRzIGlubmVyIHRvcCBsZWZ0IGNhcFxuICB2YXIgaW5uZXJCb3R0b21SaWdodFJhZGl1c1ggPSBNYXRoLm1heChyYnIgLSBib3JkZXJSaWdodFdpZHRoLCAwKTtcbiAgdmFyIGlubmVyQm90dG9tUmlnaHRSYWRpdXNZID0gTWF0aC5tYXgocmJyIC0gYm9yZGVyQm90dG9tV2lkdGgsIDApO1xuICB2YXIgYzMgPSBpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWCAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciBjNCA9IGlubmVyQm90dG9tUmlnaHRSYWRpdXNZICogKDEuMCAtIEtBUFBBKTtcbiAgdmFyIGJvdHRvbVJpZ2h0WUNvb3JkID0gdG9wICsgaGVpZ2h0IC0gTWF0aC5tYXgoYm9yZGVyQm90dG9tV2lkdGgsIHJicik7XG5cbiAgLy8gQ2xpcCBpbm5lciB0b3AgbGVmdCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCAtIGMzLCB0b3AgKyBoZWlnaHQgLSBib3JkZXJCb3R0b21XaWR0aCwgbGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGggLSBjNCwgbGVmdCArIHdpZHRoIC0gYm9yZGVyUmlnaHRXaWR0aCwgYm90dG9tUmlnaHRZQ29vcmQpO1xuICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgYm90dG9tUmlnaHRZQ29vcmQpO1xuXG4gIC8vIE1vdmUgZG93biBpbiBjYXNlIHRoZSBtYXJnaW4gZXhjZWVkZXMgdGhlIHJhZGl1c1xuICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0IC0gcmJyKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBvdXRlciB0b3AgbGVmdCBjYXBcbiAgdmFyIGM1ID0gcmJyICogKDEuMCAtIEtBUFBBKTtcblxuICAvLyBDbGlwIG91dGVyIHRvcCBsZWZ0IGNhcFxuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIGM1LCBsZWZ0ICsgd2lkdGggLSBjNSwgdG9wICsgaGVpZ2h0LCBsZWZ0ICsgd2lkdGggLSByYnIsIHRvcCArIGhlaWdodCk7XG4gIGN0eC5jbG9zZVBhdGgoKTtcbiAgY3R4LmNsaXAoKTtcblxuICAvLyBDbGlwIGJvcmRlciBib3R0b20gY2FwIGpvaW5zXG4gIGlmIChib3JkZXJSaWdodFdpZHRoKSB7XG4gICAgdmFyIGJyU2xvcGUgPSBib3JkZXJCb3R0b21XaWR0aCAvIGJvcmRlclJpZ2h0V2lkdGg7XG4gICAgY3R4Lm1vdmVUbyhsZWZ0ICsgd2lkdGggLyAyLCBiclNsb3BlICogKC13aWR0aCAvIDIpICsgdG9wICsgaGVpZ2h0KTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wICsgaGVpZ2h0KTtcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3ApO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguY2xpcCgpO1xuICB9XG4gIGlmIChib3JkZXJMZWZ0V2lkdGgpIHtcbiAgICB2YXIgdHJTbG9wZSA9IC1ib3JkZXJCb3R0b21XaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAod2lkdGggLyAyKSArIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3ApO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguY2xpcCgpO1xuICB9XG59O1xudmFyIGZpbGxCb3JkZXJCb3R0b20gPSBmdW5jdGlvbiBmaWxsQm9yZGVyQm90dG9tKGN0eCwgbGF5b3V0LCBzdHlsZSwgcmJsLCByYnIpIHtcbiAgdmFyIHRvcCA9IGxheW91dC50b3AsXG4gICAgbGVmdCA9IGxheW91dC5sZWZ0LFxuICAgIHdpZHRoID0gbGF5b3V0LndpZHRoLFxuICAgIGhlaWdodCA9IGxheW91dC5oZWlnaHQ7XG4gIHZhciBib3JkZXJCb3R0b21Db2xvciA9IHN0eWxlLmJvcmRlckJvdHRvbUNvbG9yLFxuICAgIGJvcmRlckJvdHRvbVN0eWxlID0gc3R5bGUuYm9yZGVyQm90dG9tU3R5bGUsXG4gICAgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aCxcbiAgICBib3JkZXJSaWdodFdpZHRoID0gc3R5bGUuYm9yZGVyUmlnaHRXaWR0aCxcbiAgICBib3JkZXJMZWZ0V2lkdGggPSBzdHlsZS5ib3JkZXJMZWZ0V2lkdGg7XG4gIHZhciBjMCA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciBjMSA9IHJiciAqICgxLjAgLSBLQVBQQSk7XG4gIGN0eC5tb3ZlVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQgLSByYnIpO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgd2lkdGgsIHRvcCArIGhlaWdodCAtIGMxLCBsZWZ0ICsgd2lkdGggLSBjMSwgdG9wICsgaGVpZ2h0LCBsZWZ0ICsgd2lkdGggLSByYnIsIHRvcCArIGhlaWdodCk7XG4gIGN0eC5saW5lVG8obGVmdCArIHJibCwgdG9wICsgaGVpZ2h0KTtcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGMwLCB0b3AgKyBoZWlnaHQsIGxlZnQsIHRvcCArIGhlaWdodCAtIGMwLCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuICBjdHguc3Ryb2tlQ29sb3IoYm9yZGVyQm90dG9tQ29sb3IpO1xuICBjdHgubGluZVdpZHRoKE1hdGgubWF4KGJvcmRlckJvdHRvbVdpZHRoLCBib3JkZXJSaWdodFdpZHRoLCBib3JkZXJMZWZ0V2lkdGgpICogMik7XG4gIGlmIChib3JkZXJCb3R0b21TdHlsZSA9PT0gJ2Rhc2hlZCcpIHtcbiAgICBjdHguZGFzaChib3JkZXJCb3R0b21XaWR0aCAqIDIsIHtcbiAgICAgIHNwYWNlOiBib3JkZXJCb3R0b21XaWR0aCAqIDEuMlxuICAgIH0pO1xuICB9IGVsc2UgaWYgKGJvcmRlckJvdHRvbVN0eWxlID09PSAnZG90dGVkJykge1xuICAgIGN0eC5kYXNoKGJvcmRlckJvdHRvbVdpZHRoLCB7XG4gICAgICBzcGFjZTogYm9yZGVyQm90dG9tV2lkdGggKiAxLjJcbiAgICB9KTtcbiAgfVxuICBjdHguc3Ryb2tlKCk7XG4gIGN0eC51bmRhc2goKTtcbn07XG52YXIgY2xpcEJvcmRlckxlZnQgPSBmdW5jdGlvbiBjbGlwQm9yZGVyTGVmdChjdHgsIGxheW91dCwgc3R5bGUsIHJibCwgcnRsKSB7XG4gIHZhciB0b3AgPSBsYXlvdXQudG9wLFxuICAgIGxlZnQgPSBsYXlvdXQubGVmdCxcbiAgICB3aWR0aCA9IGxheW91dC53aWR0aCxcbiAgICBoZWlnaHQgPSBsYXlvdXQuaGVpZ2h0O1xuICB2YXIgYm9yZGVyVG9wV2lkdGggPSBzdHlsZS5ib3JkZXJUb3BXaWR0aCxcbiAgICBib3JkZXJMZWZ0V2lkdGggPSBzdHlsZS5ib3JkZXJMZWZ0V2lkdGgsXG4gICAgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aDtcblxuICAvLyBDbGlwIG91dGVyIGxlZnQgYm9yZGVyIGVkZ2VcbiAgY3R4Lm1vdmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQgLSByYmwpO1xuICBjdHgubGluZVRvKGxlZnQsIHRvcCArIHJ0bCk7XG5cbiAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgb3V0ZXIgdG9wIGxlZnQgY2FwXG4gIHZhciBjMCA9IHJ0bCAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgbGVmdCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCwgdG9wICsgYzAsIGxlZnQgKyBjMCwgdG9wLCBsZWZ0ICsgcnRsLCB0b3ApO1xuXG4gIC8vIE1vdmUgcmlnaHQgaW4gY2FzZSB0aGUgbWFyZ2luIGV4Y2VlZGVzIHRoZSByYWRpdXNcbiAgdmFyIHRvcExlZnRDb29yZFggPSBsZWZ0ICsgTWF0aC5tYXgoYm9yZGVyTGVmdFdpZHRoLCBydGwpO1xuICBjdHgubGluZVRvKHRvcExlZnRDb29yZFgsIHRvcCk7XG5cbiAgLy8gQ2xpcCBpbm5lciB0b3AgbGVmdCBjYXBcbiAgY3R4LmxpbmVUbyh0b3BMZWZ0Q29vcmRYLCB0b3AgKyBib3JkZXJUb3BXaWR0aCk7XG5cbiAgLy8gRWxsaXBzZSBjb2VmZmljaWVudHMgaW5uZXIgdG9wIGxlZnQgY2FwXG4gIHZhciBpbm5lclRvcExlZnRSYWRpdXNYID0gTWF0aC5tYXgocnRsIC0gYm9yZGVyTGVmdFdpZHRoLCAwKTtcbiAgdmFyIGlubmVyVG9wTGVmdFJhZGl1c1kgPSBNYXRoLm1heChydGwgLSBib3JkZXJUb3BXaWR0aCwgMCk7XG4gIHZhciBjMSA9IGlubmVyVG9wTGVmdFJhZGl1c1ggKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgYzIgPSBpbm5lclRvcExlZnRSYWRpdXNZICogKDEuMCAtIEtBUFBBKTtcblxuICAvLyBDbGlwIGlubmVyIHRvcCByaWdodCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGJvcmRlckxlZnRXaWR0aCArIGMxLCB0b3AgKyBib3JkZXJUb3BXaWR0aCwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgYm9yZGVyVG9wV2lkdGggKyBjMiwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgTWF0aC5tYXgocnRsLCBib3JkZXJUb3BXaWR0aCkpO1xuXG4gIC8vIENsaXAgaW5uZXIgbGVmdCBib3JkZXIgZWRnZVxuICBjdHgubGluZVRvKGxlZnQgKyBib3JkZXJMZWZ0V2lkdGgsIHRvcCArIGhlaWdodCAtIE1hdGgubWF4KHJibCwgYm9yZGVyQm90dG9tV2lkdGgpKTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBpbm5lciBib3R0b20gbGVmdCBjYXBcbiAgdmFyIGlubmVyQm90dG9tTGVmdFJhZGl1c1ggPSBNYXRoLm1heChyYmwgLSBib3JkZXJMZWZ0V2lkdGgsIDApO1xuICB2YXIgaW5uZXJCb3R0b21MZWZ0UmFkaXVzWSA9IE1hdGgubWF4KHJibCAtIGJvcmRlckJvdHRvbVdpZHRoLCAwKTtcbiAgdmFyIGMzID0gaW5uZXJCb3R0b21MZWZ0UmFkaXVzWCAqICgxLjAgLSBLQVBQQSk7XG4gIHZhciBjNCA9IGlubmVyQm90dG9tTGVmdFJhZGl1c1kgKiAoMS4wIC0gS0FQUEEpO1xuICB2YXIgYm90dG9tTGVmdFhDb29yZCA9IGxlZnQgKyBNYXRoLm1heChyYmwsIGJvcmRlckxlZnRXaWR0aCk7XG5cbiAgLy8gQ2xpcCBpbm5lciB0b3AgbGVmdCBjYXBcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCArIGJvcmRlckxlZnRXaWR0aCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGggLSBjNCwgbGVmdCArIGJvcmRlckxlZnRXaWR0aCArIGMzLCB0b3AgKyBoZWlnaHQgLSBib3JkZXJCb3R0b21XaWR0aCwgYm90dG9tTGVmdFhDb29yZCwgdG9wICsgaGVpZ2h0IC0gYm9yZGVyQm90dG9tV2lkdGgpO1xuICBjdHgubGluZVRvKGJvdHRvbUxlZnRYQ29vcmQsIHRvcCArIGhlaWdodCk7XG5cbiAgLy8gTW92ZSBsZWZ0IGluIGNhc2UgdGhlIG1hcmdpbiBleGNlZWRlcyB0aGUgcmFkaXVzXG4gIGN0eC5saW5lVG8obGVmdCArIHJibCwgdG9wICsgaGVpZ2h0KTtcblxuICAvLyBFbGxpcHNlIGNvZWZmaWNpZW50cyBvdXRlciB0b3AgcmlnaHQgY2FwXG4gIHZhciBjNSA9IHJibCAqICgxLjAgLSBLQVBQQSk7XG5cbiAgLy8gQ2xpcCBvdXRlciB0b3AgcmlnaHQgY2FwXG4gIGN0eC5iZXppZXJDdXJ2ZVRvKGxlZnQgKyBjNSwgdG9wICsgaGVpZ2h0LCBsZWZ0LCB0b3AgKyBoZWlnaHQgLSBjNSwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gcmJsKTtcbiAgY3R4LmNsb3NlUGF0aCgpO1xuICBjdHguY2xpcCgpO1xuXG4gIC8vIENsaXAgYm9yZGVyIHJpZ2h0IGNhcCBqb2luc1xuICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICB2YXIgdHJTbG9wZSA9IC1ib3JkZXJCb3R0b21XaWR0aCAvIGJvcmRlckxlZnRXaWR0aDtcbiAgICBjdHgubW92ZVRvKGxlZnQgKyB3aWR0aCAvIDIsIHRyU2xvcGUgKiAod2lkdGggLyAyKSArIHRvcCArIGhlaWdodCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCwgdG9wKTtcbiAgICBjdHgubGluZVRvKGxlZnQgKyB3aWR0aCwgdG9wKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgY3R4LmNsaXAoKTtcbiAgfVxuICBpZiAoYm9yZGVyQm90dG9tV2lkdGgpIHtcbiAgICB2YXIgX3RyU2xvcGUyID0gLWJvcmRlclRvcFdpZHRoIC8gYm9yZGVyTGVmdFdpZHRoO1xuICAgIGN0eC5tb3ZlVG8obGVmdCArIHdpZHRoIC8gMiwgX3RyU2xvcGUyICogKC13aWR0aCAvIDIpICsgdG9wKTtcbiAgICBjdHgubGluZVRvKGxlZnQsIHRvcCk7XG4gICAgY3R4LmxpbmVUbyhsZWZ0LCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5saW5lVG8obGVmdCArIHdpZHRoLCB0b3AgKyBoZWlnaHQpO1xuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguY2xpcCgpO1xuICB9XG59O1xudmFyIGZpbGxCb3JkZXJMZWZ0ID0gZnVuY3Rpb24gZmlsbEJvcmRlckxlZnQoY3R4LCBsYXlvdXQsIHN0eWxlLCByYmwsIHJ0bCkge1xuICB2YXIgdG9wID0gbGF5b3V0LnRvcCxcbiAgICBsZWZ0ID0gbGF5b3V0LmxlZnQsXG4gICAgaGVpZ2h0ID0gbGF5b3V0LmhlaWdodDtcbiAgdmFyIGJvcmRlckxlZnRDb2xvciA9IHN0eWxlLmJvcmRlckxlZnRDb2xvcixcbiAgICBib3JkZXJMZWZ0U3R5bGUgPSBzdHlsZS5ib3JkZXJMZWZ0U3R5bGUsXG4gICAgYm9yZGVyTGVmdFdpZHRoID0gc3R5bGUuYm9yZGVyTGVmdFdpZHRoLFxuICAgIGJvcmRlclRvcFdpZHRoID0gc3R5bGUuYm9yZGVyVG9wV2lkdGgsXG4gICAgYm9yZGVyQm90dG9tV2lkdGggPSBzdHlsZS5ib3JkZXJCb3R0b21XaWR0aDtcbiAgdmFyIGMwID0gcmJsICogKDEuMCAtIEtBUFBBKTtcbiAgdmFyIGMxID0gcnRsICogKDEuMCAtIEtBUFBBKTtcbiAgY3R4Lm1vdmVUbyhsZWZ0ICsgcmJsLCB0b3AgKyBoZWlnaHQpO1xuICBjdHguYmV6aWVyQ3VydmVUbyhsZWZ0ICsgYzAsIHRvcCArIGhlaWdodCwgbGVmdCwgdG9wICsgaGVpZ2h0IC0gYzAsIGxlZnQsIHRvcCArIGhlaWdodCAtIHJibCk7XG4gIGN0eC5saW5lVG8obGVmdCwgdG9wICsgcnRsKTtcbiAgY3R4LmJlemllckN1cnZlVG8obGVmdCwgdG9wICsgYzEsIGxlZnQgKyBjMSwgdG9wLCBsZWZ0ICsgcnRsLCB0b3ApO1xuICBjdHguc3Ryb2tlQ29sb3IoYm9yZGVyTGVmdENvbG9yKTtcbiAgY3R4LmxpbmVXaWR0aChNYXRoLm1heChib3JkZXJMZWZ0V2lkdGgsIGJvcmRlclRvcFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCkgKiAyKTtcbiAgaWYgKGJvcmRlckxlZnRTdHlsZSA9PT0gJ2Rhc2hlZCcpIHtcbiAgICBjdHguZGFzaChib3JkZXJMZWZ0V2lkdGggKiAyLCB7XG4gICAgICBzcGFjZTogYm9yZGVyTGVmdFdpZHRoICogMS4yXG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoYm9yZGVyTGVmdFN0eWxlID09PSAnZG90dGVkJykge1xuICAgIGN0eC5kYXNoKGJvcmRlckxlZnRXaWR0aCwge1xuICAgICAgc3BhY2U6IGJvcmRlckxlZnRXaWR0aCAqIDEuMlxuICAgIH0pO1xuICB9XG4gIGN0eC5zdHJva2UoKTtcbiAgY3R4LnVuZGFzaCgpO1xufTtcbnZhciBzaG91bGRSZW5kZXJCb3JkZXJzID0gZnVuY3Rpb24gc2hvdWxkUmVuZGVyQm9yZGVycyhub2RlKSB7XG4gIHJldHVybiBub2RlLmJveCAmJiAobm9kZS5ib3guYm9yZGVyVG9wV2lkdGggfHwgbm9kZS5ib3guYm9yZGVyUmlnaHRXaWR0aCB8fCBub2RlLmJveC5ib3JkZXJCb3R0b21XaWR0aCB8fCBub2RlLmJveC5ib3JkZXJMZWZ0V2lkdGgpO1xufTtcbnZhciByZW5kZXJCb3JkZXJzID0gZnVuY3Rpb24gcmVuZGVyQm9yZGVycyhjdHgsIG5vZGUpIHtcbiAgaWYgKCFzaG91bGRSZW5kZXJCb3JkZXJzKG5vZGUpKSByZXR1cm47XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0LFxuICAgIGJvcmRlclRvcFdpZHRoID0gX25vZGUkYm94LmJvcmRlclRvcFdpZHRoLFxuICAgIGJvcmRlckxlZnRXaWR0aCA9IF9ub2RlJGJveC5ib3JkZXJMZWZ0V2lkdGgsXG4gICAgYm9yZGVyUmlnaHRXaWR0aCA9IF9ub2RlJGJveC5ib3JkZXJSaWdodFdpZHRoLFxuICAgIGJvcmRlckJvdHRvbVdpZHRoID0gX25vZGUkYm94LmJvcmRlckJvdHRvbVdpZHRoO1xuICB2YXIgX25vZGUkc3R5bGUgPSBub2RlLnN0eWxlLFxuICAgIG9wYWNpdHkgPSBfbm9kZSRzdHlsZS5vcGFjaXR5LFxuICAgIF9ub2RlJHN0eWxlJGJvcmRlclRvcCA9IF9ub2RlJHN0eWxlLmJvcmRlclRvcExlZnRSYWRpdXMsXG4gICAgYm9yZGVyVG9wTGVmdFJhZGl1cyA9IF9ub2RlJHN0eWxlJGJvcmRlclRvcCA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJHN0eWxlJGJvcmRlclRvcCxcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJUb3AyID0gX25vZGUkc3R5bGUuYm9yZGVyVG9wUmlnaHRSYWRpdXMsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXMgPSBfbm9kZSRzdHlsZSRib3JkZXJUb3AyID09PSB2b2lkIDAgPyAwIDogX25vZGUkc3R5bGUkYm9yZGVyVG9wMixcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJCb3QgPSBfbm9kZSRzdHlsZS5ib3JkZXJCb3R0b21MZWZ0UmFkaXVzLFxuICAgIGJvcmRlckJvdHRvbUxlZnRSYWRpdXMgPSBfbm9kZSRzdHlsZSRib3JkZXJCb3QgPT09IHZvaWQgMCA/IDAgOiBfbm9kZSRzdHlsZSRib3JkZXJCb3QsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyQm90MiA9IF9ub2RlJHN0eWxlLmJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzLFxuICAgIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzID0gX25vZGUkc3R5bGUkYm9yZGVyQm90MiA9PT0gdm9pZCAwID8gMCA6IF9ub2RlJHN0eWxlJGJvcmRlckJvdDIsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyVG9wMyA9IF9ub2RlJHN0eWxlLmJvcmRlclRvcENvbG9yLFxuICAgIGJvcmRlclRvcENvbG9yID0gX25vZGUkc3R5bGUkYm9yZGVyVG9wMyA9PT0gdm9pZCAwID8gJ2JsYWNrJyA6IF9ub2RlJHN0eWxlJGJvcmRlclRvcDMsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyVG9wNCA9IF9ub2RlJHN0eWxlLmJvcmRlclRvcFN0eWxlLFxuICAgIGJvcmRlclRvcFN0eWxlID0gX25vZGUkc3R5bGUkYm9yZGVyVG9wNCA9PT0gdm9pZCAwID8gJ3NvbGlkJyA6IF9ub2RlJHN0eWxlJGJvcmRlclRvcDQsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyTGVmID0gX25vZGUkc3R5bGUuYm9yZGVyTGVmdENvbG9yLFxuICAgIGJvcmRlckxlZnRDb2xvciA9IF9ub2RlJHN0eWxlJGJvcmRlckxlZiA9PT0gdm9pZCAwID8gJ2JsYWNrJyA6IF9ub2RlJHN0eWxlJGJvcmRlckxlZixcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJMZWYyID0gX25vZGUkc3R5bGUuYm9yZGVyTGVmdFN0eWxlLFxuICAgIGJvcmRlckxlZnRTdHlsZSA9IF9ub2RlJHN0eWxlJGJvcmRlckxlZjIgPT09IHZvaWQgMCA/ICdzb2xpZCcgOiBfbm9kZSRzdHlsZSRib3JkZXJMZWYyLFxuICAgIF9ub2RlJHN0eWxlJGJvcmRlclJpZyA9IF9ub2RlJHN0eWxlLmJvcmRlclJpZ2h0Q29sb3IsXG4gICAgYm9yZGVyUmlnaHRDb2xvciA9IF9ub2RlJHN0eWxlJGJvcmRlclJpZyA9PT0gdm9pZCAwID8gJ2JsYWNrJyA6IF9ub2RlJHN0eWxlJGJvcmRlclJpZyxcbiAgICBfbm9kZSRzdHlsZSRib3JkZXJSaWcyID0gX25vZGUkc3R5bGUuYm9yZGVyUmlnaHRTdHlsZSxcbiAgICBib3JkZXJSaWdodFN0eWxlID0gX25vZGUkc3R5bGUkYm9yZGVyUmlnMiA9PT0gdm9pZCAwID8gJ3NvbGlkJyA6IF9ub2RlJHN0eWxlJGJvcmRlclJpZzIsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyQm90MyA9IF9ub2RlJHN0eWxlLmJvcmRlckJvdHRvbUNvbG9yLFxuICAgIGJvcmRlckJvdHRvbUNvbG9yID0gX25vZGUkc3R5bGUkYm9yZGVyQm90MyA9PT0gdm9pZCAwID8gJ2JsYWNrJyA6IF9ub2RlJHN0eWxlJGJvcmRlckJvdDMsXG4gICAgX25vZGUkc3R5bGUkYm9yZGVyQm90NCA9IF9ub2RlJHN0eWxlLmJvcmRlckJvdHRvbVN0eWxlLFxuICAgIGJvcmRlckJvdHRvbVN0eWxlID0gX25vZGUkc3R5bGUkYm9yZGVyQm90NCA9PT0gdm9pZCAwID8gJ3NvbGlkJyA6IF9ub2RlJHN0eWxlJGJvcmRlckJvdDQ7XG4gIHZhciBzdHlsZSA9IHtcbiAgICBib3JkZXJUb3BDb2xvcjogYm9yZGVyVG9wQ29sb3IsXG4gICAgYm9yZGVyVG9wV2lkdGg6IGJvcmRlclRvcFdpZHRoLFxuICAgIGJvcmRlclRvcFN0eWxlOiBib3JkZXJUb3BTdHlsZSxcbiAgICBib3JkZXJMZWZ0Q29sb3I6IGJvcmRlckxlZnRDb2xvcixcbiAgICBib3JkZXJMZWZ0V2lkdGg6IGJvcmRlckxlZnRXaWR0aCxcbiAgICBib3JkZXJMZWZ0U3R5bGU6IGJvcmRlckxlZnRTdHlsZSxcbiAgICBib3JkZXJSaWdodENvbG9yOiBib3JkZXJSaWdodENvbG9yLFxuICAgIGJvcmRlclJpZ2h0V2lkdGg6IGJvcmRlclJpZ2h0V2lkdGgsXG4gICAgYm9yZGVyUmlnaHRTdHlsZTogYm9yZGVyUmlnaHRTdHlsZSxcbiAgICBib3JkZXJCb3R0b21Db2xvcjogYm9yZGVyQm90dG9tQ29sb3IsXG4gICAgYm9yZGVyQm90dG9tV2lkdGg6IGJvcmRlckJvdHRvbVdpZHRoLFxuICAgIGJvcmRlckJvdHRvbVN0eWxlOiBib3JkZXJCb3R0b21TdHlsZSxcbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiBib3JkZXJUb3BMZWZ0UmFkaXVzLFxuICAgIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiBib3JkZXJUb3BSaWdodFJhZGl1cyxcbiAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBib3JkZXJCb3R0b21MZWZ0UmFkaXVzLFxuICAgIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiBib3JkZXJCb3R0b21SaWdodFJhZGl1c1xuICB9O1xuICB2YXIgcnRyID0gTWF0aC5taW4oYm9yZGVyVG9wUmlnaHRSYWRpdXMsIDAuNSAqIHdpZHRoLCAwLjUgKiBoZWlnaHQpO1xuICB2YXIgcnRsID0gTWF0aC5taW4oYm9yZGVyVG9wTGVmdFJhZGl1cywgMC41ICogd2lkdGgsIDAuNSAqIGhlaWdodCk7XG4gIHZhciByYnIgPSBNYXRoLm1pbihib3JkZXJCb3R0b21SaWdodFJhZGl1cywgMC41ICogd2lkdGgsIDAuNSAqIGhlaWdodCk7XG4gIHZhciByYmwgPSBNYXRoLm1pbihib3JkZXJCb3R0b21MZWZ0UmFkaXVzLCAwLjUgKiB3aWR0aCwgMC41ICogaGVpZ2h0KTtcbiAgY3R4LnNhdmUoKTtcbiAgY3R4LnN0cm9rZU9wYWNpdHkob3BhY2l0eSk7XG4gIGlmIChib3JkZXJUb3BXaWR0aCkge1xuICAgIGN0eC5zYXZlKCk7XG4gICAgY2xpcEJvcmRlclRvcChjdHgsIG5vZGUuYm94LCBzdHlsZSwgcnRyLCBydGwpO1xuICAgIGZpbGxCb3JkZXJUb3AoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJ0ciwgcnRsKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG4gIGlmIChib3JkZXJSaWdodFdpZHRoKSB7XG4gICAgY3R4LnNhdmUoKTtcbiAgICBjbGlwQm9yZGVyUmlnaHQoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJ0ciwgcmJyKTtcbiAgICBmaWxsQm9yZGVyUmlnaHQoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJ0ciwgcmJyKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG4gIGlmIChib3JkZXJCb3R0b21XaWR0aCkge1xuICAgIGN0eC5zYXZlKCk7XG4gICAgY2xpcEJvcmRlckJvdHRvbShjdHgsIG5vZGUuYm94LCBzdHlsZSwgcmJsLCByYnIpO1xuICAgIGZpbGxCb3JkZXJCb3R0b20oY3R4LCBub2RlLmJveCwgc3R5bGUsIHJibCwgcmJyKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG4gIGlmIChib3JkZXJMZWZ0V2lkdGgpIHtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGNsaXBCb3JkZXJMZWZ0KGN0eCwgbm9kZS5ib3gsIHN0eWxlLCByYmwsIHJ0bCk7XG4gICAgZmlsbEJvcmRlckxlZnQoY3R4LCBub2RlLmJveCwgc3R5bGUsIHJibCwgcnRsKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG4gIGN0eC5yZXN0b3JlKCk7XG59O1xuXG52YXIgZHJhd0JhY2tncm91bmQgPSBmdW5jdGlvbiBkcmF3QmFja2dyb3VuZChjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHN0eWxlO1xuICB2YXIgX25vZGUkYm94ID0gbm9kZS5ib3gsXG4gICAgdG9wID0gX25vZGUkYm94LnRvcCxcbiAgICBsZWZ0ID0gX25vZGUkYm94LmxlZnQsXG4gICAgd2lkdGggPSBfbm9kZSRib3gud2lkdGgsXG4gICAgaGVpZ2h0ID0gX25vZGUkYm94LmhlaWdodDtcbiAgdmFyIGNvbG9yID0gcGFyc2VDb2xvcihub2RlLnN0eWxlLmJhY2tncm91bmRDb2xvcik7XG4gIHZhciBub2RlT3BhY2l0eSA9IGlzTmlsKChfbm9kZSRzdHlsZSA9IG5vZGUuc3R5bGUpID09PSBudWxsIHx8IF9ub2RlJHN0eWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRzdHlsZS5vcGFjaXR5KSA/IDEgOiBub2RlLnN0eWxlLm9wYWNpdHk7XG4gIHZhciBvcGFjaXR5ID0gTWF0aC5taW4oY29sb3Iub3BhY2l0eSwgbm9kZU9wYWNpdHkpO1xuICBjdHguZmlsbE9wYWNpdHkob3BhY2l0eSkuZmlsbENvbG9yKGNvbG9yLnZhbHVlKS5yZWN0KGxlZnQsIHRvcCwgd2lkdGgsIGhlaWdodCkuZmlsbCgpO1xufTtcbnZhciByZW5kZXJCYWNrZ3JvdW5kID0gZnVuY3Rpb24gcmVuZGVyQmFja2dyb3VuZChjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHN0eWxlMjtcbiAgdmFyIGhhc0JhY2tncm91bmQgPSAhIW5vZGUuYm94ICYmICEhKChfbm9kZSRzdHlsZTIgPSBub2RlLnN0eWxlKSAhPT0gbnVsbCAmJiBfbm9kZSRzdHlsZTIgIT09IHZvaWQgMCAmJiBfbm9kZSRzdHlsZTIuYmFja2dyb3VuZENvbG9yKTtcbiAgaWYgKGhhc0JhY2tncm91bmQpIHtcbiAgICBjdHguc2F2ZSgpO1xuICAgIGNsaXBOb2RlKGN0eCwgbm9kZSk7XG4gICAgZHJhd0JhY2tncm91bmQoY3R4LCBub2RlKTtcbiAgICBjdHgucmVzdG9yZSgpO1xuICB9XG59O1xuXG52YXIgaXNTcmNJZCA9IGZ1bmN0aW9uIGlzU3JjSWQodmFsdWUpIHtcbiAgcmV0dXJuIC9eIy4rLy50ZXN0KHZhbHVlKTtcbn07XG52YXIgc2V0TGluayA9IGZ1bmN0aW9uIHNldExpbmsoY3R4LCBub2RlKSB7XG4gIHZhciBwcm9wcyA9IG5vZGUucHJvcHMgfHwge307XG4gIHZhciBfbm9kZSRib3ggPSBub2RlLmJveCxcbiAgICB0b3AgPSBfbm9kZSRib3gudG9wLFxuICAgIGxlZnQgPSBfbm9kZSRib3gubGVmdCxcbiAgICB3aWR0aCA9IF9ub2RlJGJveC53aWR0aCxcbiAgICBoZWlnaHQgPSBfbm9kZSRib3guaGVpZ2h0O1xuICB2YXIgc3JjID0gcHJvcHMuc3JjIHx8IHByb3BzLmhyZWY7XG4gIGlmIChzcmMpIHtcbiAgICB2YXIgaXNJZCA9IGlzU3JjSWQoc3JjKTtcbiAgICB2YXIgbWV0aG9kID0gaXNJZCA/ICdnb1RvJyA6ICdsaW5rJztcbiAgICB2YXIgdmFsdWUgPSBpc0lkID8gc3JjLnNsaWNlKDEpIDogc3JjO1xuICAgIGN0eFttZXRob2RdKGxlZnQsIHRvcCwgd2lkdGgsIGhlaWdodCwgdmFsdWUpO1xuICB9XG59O1xuXG52YXIgc2V0RGVzdGluYXRpb24gPSBmdW5jdGlvbiBzZXREZXN0aW5hdGlvbihjdHgsIG5vZGUpIHtcbiAgdmFyIF9ub2RlJHByb3BzO1xuICBpZiAoKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgIT09IG51bGwgJiYgX25vZGUkcHJvcHMgIT09IHZvaWQgMCAmJiBfbm9kZSRwcm9wcy5pZCkge1xuICAgIGN0eC5hZGROYW1lZERlc3RpbmF0aW9uKG5vZGUucHJvcHMuaWQsICdYWVonLCBudWxsLCBub2RlLmJveC50b3AsIG51bGwpO1xuICB9XG59O1xuXG52YXIgX3JlbmRlckZucztcbnZhciBpc1JlY3Vyc2l2ZU5vZGUgPSBmdW5jdGlvbiBpc1JlY3Vyc2l2ZU5vZGUobm9kZSkge1xuICByZXR1cm4gbm9kZS50eXBlICE9PSBQLlRleHQgJiYgbm9kZS50eXBlICE9PSBQLlN2Zztcbn07XG52YXIgcmVuZGVyQ2hpbGRyZW4gPSBmdW5jdGlvbiByZW5kZXJDaGlsZHJlbihjdHgsIG5vZGUsIG9wdGlvbnMpIHtcbiAgY3R4LnNhdmUoKTtcbiAgaWYgKG5vZGUuYm94KSB7XG4gICAgY3R4LnRyYW5zbGF0ZShub2RlLmJveC5sZWZ0LCBub2RlLmJveC50b3ApO1xuICB9XG4gIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4gfHwgW107XG4gIHZhciByZW5kZXJDaGlsZCA9IGZ1bmN0aW9uIHJlbmRlckNoaWxkKGNoaWxkKSB7XG4gICAgcmV0dXJuIHJlbmRlck5vZGUoY3R4LCBjaGlsZCwgb3B0aW9ucyk7XG4gIH07XG4gIGNoaWxkcmVuLmZvckVhY2gocmVuZGVyQ2hpbGQpO1xuICBjdHgucmVzdG9yZSgpO1xufTtcbnZhciByZW5kZXJGbnMgPSAoX3JlbmRlckZucyA9IHt9LCBfcmVuZGVyRm5zW1AuVGV4dF0gPSByZW5kZXJUZXh0LCBfcmVuZGVyRm5zW1AuTm90ZV0gPSByZW5kZXJOb3RlLCBfcmVuZGVyRm5zW1AuSW1hZ2VdID0gcmVuZGVySW1hZ2UsIF9yZW5kZXJGbnNbUC5DYW52YXNdID0gcmVuZGVyQ2FudmFzLCBfcmVuZGVyRm5zW1AuU3ZnXSA9IHJlbmRlclN2ZywgX3JlbmRlckZuc1tQLkxpbmtdID0gc2V0TGluaywgX3JlbmRlckZucyk7XG52YXIgcmVuZGVyTm9kZSA9IGZ1bmN0aW9uIHJlbmRlck5vZGUoY3R4LCBub2RlLCBvcHRpb25zKSB7XG4gIHZhciBfbm9kZSRzdHlsZTtcbiAgdmFyIG92ZXJmbG93SGlkZGVuID0gKChfbm9kZSRzdHlsZSA9IG5vZGUuc3R5bGUpID09PSBudWxsIHx8IF9ub2RlJHN0eWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbm9kZSRzdHlsZS5vdmVyZmxvdykgPT09ICdoaWRkZW4nO1xuICB2YXIgc2hvdWxkUmVuZGVyQ2hpbGRyZW4gPSBpc1JlY3Vyc2l2ZU5vZGUobm9kZSk7XG4gIGlmIChub2RlLnR5cGUgPT09IFAuUGFnZSkgcmVuZGVyUGFnZShjdHgsIG5vZGUpO1xuICBjdHguc2F2ZSgpO1xuICBpZiAob3ZlcmZsb3dIaWRkZW4pIGNsaXBOb2RlKGN0eCwgbm9kZSk7XG4gIGFwcGx5VHJhbnNmb3JtYXRpb25zKGN0eCwgbm9kZSk7XG4gIHJlbmRlckJhY2tncm91bmQoY3R4LCBub2RlKTtcbiAgcmVuZGVyQm9yZGVycyhjdHgsIG5vZGUpO1xuICB2YXIgcmVuZGVyRm4gPSByZW5kZXJGbnNbbm9kZS50eXBlXTtcbiAgaWYgKHJlbmRlckZuKSByZW5kZXJGbihjdHgsIG5vZGUsIG9wdGlvbnMpO1xuICBpZiAoc2hvdWxkUmVuZGVyQ2hpbGRyZW4pIHJlbmRlckNoaWxkcmVuKGN0eCwgbm9kZSwgb3B0aW9ucyk7XG4gIHNldERlc3RpbmF0aW9uKGN0eCwgbm9kZSk7XG4gIHJlbmRlckRlYnVnKGN0eCwgbm9kZSk7XG4gIGN0eC5yZXN0b3JlKCk7XG59O1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuXG52YXIgc2V0UERGTWV0YWRhdGEgPSBmdW5jdGlvbiBzZXRQREZNZXRhZGF0YSh0YXJnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlKSB0YXJnZXQuaW5mb1trZXldID0gdmFsdWU7XG4gIH07XG59O1xuXG4vKipcbiAqIFNldCBkb2N1bWVudCBpbnN0YW5jZSBtZXRhZGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjdHggZG9jdW1lbnQgaW5zdGFuY2VcbiAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgZG9jdW1lbnQgcm9vdFxuICovXG52YXIgYWRkTWV0YWRhdGEgPSBmdW5jdGlvbiBhZGRNZXRhZGF0YShjdHgsIGRvYykge1xuICB2YXIgX3Byb3BzJGNyZWF0b3IsIF9wcm9wcyRwcm9kdWNlcjtcbiAgdmFyIHNldFByb3AgPSBzZXRQREZNZXRhZGF0YShjdHgpO1xuICB2YXIgcHJvcHMgPSBkb2MucHJvcHMgfHwge307XG4gIHZhciB0aXRsZSA9IHByb3BzLnRpdGxlIHx8IG51bGw7XG4gIHZhciBhdXRob3IgPSBwcm9wcy5hdXRob3IgfHwgbnVsbDtcbiAgdmFyIHN1YmplY3QgPSBwcm9wcy5zdWJqZWN0IHx8IG51bGw7XG4gIHZhciBrZXl3b3JkcyA9IHByb3BzLmtleXdvcmRzIHx8IG51bGw7XG4gIHZhciBjcmVhdG9yID0gKF9wcm9wcyRjcmVhdG9yID0gcHJvcHMuY3JlYXRvcikgIT0gbnVsbCA/IF9wcm9wcyRjcmVhdG9yIDogJ3JlYWN0LXBkZic7XG4gIHZhciBwcm9kdWNlciA9IChfcHJvcHMkcHJvZHVjZXIgPSBwcm9wcy5wcm9kdWNlcikgIT0gbnVsbCA/IF9wcm9wcyRwcm9kdWNlciA6ICdyZWFjdC1wZGYnO1xuICB2YXIgY3JlYXRpb25EYXRlID0gcHJvcHMuY3JlYXRpb25EYXRlIHx8IG5ldyBEYXRlKCk7XG4gIHZhciBtb2RpZmljYXRpb25EYXRlID0gcHJvcHMubW9kaWZpY2F0aW9uRGF0ZSB8fCBudWxsO1xuICBzZXRQcm9wKCdUaXRsZScsIHRpdGxlKTtcbiAgc2V0UHJvcCgnQXV0aG9yJywgYXV0aG9yKTtcbiAgc2V0UHJvcCgnU3ViamVjdCcsIHN1YmplY3QpO1xuICBzZXRQcm9wKCdLZXl3b3JkcycsIGtleXdvcmRzKTtcbiAgc2V0UHJvcCgnQ3JlYXRvcicsIGNyZWF0b3IpO1xuICBzZXRQcm9wKCdQcm9kdWNlcicsIHByb2R1Y2VyKTtcbiAgc2V0UHJvcCgnQ3JlYXRpb25EYXRlJywgY3JlYXRpb25EYXRlKTtcbiAgc2V0UHJvcCgnTW9kaWZpY2F0aW9uRGF0ZScsIG1vZGlmaWNhdGlvbkRhdGUpO1xufTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cblxudmFyIGFkZE5vZGVCb29rbWFyayA9IGZ1bmN0aW9uIGFkZE5vZGVCb29rbWFyayhjdHgsIG5vZGUsIHBhZ2VOdW1iZXIsIHJlZ2lzdHJ5KSB7XG4gIHZhciBfbm9kZSRwcm9wcztcbiAgdmFyIGJvb2ttYXJrID0gKF9ub2RlJHByb3BzID0gbm9kZS5wcm9wcykgPT09IG51bGwgfHwgX25vZGUkcHJvcHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHByb3BzLmJvb2ttYXJrO1xuICBpZiAoYm9va21hcmspIHtcbiAgICB2YXIgdGl0bGUgPSBib29rbWFyay50aXRsZSxcbiAgICAgIHBhcmVudCA9IGJvb2ttYXJrLnBhcmVudCxcbiAgICAgIGV4cGFuZGVkID0gYm9va21hcmsuZXhwYW5kZWQsXG4gICAgICB6b29tID0gYm9va21hcmsuem9vbSxcbiAgICAgIGZpdCA9IGJvb2ttYXJrLmZpdDtcbiAgICB2YXIgb3V0bGluZSA9IHJlZ2lzdHJ5W3BhcmVudF0gfHwgY3R4Lm91dGxpbmU7XG4gICAgdmFyIHRvcCA9IGJvb2ttYXJrLnRvcCB8fCBub2RlLmJveC50b3A7XG4gICAgdmFyIGxlZnQgPSBib29rbWFyay5sZWZ0IHx8IG5vZGUuYm94LmxlZnQ7XG4gICAgdmFyIGluc3RhbmNlID0gb3V0bGluZS5hZGRJdGVtKHRpdGxlLCB7XG4gICAgICBwYWdlTnVtYmVyOiBwYWdlTnVtYmVyLFxuICAgICAgZXhwYW5kZWQ6IGV4cGFuZGVkLFxuICAgICAgdG9wOiB0b3AsXG4gICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgem9vbTogem9vbSxcbiAgICAgIGZpdDogZml0XG4gICAgfSk7XG4gICAgcmVnaXN0cnlbYm9va21hcmsucmVmXSA9IGluc3RhbmNlO1xuICB9XG4gIGlmICghbm9kZS5jaGlsZHJlbikgcmV0dXJuO1xuICBub2RlLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmV0dXJuIGFkZE5vZGVCb29rbWFyayhjdHgsIGNoaWxkLCBwYWdlTnVtYmVyLCByZWdpc3RyeSk7XG4gIH0pO1xufTtcbnZhciBhZGRCb29rbWFya3MgPSBmdW5jdGlvbiBhZGRCb29rbWFya3MoY3R4LCByb290KSB7XG4gIHZhciByZWdpc3RyeSA9IHt9O1xuICB2YXIgcGFnZXMgPSByb290LmNoaWxkcmVuIHx8IFtdO1xuICBwYWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChwYWdlLCBpKSB7XG4gICAgYWRkTm9kZUJvb2ttYXJrKGN0eCwgcGFnZSwgaSwgcmVnaXN0cnkpO1xuICB9KTtcbn07XG5cbnZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoY3R4LCBkb2MpIHtcbiAgdmFyIHBhZ2VzID0gZG9jLmNoaWxkcmVuIHx8IFtdO1xuICB2YXIgb3B0aW9ucyA9IHtcbiAgICBpbWFnZUNhY2hlOiBuZXcgTWFwKClcbiAgfTtcbiAgYWRkTWV0YWRhdGEoY3R4LCBkb2MpO1xuICBwYWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChwYWdlKSB7XG4gICAgcmV0dXJuIHJlbmRlck5vZGUoY3R4LCBwYWdlLCBvcHRpb25zKTtcbiAgfSk7XG4gIGFkZEJvb2ttYXJrcyhjdHgsIGRvYyk7XG4gIGN0eC5lbmQoKTtcbiAgcmV0dXJuIGN0eDtcbn07XG5cbmV4cG9ydCB7IHJlbmRlciBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiUCIsImlzTmlsIiwibWF0Y2hQZXJjZW50IiwiYWJzUGF0aCIsInBhcnNlUGF0aCIsIm5vcm1hbGl6ZVBhdGgiLCJjb2xvclN0cmluZyIsIl9leHRlbmRzIiwicmVuZGVyUGF0aCIsImN0eCIsIm5vZGUiLCJfbm9kZSRwcm9wcyIsImQiLCJwcm9wcyIsInBhdGgiLCJLQVBQQSQzIiwiTWF0aCIsInNxcnQiLCJyZW5kZXJSZWN0IiwiX25vZGUkcHJvcHMyIiwiX25vZGUkcHJvcHMzIiwiX25vZGUkcHJvcHM0IiwiX25vZGUkcHJvcHM1IiwiX25vZGUkcHJvcHM2IiwieCIsInkiLCJyeCIsInJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJrcngiLCJrcnkiLCJtb3ZlVG8iLCJsaW5lVG8iLCJiZXppZXJDdXJ2ZVRvIiwiY2xvc2VQYXRoIiwicmVuZGVyTGluZSQxIiwicmVuZGVyTGluZSIsIl9yZWYiLCJ4MSIsIngyIiwieTEiLCJ5MiIsInJlbmRlckdyb3VwIiwiS0FQUEEkMiIsImRyYXdFbGxpcHNlIiwiY3giLCJjeSIsIm94Iiwib3kiLCJ4ZSIsInllIiwieG0iLCJ5bSIsInJlbmRlckVsbGlwc2UiLCJyZW5kZXJDaXJjbGUiLCJyIiwicmVuZGVyR2x5cGhzIiwiZ2x5cGhzIiwicG9zaXRpb25zIiwib3B0aW9ucyIsInNjYWxlIiwiX2ZvbnRTaXplIiwidW5pdHNQZXJFbSIsIl9mb250IiwiZm9udCIsImFkdmFuY2VXaWR0aFNjYWxlIiwiZW5jb2RlZEdseXBocyIsImVuY29kZUdseXBocyIsImVuY29kZWRQb3NpdGlvbnMiLCJtYXAiLCJwb3MiLCJpIiwieEFkdmFuY2UiLCJ5QWR2YW5jZSIsInhPZmZzZXQiLCJ5T2Zmc2V0IiwiYWR2YW5jZVdpZHRoIiwiX2dseXBocyIsInJlbmRlclJ1biQxIiwicmVuZGVyUnVuIiwicnVuIiwicnVuQWR2YW5jZVdpZHRoIiwiX3J1biRhdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImZvbnRTaXplIiwiY29sb3IiLCJvcGFjaXR5IiwiZmlsbENvbG9yIiwiZmlsbE9wYWNpdHkiLCJzYml4IiwiQ09MUiIsIkNQQUwiLCJzYXZlIiwidHJhbnNsYXRlIiwiYXNjZW50IiwibGVuZ3RoIiwicG9zaXRpb24iLCJnbHlwaCIsInJlbmRlciIsInJlc3RvcmUiLCJuYW1lIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwicmVuZGVyU3BhbiIsImxpbmUiLCJ0ZXh0QW5jaG9yIiwiZG9taW5hbnRCYXNlbGluZSIsIl9saW5lJGJveCIsIl9saW5lJGJveDIiLCJfbGluZSRydW5zJCIsIl9saW5lJHJ1bnMkMiIsIl9saW5lJHJ1bnMkMiRhdHRyaWJ1dCIsImJveCIsInJ1bnMiLCJ4SGVpZ2h0IiwiZGVzY2VudCIsImNhcEhlaWdodCIsInhUcmFuc2xhdGUiLCJ5VHJhbnNsYXRlIiwiZm9yRWFjaCIsInJlbmRlclN2Z1RleHQiLCJjaGlsZHJlbiIsInNwYW4iLCJsaW5lcyIsInBhaXJzIiwidmFsdWVzIiwicmVzdWx0IiwicHVzaCIsInBhcnNlUG9pbnRzIiwicG9pbnRzIiwidHJpbSIsInJlcGxhY2UiLCJzcGxpdCIsInNsaWNlIiwibWFwcGVkVmFsdWVzIiwicGFyc2VGbG9hdCIsImRyYXdQb2x5bGluZSIsInAiLCJyZW5kZXJQb2x5bGluZSIsInJlbmRlclBvbHlnb24iLCJyZW5kZXJJbWFnZSQxIiwicmVuZGVySW1hZ2UiLCJpbWFnZSIsImRhdGEiLCJfbm9kZSRzdHlsZSIsInN0eWxlIiwicGFkZGluZ1RvcCIsInBhZGRpbmdMZWZ0Iiwid2FybiIsImhyZWYiLCJLQVBQQSQxIiwiY2xpcE5vZGUiLCJfbm9kZSRib3giLCJ0b3AiLCJsZWZ0IiwiX25vZGUkc3R5bGUkYm9yZGVyVG9wIiwiYm9yZGVyVG9wTGVmdFJhZGl1cyIsIl9ub2RlJHN0eWxlJGJvcmRlclRvcDIiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsIl9ub2RlJHN0eWxlJGJvcmRlckJvdCIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwiX25vZGUkc3R5bGUkYm9yZGVyQm90MiIsImJvcmRlckJvdHRvbUxlZnRSYWRpdXMiLCJydHIiLCJtaW4iLCJjdHIiLCJyYnIiLCJjYnIiLCJyYmwiLCJjYmwiLCJydGwiLCJjdGwiLCJjbGlwIiwiYXBwbHlTaW5nbGVUcmFuc2Zvcm1hdGlvbiIsInRyYW5zZm9ybSIsIm9yaWdpbiIsIm9wZXJhdGlvbiIsInZhbHVlIiwic2NhbGVYIiwic2NhbGVZIiwiYW5nbGUiLCJyb3RhdGUiLCJfdmFsdWUkIiwieEFuZ2xlIiwieUFuZ2xlIiwic2tldyIsImFwcGx5IiwiYXBwbHlUcmFuc2Zvcm1hdGlvbnMiLCJvcGVyYXRpb25zIiwiX2JvdW5kaW5nQm94Rm5zIiwiZ2V0UGF0aEJvdW5kaW5nQm94IiwiYm91bmRzIiwiSW5maW5pdHkiLCJsIiwiaiIsImdldENpcmNsZUJvdW5kaW5nQm94IiwiZ2V0RWxsaXBzZUJvdW5kaW5nQm94IiwiX25vZGUkcHJvcHM3IiwiX25vZGUkcHJvcHM4IiwiZ2V0TGluZUJvdW5kaW5nQm94IiwiX25vZGUkcHJvcHM5IiwiX25vZGUkcHJvcHMxMCIsIl9ub2RlJHByb3BzMTEiLCJfbm9kZSRwcm9wczEyIiwibWF4IiwiZ2V0UmVjdEJvdW5kaW5nQm94IiwiX25vZGUkcHJvcHMxMyIsIl9ub2RlJHByb3BzMTQiLCJfbm9kZSRwcm9wczE1IiwiX25vZGUkcHJvcHMxNiIsImNvbmNhdCIsImdldFBvbHlsaW5lQm91bmRpbmdCb3giLCJfbm9kZSRwcm9wczE3IiwieFZhbHVlcyIsInlWYWx1ZXMiLCJib3VuZGluZ0JveEZucyIsIlJlY3QiLCJMaW5lIiwiUGF0aCIsIkNpcmNsZSIsIkVsbGlwc2UiLCJQb2x5Z29uIiwiUG9seWxpbmUiLCJnZXRCb3VuZGluZ0JveCIsImJvdW5kaW5nQm94Rm4iLCJ0eXBlIiwiX3JlbmRlckZucyQxIiwic2V0U3Ryb2tlV2lkdGgiLCJsaW5lV2lkdGgiLCJzdHJva2VXaWR0aCIsInNldFN0cm9rZUNvbG9yIiwic3Ryb2tlQ29sb3IiLCJzdHJva2UiLCJzZXRPcGFjaXR5Iiwic2V0RmlsbE9wYWNpdHkiLCJzZXRTdHJva2VPcGFjaXR5Iiwic3Ryb2tlT3BhY2l0eSIsInNldExpbmVKb2luIiwibGluZUpvaW4iLCJzdHJva2VMaW5lam9pbiIsInNldExpbmVDYXAiLCJsaW5lQ2FwIiwic3Ryb2tlTGluZWNhcCIsInNldExpbmVEYXNoIiwic3Ryb2tlRGFzaGFycmF5IiwiZGFzaCIsIk51bWJlciIsImhhc0xpbmVhckdyYWRpZW50RmlsbCIsIl9ub2RlJHByb3BzOSRmaWxsIiwiZmlsbCIsIkxpbmVhckdyYWRpZW50IiwiaGFzUmFkaWFsR3JhZGllbnRGaWxsIiwiX25vZGUkcHJvcHMxMCRmaWxsIiwiUmFkaWFsR3JhZGllbnQiLCJzZXRMaW5lYXJHcmFkaWVudEZpbGwiLCJiYm94IiwiZ3JhZGllbnQiLCJtMCIsIm0zIiwibTQiLCJtNSIsImd4MSIsImd5MSIsImd4MiIsImd5MiIsImdyYWQiLCJsaW5lYXJHcmFkaWVudCIsInN0b3AiLCJvZmZzZXQiLCJzdG9wQ29sb3IiLCJzdG9wT3BhY2l0eSIsInNldFJhZGlhbEdyYWRpZW50RmlsbCIsImZ4IiwiZnkiLCJnciIsImdjeCIsImdjeSIsImdmeCIsImdmeSIsInJhZGlhbEdyYWRpZW50Iiwic2V0RmlsbENvbG9yIiwic2V0RmlsbCIsImRyYXciLCJmaWxsQW5kU3Ryb2tlIiwiZmlsbFJ1bGUiLCJub29wIiwicmVuZGVyRm5zJDEiLCJUc3BhbiIsIlRleHRJbnN0YW5jZSIsIkciLCJUZXh0IiwiSW1hZ2UiLCJyZW5kZXJOb2RlJDEiLCJyZW5kZXJOb2RlIiwicmVuZGVyRm4iLCJkcmF3Tm9kZSIsImNsaXBQYXRoIiwiY2hpbGQiLCJkcmF3Q2hpbGRyZW4iLCJyZXNvbHZlQXNwZWN0UmF0aW8iLCJ2aWV3Qm94IiwiX25vZGUkcHJvcHMxNSRwcmVzZXJ2IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsIl9wcmVzZXJ2ZUFzcGVjdFJhdGlvJCIsIm1lZXRPclNsaWNlIiwiX3ByZXNlcnZlQXNwZWN0UmF0aW8kMiIsImFsaWduIiwibWluWCIsIm1pblkiLCJsb2dpY2FsV2lkdGgiLCJtYXhYIiwibG9naWNhbEhlaWdodCIsIm1heFkiLCJsb2dpY2FsUmF0aW8iLCJwaHlzaWNhbFJhdGlvIiwibW92ZVRvT3JpZ2luIiwiX25vZGUkYm94MiIsInJlbmRlclN2ZyIsImJsYWNrIiwicGFyc2VDb2xvciIsImhleCIsInBhcnNlZCIsImdldCIsInRvIiwiREVTVF9SRUdFWFAiLCJpc1NyY0lkJDEiLCJpc1NyY0lkIiwic3JjIiwibWF0Y2giLCJyZW5kZXJBdHRhY2htZW50IiwiYXR0YWNobWVudCIsIl9hdHRhY2htZW50JHhPZmZzZXQiLCJfYXR0YWNobWVudCR5T2Zmc2V0IiwiZml0IiwidmFsaWduIiwicmVuZGVyQXR0YWNobWVudHMiLCJzcGFjZSIsImdseXBoRm9yQ29kZVBvaW50Iiwib2JqZWN0UmVwbGFjZW1lbnQiLCJhdHRhY2htZW50QWR2YW5jZSIsImlkIiwibGluayIsIm91dGxpbmVSdW5zIiwicmVjdCIsImdvVG8iLCJyZW5kZXJCYWNrZ3JvdW5kJDEiLCJyZW5kZXJCYWNrZ3JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwicmVuZGVyRGVjb3JhdGlvbkxpbmUiLCJ0ZXN0IiwiZGlzdCIsInN0ZXAiLCJzdGVwQ291bnQiLCJmbG9vciIsInJlbWFpbmluZ1dpZHRoIiwiYWRqdXN0bWVudCIsImNwMXkiLCJjcDJ5IiwibGluZUFzY2VudCIsIm91dGxpbmVMaW5lcyIsImlzTGFzdFJ1biIsIm92ZXJmbG93UmlnaHQiLCJiYWNrZ3JvdW5kUmVjdCIsIl9pIiwiZGVjb3JhdGlvbkxpbmVzIiwiZGVjb3JhdGlvbkxpbmUiLCJyZW5kZXJCbG9jayIsImJsb2NrIiwicmVuZGVyVGV4dCIsIl9ub2RlJGJveDMiLCJibG9ja3MiLCJpbml0aWFsWSIsIm9mZnNldFgiLCJhbGlnbk9mZnNldCIsInJlbmRlclBhZ2UiLCJkcGkiLCJ1c2VyVW5pdCIsImFkZFBhZ2UiLCJzaXplIiwibWFyZ2luIiwicmVuZGVyTm90ZSIsIl9ub2RlJGNoaWxkcmVuIiwiX25vZGUkc3R5bGUyIiwiYm9yZGVyV2lkdGgiLCJub3RlIiwiaXNOdW1lcmljIiwibiIsImlzTmFOIiwiaXNGaW5pdGUiLCJhcHBseUNvbnRhaW5PYmplY3RGaXQiLCJjdyIsImNoIiwiaXciLCJpaCIsInB4IiwicHkiLCJjciIsImlyIiwicHhwIiwicHlwIiwicHh2IiwicGVyY2VudCIsInB5diIsIl9oZWlnaHQiLCJfd2lkdGgiLCJfeU9mZnNldCIsIl94T2Zmc2V0IiwiYXBwbHlOb25lT2JqZWN0Rml0IiwiYXBwbHlDb3Zlck9iamVjdEZpdCIsIl93aWR0aDIiLCJfaGVpZ2h0MiIsIl94T2Zmc2V0MiIsIl95T2Zmc2V0MiIsImFwcGx5U2NhbGVEb3duT2JqZWN0Rml0IiwiY29udGFpbkRpbWVuc2lvbiIsIm5vbmVEaW1lbnNpb24iLCJhcHBseUZpbGxPYmplY3RGaXQiLCJyZXNvbHZlT2JqZWN0Rml0IiwiZHJhd0ltYWdlIiwiX25vZGUkc3R5bGUzIiwiX25vZGUkc3R5bGU0Iiwib2JqZWN0Rml0Iiwib2JqZWN0UG9zaXRpb25YIiwib2JqZWN0UG9zaXRpb25ZIiwicGFkZGluZ1JpZ2h0IiwicGFkZGluZ0JvdHRvbSIsImltYWdlQ2FjaGUiLCJNYXAiLCJfcmVzb2x2ZU9iamVjdEZpdCIsImNhY2hlS2V5Iiwia2V5IiwiZW1iZWRJbWFnZSIsInNldCIsImltYWdlT3BhY2l0eSIsIkpTT04iLCJzdHJpbmdpZnkiLCJDT05URU5UX0NPTE9SIiwiUEFERElOR19DT0xPUiIsIk1BUkdJTl9DT0xPUiIsImRlYnVnQ29udGVudCIsIl9ub2RlJGJveCRwYWRkaW5nTGVmdCIsIl9ub2RlJGJveCRwYWRkaW5nVG9wIiwiX25vZGUkYm94JHBhZGRpbmdSaWdoIiwiX25vZGUkYm94JHBhZGRpbmdCb3R0IiwiX25vZGUkYm94JGJvcmRlckxlZnRXIiwiYm9yZGVyTGVmdFdpZHRoIiwiX25vZGUkYm94JGJvcmRlclRvcFdpIiwiYm9yZGVyVG9wV2lkdGgiLCJfbm9kZSRib3gkYm9yZGVyUmlnaHQiLCJib3JkZXJSaWdodFdpZHRoIiwiX25vZGUkYm94JGJvcmRlckJvdHRvIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJkZWJ1Z1BhZGRpbmciLCJfbm9kZSRib3gyJHBhZGRpbmdMZWYiLCJfbm9kZSRib3gyJHBhZGRpbmdUb3AiLCJfbm9kZSRib3gyJHBhZGRpbmdSaWciLCJfbm9kZSRib3gyJHBhZGRpbmdCb3QiLCJfbm9kZSRib3gyJGJvcmRlckxlZnQiLCJfbm9kZSRib3gyJGJvcmRlclRvcFciLCJfbm9kZSRib3gyJGJvcmRlclJpZ2giLCJfbm9kZSRib3gyJGJvcmRlckJvdHQiLCJnZXRNYXJnaW4iLCJtYXJnaW5MZWZ0IiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJkZWJ1Z01hcmdpbiIsIl9nZXRNYXJnaW4iLCJfZ2V0TWFyZ2luJG1hcmdpbkxlZnQiLCJfZ2V0TWFyZ2luJG1hcmdpblRvcCIsIl9nZXRNYXJnaW4kbWFyZ2luUmlnaCIsIl9nZXRNYXJnaW4kbWFyZ2luQm90dCIsImRlYnVnVGV4dCIsIl9ub2RlJGJveDQiLCJfZ2V0TWFyZ2luMiIsIl9nZXRNYXJnaW4yJG1hcmdpbkxlZiIsIl9nZXRNYXJnaW4yJG1hcmdpblRvcCIsIl9nZXRNYXJnaW4yJG1hcmdpblJpZyIsIl9nZXRNYXJnaW4yJG1hcmdpbkJvdCIsInJvdW5kZWRXaWR0aCIsInJvdW5kIiwicm91bmRlZEhlaWdodCIsInRleHQiLCJkZWJ1Z09yaWdpbiIsImNpcmNsZSIsInJlbmRlckRlYnVnIiwiZGVidWciLCJhdmFpbGFibGVNZXRob2RzIiwicGFpbnRlciIsInJlZHVjZSIsImFjYyIsInByb3AiLCJfZXh0ZW5kczIiLCJhcmd1bWVudHMiLCJyZW5kZXJDYW52YXMiLCJhdmFpbGFibGVXaWR0aCIsImF2YWlsYWJsZUhlaWdodCIsInBhaW50IiwiS0FQUEEiLCJjbGlwQm9yZGVyVG9wIiwibGF5b3V0IiwiYzAiLCJ0b3BSaWdodFlDb29yZCIsImlubmVyVG9wUmlnaHRSYWRpdXNYIiwiaW5uZXJUb3BSaWdodFJhZGl1c1kiLCJjMSIsImMyIiwiaW5uZXJUb3BMZWZ0UmFkaXVzWCIsImlubmVyVG9wTGVmdFJhZGl1c1kiLCJjMyIsImM0IiwidG9wTGVmdFlDb29yZCIsImM1IiwidHJTbG9wZSIsIl90clNsb3BlIiwiZmlsbEJvcmRlclRvcCIsImJvcmRlclRvcENvbG9yIiwiYm9yZGVyVG9wU3R5bGUiLCJ1bmRhc2giLCJjbGlwQm9yZGVyUmlnaHQiLCJ0b3BCb3R0b21YQ29vcmQiLCJpbm5lckJvdHRvbVJpZ2h0UmFkaXVzWCIsImlubmVyQm90dG9tUmlnaHRSYWRpdXNZIiwidG9wUmlnaHRYQ29vcmQiLCJiclNsb3BlIiwiZmlsbEJvcmRlclJpZ2h0IiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlclJpZ2h0U3R5bGUiLCJjbGlwQm9yZGVyQm90dG9tIiwiYm90dG9tTGVmdFlDb29yZCIsImlubmVyQm90dG9tTGVmdFJhZGl1c1giLCJpbm5lckJvdHRvbUxlZnRSYWRpdXNZIiwiYm90dG9tUmlnaHRZQ29vcmQiLCJmaWxsQm9yZGVyQm90dG9tIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJib3JkZXJCb3R0b21TdHlsZSIsImNsaXBCb3JkZXJMZWZ0IiwidG9wTGVmdENvb3JkWCIsImJvdHRvbUxlZnRYQ29vcmQiLCJfdHJTbG9wZTIiLCJmaWxsQm9yZGVyTGVmdCIsImJvcmRlckxlZnRDb2xvciIsImJvcmRlckxlZnRTdHlsZSIsInNob3VsZFJlbmRlckJvcmRlcnMiLCJyZW5kZXJCb3JkZXJzIiwiX25vZGUkc3R5bGUkYm9yZGVyVG9wMyIsIl9ub2RlJHN0eWxlJGJvcmRlclRvcDQiLCJfbm9kZSRzdHlsZSRib3JkZXJMZWYiLCJfbm9kZSRzdHlsZSRib3JkZXJMZWYyIiwiX25vZGUkc3R5bGUkYm9yZGVyUmlnIiwiX25vZGUkc3R5bGUkYm9yZGVyUmlnMiIsIl9ub2RlJHN0eWxlJGJvcmRlckJvdDMiLCJfbm9kZSRzdHlsZSRib3JkZXJCb3Q0IiwiZHJhd0JhY2tncm91bmQiLCJub2RlT3BhY2l0eSIsImhhc0JhY2tncm91bmQiLCJzZXRMaW5rIiwiaXNJZCIsIm1ldGhvZCIsInNldERlc3RpbmF0aW9uIiwiYWRkTmFtZWREZXN0aW5hdGlvbiIsIl9yZW5kZXJGbnMiLCJpc1JlY3Vyc2l2ZU5vZGUiLCJTdmciLCJyZW5kZXJDaGlsZHJlbiIsInJlbmRlckNoaWxkIiwicmVuZGVyRm5zIiwiTm90ZSIsIkNhbnZhcyIsIkxpbmsiLCJvdmVyZmxvd0hpZGRlbiIsIm92ZXJmbG93Iiwic2hvdWxkUmVuZGVyQ2hpbGRyZW4iLCJQYWdlIiwic2V0UERGTWV0YWRhdGEiLCJ0YXJnZXQiLCJpbmZvIiwiYWRkTWV0YWRhdGEiLCJkb2MiLCJfcHJvcHMkY3JlYXRvciIsIl9wcm9wcyRwcm9kdWNlciIsInNldFByb3AiLCJ0aXRsZSIsImF1dGhvciIsInN1YmplY3QiLCJrZXl3b3JkcyIsImNyZWF0b3IiLCJwcm9kdWNlciIsImNyZWF0aW9uRGF0ZSIsIkRhdGUiLCJtb2RpZmljYXRpb25EYXRlIiwiYWRkTm9kZUJvb2ttYXJrIiwicGFnZU51bWJlciIsInJlZ2lzdHJ5IiwiYm9va21hcmsiLCJwYXJlbnQiLCJleHBhbmRlZCIsInpvb20iLCJvdXRsaW5lIiwiaW5zdGFuY2UiLCJhZGRJdGVtIiwicmVmIiwiYWRkQm9va21hcmtzIiwicm9vdCIsInBhZ2VzIiwicGFnZSIsImVuZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/render/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/renderer/lib/react-pdf.js":
/*!***********************************************************!*\
  !*** ./node_modules/@react-pdf/renderer/lib/react-pdf.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var scheduler__WEBPACK_IMPORTED_MODULE_13___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlobProvider: () => (/* binding */ BlobProvider),\n/* harmony export */   Canvas: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Canvas),\n/* harmony export */   Circle: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Circle),\n/* harmony export */   ClipPath: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.ClipPath),\n/* harmony export */   Defs: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Defs),\n/* harmony export */   Document: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Document),\n/* harmony export */   Ellipse: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Ellipse),\n/* harmony export */   Font: () => (/* binding */ Font),\n/* harmony export */   G: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.G),\n/* harmony export */   Image: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Image),\n/* harmony export */   Line: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Line),\n/* harmony export */   LinearGradient: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.LinearGradient),\n/* harmony export */   Link: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Link),\n/* harmony export */   Note: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Note),\n/* harmony export */   PDFDownloadLink: () => (/* binding */ PDFDownloadLink),\n/* harmony export */   PDFViewer: () => (/* binding */ PDFViewer),\n/* harmony export */   Page: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Page),\n/* harmony export */   Path: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Path),\n/* harmony export */   Polygon: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Polygon),\n/* harmony export */   Polyline: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Polyline),\n/* harmony export */   RadialGradient: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.RadialGradient),\n/* harmony export */   Rect: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Rect),\n/* harmony export */   Stop: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Stop),\n/* harmony export */   StyleSheet: () => (/* binding */ StyleSheet),\n/* harmony export */   Svg: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Svg),\n/* harmony export */   Text: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Text),\n/* harmony export */   TextInstance: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.TextInstance),\n/* harmony export */   Tspan: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.Tspan),\n/* harmony export */   View: () => (/* reexport safe */ _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__.View),\n/* harmony export */   createRenderer: () => (/* binding */ createRenderer),\n/* harmony export */   \"default\": () => (/* binding */ index),\n/* harmony export */   pdf: () => (/* binding */ pdf),\n/* harmony export */   render: () => (/* binding */ render),\n/* harmony export */   renderToBuffer: () => (/* binding */ renderToBuffer),\n/* harmony export */   renderToFile: () => (/* binding */ renderToFile),\n/* harmony export */   renderToStream: () => (/* binding */ renderToStream),\n/* harmony export */   renderToString: () => (/* binding */ renderToString),\n/* harmony export */   usePDF: () => (/* binding */ usePDF),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf/primitives */ \"(ssr)/./node_modules/@react-pdf/primitives/src/index.js\");\n/* harmony import */ var _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ \"(ssr)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var _react_pdf_font__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-pdf/font */ \"(ssr)/./node_modules/@react-pdf/font/lib/index.js\");\n/* harmony import */ var _react_pdf_render__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @react-pdf/render */ \"(ssr)/./node_modules/@react-pdf/render/lib/index.js\");\n/* harmony import */ var _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @react-pdf/pdfkit */ \"(ssr)/./node_modules/@react-pdf/pdfkit/lib/pdfkit.js\");\n/* harmony import */ var _react_pdf_layout__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @react-pdf/layout */ \"(ssr)/./node_modules/@react-pdf/layout/lib/index.js\");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! object-assign */ \"(ssr)/./node_modules/object-assign/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/scheduler/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getAugmentedNamespace(n) {\n    if (n.__esModule) return n;\n    var a = Object.defineProperty({}, \"__esModule\", {\n        value: true\n    });\n    Object.keys(n).forEach(function(k) {\n        var d = Object.getOwnPropertyDescriptor(n, k);\n        Object.defineProperty(a, k, d.get ? d : {\n            enumerable: true,\n            get: function() {\n                return n[k];\n            }\n        });\n    });\n    return a;\n}\nvar reactReconciler_production_min = {\n    exports: {}\n};\nvar require$$2 = /*@__PURE__*/ getAugmentedNamespace(/*#__PURE__*/ (scheduler__WEBPACK_IMPORTED_MODULE_13___namespace_cache || (scheduler__WEBPACK_IMPORTED_MODULE_13___namespace_cache = __webpack_require__.t(scheduler__WEBPACK_IMPORTED_MODULE_13__, 2))));\n/** @license React v0.23.0\n * react-reconciler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ (function(module) {\n    module.exports = function $$$reconciler($$$hostConfig) {\n        var aa = object_assign__WEBPACK_IMPORTED_MODULE_11__, ba = react__WEBPACK_IMPORTED_MODULE_12__, m = require$$2;\n        function n(a) {\n            for(var b = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 1; c < arguments.length; c++)b += \"&args[]=\" + encodeURIComponent(arguments[c]);\n            return \"Minified React error #\" + a + \"; visit \" + b + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\";\n        }\n        var q = ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        q.hasOwnProperty(\"ReactCurrentDispatcher\") || (q.ReactCurrentDispatcher = {\n            current: null\n        });\n        q.hasOwnProperty(\"ReactCurrentBatchConfig\") || (q.ReactCurrentBatchConfig = {\n            suspense: null\n        });\n        var u = \"function\" === typeof Symbol && Symbol.for, ca = u ? Symbol.for(\"react.element\") : 60103, da = u ? Symbol.for(\"react.portal\") : 60106, ea = u ? Symbol.for(\"react.fragment\") : 60107, fa = u ? Symbol.for(\"react.strict_mode\") : 60108, ha = u ? Symbol.for(\"react.profiler\") : 60114, ia = u ? Symbol.for(\"react.provider\") : 60109, ja = u ? Symbol.for(\"react.context\") : 60110, ka = u ? Symbol.for(\"react.concurrent_mode\") : 60111, la = u ? Symbol.for(\"react.forward_ref\") : 60112, ma = u ? Symbol.for(\"react.suspense\") : 60113, na = u ? Symbol.for(\"react.suspense_list\") : 60120, oa = u ? Symbol.for(\"react.memo\") : 60115, pa = u ? Symbol.for(\"react.lazy\") : 60116;\n        var qa = \"function\" === typeof Symbol && Symbol.iterator;\n        function ra(a) {\n            if (null === a || \"object\" !== typeof a) return null;\n            a = qa && a[qa] || a[\"@@iterator\"];\n            return \"function\" === typeof a ? a : null;\n        }\n        function sa(a) {\n            if (-1 === a._status) {\n                a._status = 0;\n                var b = a._ctor;\n                b = b();\n                a._result = b;\n                b.then(function(b) {\n                    0 === a._status && (b = b.default, a._status = 1, a._result = b);\n                }, function(b) {\n                    0 === a._status && (a._status = 2, a._result = b);\n                });\n            }\n        }\n        function ta(a) {\n            if (null == a) return null;\n            if (\"function\" === typeof a) return a.displayName || a.name || null;\n            if (\"string\" === typeof a) return a;\n            switch(a){\n                case ea:\n                    return \"Fragment\";\n                case da:\n                    return \"Portal\";\n                case ha:\n                    return \"Profiler\";\n                case fa:\n                    return \"StrictMode\";\n                case ma:\n                    return \"Suspense\";\n                case na:\n                    return \"SuspenseList\";\n            }\n            if (\"object\" === typeof a) switch(a.$$typeof){\n                case ja:\n                    return \"Context.Consumer\";\n                case ia:\n                    return \"Context.Provider\";\n                case la:\n                    var b = a.render;\n                    b = b.displayName || b.name || \"\";\n                    return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n                case oa:\n                    return ta(a.type);\n                case pa:\n                    if (a = 1 === a._status ? a._result : null) return ta(a);\n            }\n            return null;\n        }\n        function ua(a) {\n            var b = a, c = a;\n            if (a.alternate) for(; b.return;)b = b.return;\n            else {\n                a = b;\n                do b = a, 0 !== (b.effectTag & 1026) && (c = b.return), a = b.return;\n                while (a);\n            }\n            return 3 === b.tag ? c : null;\n        }\n        function va(a) {\n            if (ua(a) !== a) throw Error(n(188));\n        }\n        function wa(a) {\n            var b = a.alternate;\n            if (!b) {\n                b = ua(a);\n                if (null === b) throw Error(n(188));\n                return b !== a ? null : a;\n            }\n            for(var c = a, d = b;;){\n                var e = c.return;\n                if (null === e) break;\n                var f = e.alternate;\n                if (null === f) {\n                    d = e.return;\n                    if (null !== d) {\n                        c = d;\n                        continue;\n                    }\n                    break;\n                }\n                if (e.child === f.child) {\n                    for(f = e.child; f;){\n                        if (f === c) return va(e), a;\n                        if (f === d) return va(e), b;\n                        f = f.sibling;\n                    }\n                    throw Error(n(188));\n                }\n                if (c.return !== d.return) c = e, d = f;\n                else {\n                    for(var g = !1, l = e.child; l;){\n                        if (l === c) {\n                            g = !0;\n                            c = e;\n                            d = f;\n                            break;\n                        }\n                        if (l === d) {\n                            g = !0;\n                            d = e;\n                            c = f;\n                            break;\n                        }\n                        l = l.sibling;\n                    }\n                    if (!g) {\n                        for(l = f.child; l;){\n                            if (l === c) {\n                                g = !0;\n                                c = f;\n                                d = e;\n                                break;\n                            }\n                            if (l === d) {\n                                g = !0;\n                                d = f;\n                                c = e;\n                                break;\n                            }\n                            l = l.sibling;\n                        }\n                        if (!g) throw Error(n(189));\n                    }\n                }\n                if (c.alternate !== d) throw Error(n(190));\n            }\n            if (3 !== c.tag) throw Error(n(188));\n            return c.stateNode.current === c ? a : b;\n        }\n        function xa(a) {\n            a = wa(a);\n            if (!a) return null;\n            for(var b = a;;){\n                if (5 === b.tag || 6 === b.tag) return b;\n                if (b.child) b.child.return = b, b = b.child;\n                else {\n                    if (b === a) break;\n                    for(; !b.sibling;){\n                        if (!b.return || b.return === a) return null;\n                        b = b.return;\n                    }\n                    b.sibling.return = b.return;\n                    b = b.sibling;\n                }\n            }\n            return null;\n        }\n        function ya(a) {\n            a = wa(a);\n            if (!a) return null;\n            for(var b = a;;){\n                if (5 === b.tag || 6 === b.tag) return b;\n                if (b.child && 4 !== b.tag) b.child.return = b, b = b.child;\n                else {\n                    if (b === a) break;\n                    for(; !b.sibling;){\n                        if (!b.return || b.return === a) return null;\n                        b = b.return;\n                    }\n                    b.sibling.return = b.return;\n                    b = b.sibling;\n                }\n            }\n            return null;\n        }\n        var za = $$$hostConfig.getPublicInstance, Aa = $$$hostConfig.getRootHostContext, Ba = $$$hostConfig.getChildHostContext, Ca = $$$hostConfig.prepareForCommit, Da = $$$hostConfig.resetAfterCommit, Ea = $$$hostConfig.createInstance, Fa = $$$hostConfig.appendInitialChild, Ga = $$$hostConfig.finalizeInitialChildren, Ia = $$$hostConfig.prepareUpdate, Ja = $$$hostConfig.shouldSetTextContent, Ka = $$$hostConfig.shouldDeprioritizeSubtree, La = $$$hostConfig.createTextInstance, Ma = $$$hostConfig.setTimeout, Na = $$$hostConfig.clearTimeout, Oa = $$$hostConfig.noTimeout, Pa = $$$hostConfig.isPrimaryRenderer, Qa = $$$hostConfig.supportsMutation, Ra = $$$hostConfig.supportsPersistence, Sa = $$$hostConfig.supportsHydration, Ta = $$$hostConfig.appendChild, Ua = $$$hostConfig.appendChildToContainer, Va = $$$hostConfig.commitTextUpdate, Wa = $$$hostConfig.commitMount, Xa = $$$hostConfig.commitUpdate, Ya = $$$hostConfig.insertBefore, Za = $$$hostConfig.insertInContainerBefore, $a = $$$hostConfig.removeChild, ab = $$$hostConfig.removeChildFromContainer, bb = $$$hostConfig.resetTextContent, cb = $$$hostConfig.hideInstance, db = $$$hostConfig.hideTextInstance, eb = $$$hostConfig.unhideInstance, fb = $$$hostConfig.unhideTextInstance, gb = $$$hostConfig.cloneInstance, hb = $$$hostConfig.createContainerChildSet, ib = $$$hostConfig.appendChildToContainerChildSet, kb = $$$hostConfig.finalizeContainerChildren, lb = $$$hostConfig.replaceContainerChildren, mb = $$$hostConfig.cloneHiddenInstance, nb = $$$hostConfig.cloneHiddenTextInstance, ob = $$$hostConfig.canHydrateInstance, pb = $$$hostConfig.canHydrateTextInstance, qb = $$$hostConfig.isSuspenseInstancePending, rb = $$$hostConfig.isSuspenseInstanceFallback, sb = $$$hostConfig.getNextHydratableSibling, tb = $$$hostConfig.getFirstHydratableChild, ub = $$$hostConfig.hydrateInstance, vb = $$$hostConfig.hydrateTextInstance, wb = $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance, xb = $$$hostConfig.commitHydratedContainer, yb = $$$hostConfig.commitHydratedSuspenseInstance, zb = /^(.*)[\\\\\\/]/;\n        function Ab(a) {\n            var b = \"\";\n            do {\n                a: switch(a.tag){\n                    case 3:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 10:\n                    case 9:\n                        var c = \"\";\n                        break a;\n                    default:\n                        var d = a._debugOwner, e = a._debugSource, f = ta(a.type);\n                        c = null;\n                        d && (c = ta(d.type));\n                        d = f;\n                        f = \"\";\n                        e ? f = \" (at \" + e.fileName.replace(zb, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n                        c = \"\\n    in \" + (d || \"Unknown\") + f;\n                }\n                b += c;\n                a = a.return;\n            }while (a);\n            return b;\n        }\n        var Bb = [], Cb = -1;\n        function y(a) {\n            0 > Cb || (a.current = Bb[Cb], Bb[Cb] = null, Cb--);\n        }\n        function z(a, b) {\n            Cb++;\n            Bb[Cb] = a.current;\n            a.current = b;\n        }\n        var Db = {}, A = {\n            current: Db\n        }, B = {\n            current: !1\n        }, Eb = Db;\n        function Fb(a, b) {\n            var c = a.type.contextTypes;\n            if (!c) return Db;\n            var d = a.stateNode;\n            if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n            var e = {}, f;\n            for(f in c)e[f] = b[f];\n            d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n            return e;\n        }\n        function C(a) {\n            a = a.childContextTypes;\n            return null !== a && void 0 !== a;\n        }\n        function Gb(a) {\n            y(B);\n            y(A);\n        }\n        function Hb(a) {\n            y(B);\n            y(A);\n        }\n        function Ib(a, b, c) {\n            if (A.current !== Db) throw Error(n(168));\n            z(A, b);\n            z(B, c);\n        }\n        function Jb(a, b, c) {\n            var d = a.stateNode;\n            a = b.childContextTypes;\n            if (\"function\" !== typeof d.getChildContext) return c;\n            d = d.getChildContext();\n            for(var e in d)if (!(e in a)) throw Error(n(108, ta(b) || \"Unknown\", e));\n            return aa({}, c, {}, d);\n        }\n        function Kb(a) {\n            var b = a.stateNode;\n            b = b && b.__reactInternalMemoizedMergedChildContext || Db;\n            Eb = A.current;\n            z(A, b);\n            z(B, B.current);\n            return !0;\n        }\n        function Lb(a, b, c) {\n            var d = a.stateNode;\n            if (!d) throw Error(n(169));\n            c ? (b = Jb(a, b, Eb), d.__reactInternalMemoizedMergedChildContext = b, y(B), y(A), z(A, b)) : y(B);\n            z(B, c);\n        }\n        var Mb = m.unstable_runWithPriority, Nb = m.unstable_scheduleCallback, Ob = m.unstable_cancelCallback, Pb = m.unstable_shouldYield, Qb = m.unstable_requestPaint, Tb = m.unstable_now, Ub = m.unstable_getCurrentPriorityLevel, Vb = m.unstable_ImmediatePriority, Wb = m.unstable_UserBlockingPriority, Xb = m.unstable_NormalPriority, Yb = m.unstable_LowPriority, Zb = m.unstable_IdlePriority, $b = {}, ac = void 0 !== Qb ? Qb : function() {}, bc = null, cc = null, dc = !1, ec = Tb(), E = 1E4 > ec ? Tb : function() {\n            return Tb() - ec;\n        };\n        function fc() {\n            switch(Ub()){\n                case Vb:\n                    return 99;\n                case Wb:\n                    return 98;\n                case Xb:\n                    return 97;\n                case Yb:\n                    return 96;\n                case Zb:\n                    return 95;\n                default:\n                    throw Error(n(332));\n            }\n        }\n        function gc(a) {\n            switch(a){\n                case 99:\n                    return Vb;\n                case 98:\n                    return Wb;\n                case 97:\n                    return Xb;\n                case 96:\n                    return Yb;\n                case 95:\n                    return Zb;\n                default:\n                    throw Error(n(332));\n            }\n        }\n        function hc(a, b) {\n            a = gc(a);\n            return Mb(a, b);\n        }\n        function ic(a, b, c) {\n            a = gc(a);\n            return Nb(a, b, c);\n        }\n        function jc(a) {\n            null === bc ? (bc = [\n                a\n            ], cc = Nb(Vb, kc)) : bc.push(a);\n            return $b;\n        }\n        function F() {\n            if (null !== cc) {\n                var a = cc;\n                cc = null;\n                Ob(a);\n            }\n            kc();\n        }\n        function kc() {\n            if (!dc && null !== bc) {\n                dc = !0;\n                var a = 0;\n                try {\n                    var b = bc;\n                    hc(99, function() {\n                        for(; a < b.length; a++){\n                            var c = b[a];\n                            do c = c(!0);\n                            while (null !== c);\n                        }\n                    });\n                    bc = null;\n                } catch (c) {\n                    throw null !== bc && (bc = bc.slice(a + 1)), Nb(Vb, F), c;\n                } finally{\n                    dc = !1;\n                }\n            }\n        }\n        var lc = 3;\n        function mc(a, b, c) {\n            c /= 10;\n            return 1073741821 - (((1073741821 - a + b / 10) / c | 0) + 1) * c;\n        }\n        function nc(a, b) {\n            return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n        }\n        var oc = \"function\" === typeof Object.is ? Object.is : nc, pc = Object.prototype.hasOwnProperty;\n        function qc(a, b) {\n            if (oc(a, b)) return !0;\n            if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n            var c = Object.keys(a), d = Object.keys(b);\n            if (c.length !== d.length) return !1;\n            for(d = 0; d < c.length; d++)if (!pc.call(b, c[d]) || !oc(a[c[d]], b[c[d]])) return !1;\n            return !0;\n        }\n        function rc(a, b) {\n            if (a && a.defaultProps) {\n                b = aa({}, b);\n                a = a.defaultProps;\n                for(var c in a)void 0 === b[c] && (b[c] = a[c]);\n            }\n            return b;\n        }\n        var sc = {\n            current: null\n        }, tc = null, uc = null, vc = null;\n        function wc() {\n            vc = uc = tc = null;\n        }\n        function xc(a, b) {\n            var c = a.type._context;\n            Pa ? (z(sc, c._currentValue), c._currentValue = b) : (z(sc, c._currentValue2), c._currentValue2 = b);\n        }\n        function yc(a) {\n            var b = sc.current;\n            y(sc);\n            a = a.type._context;\n            Pa ? a._currentValue = b : a._currentValue2 = b;\n        }\n        function zc(a, b) {\n            for(; null !== a;){\n                var c = a.alternate;\n                if (a.childExpirationTime < b) a.childExpirationTime = b, null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n                else if (null !== c && c.childExpirationTime < b) c.childExpirationTime = b;\n                else break;\n                a = a.return;\n            }\n        }\n        function Ac(a, b) {\n            tc = a;\n            vc = uc = null;\n            a = a.dependencies;\n            null !== a && null !== a.firstContext && (a.expirationTime >= b && (Bc = !0), a.firstContext = null);\n        }\n        function Cc(a, b) {\n            if (vc !== a && !1 !== b && 0 !== b) {\n                if (\"number\" !== typeof b || 1073741823 === b) vc = a, b = 1073741823;\n                b = {\n                    context: a,\n                    observedBits: b,\n                    next: null\n                };\n                if (null === uc) {\n                    if (null === tc) throw Error(n(308));\n                    uc = b;\n                    tc.dependencies = {\n                        expirationTime: 0,\n                        firstContext: b,\n                        responders: null\n                    };\n                } else uc = uc.next = b;\n            }\n            return Pa ? a._currentValue : a._currentValue2;\n        }\n        var Dc = !1;\n        function Ec(a) {\n            return {\n                baseState: a,\n                firstUpdate: null,\n                lastUpdate: null,\n                firstCapturedUpdate: null,\n                lastCapturedUpdate: null,\n                firstEffect: null,\n                lastEffect: null,\n                firstCapturedEffect: null,\n                lastCapturedEffect: null\n            };\n        }\n        function Fc(a) {\n            return {\n                baseState: a.baseState,\n                firstUpdate: a.firstUpdate,\n                lastUpdate: a.lastUpdate,\n                firstCapturedUpdate: null,\n                lastCapturedUpdate: null,\n                firstEffect: null,\n                lastEffect: null,\n                firstCapturedEffect: null,\n                lastCapturedEffect: null\n            };\n        }\n        function Gc(a, b) {\n            return {\n                expirationTime: a,\n                suspenseConfig: b,\n                tag: 0,\n                payload: null,\n                callback: null,\n                next: null,\n                nextEffect: null\n            };\n        }\n        function Hc(a, b) {\n            null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n        }\n        function Ic(a, b) {\n            var c = a.alternate;\n            if (null === c) {\n                var d = a.updateQueue;\n                var e = null;\n                null === d && (d = a.updateQueue = Ec(a.memoizedState));\n            } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = Ec(a.memoizedState), e = c.updateQueue = Ec(c.memoizedState)) : d = a.updateQueue = Fc(e) : null === e && (e = c.updateQueue = Fc(d));\n            null === e || d === e ? Hc(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (Hc(d, b), Hc(e, b)) : (Hc(d, b), e.lastUpdate = b);\n        }\n        function Jc(a, b) {\n            var c = a.updateQueue;\n            c = null === c ? a.updateQueue = Ec(a.memoizedState) : Kc(a, c);\n            null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n        }\n        function Kc(a, b) {\n            var c = a.alternate;\n            null !== c && b === c.updateQueue && (b = a.updateQueue = Fc(b));\n            return b;\n        }\n        function Lc(a, b, c, d, e, f) {\n            switch(c.tag){\n                case 1:\n                    return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n                case 3:\n                    a.effectTag = a.effectTag & -4097 | 64;\n                case 0:\n                    a = c.payload;\n                    e = \"function\" === typeof a ? a.call(f, d, e) : a;\n                    if (null === e || void 0 === e) break;\n                    return aa({}, d, e);\n                case 2:\n                    Dc = !0;\n            }\n            return d;\n        }\n        function Nc(a, b, c, d, e) {\n            Dc = !1;\n            b = Kc(a, b);\n            for(var f = b.baseState, g = null, l = 0, h = b.firstUpdate, k = f; null !== h;){\n                var p = h.expirationTime;\n                p < e ? (null === g && (g = h, f = k), l < p && (l = p)) : (Oc(p, h.suspenseConfig), k = Lc(a, b, h, k, c, d), null !== h.callback && (a.effectTag |= 32, h.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = h : (b.lastEffect.nextEffect = h, b.lastEffect = h)));\n                h = h.next;\n            }\n            p = null;\n            for(h = b.firstCapturedUpdate; null !== h;){\n                var D = h.expirationTime;\n                D < e ? (null === p && (p = h, null === g && (f = k)), l < D && (l = D)) : (k = Lc(a, b, h, k, c, d), null !== h.callback && (a.effectTag |= 32, h.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = h : (b.lastCapturedEffect.nextEffect = h, b.lastCapturedEffect = h)));\n                h = h.next;\n            }\n            null === g && (b.lastUpdate = null);\n            null === p ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n            null === g && null === p && (f = k);\n            b.baseState = f;\n            b.firstUpdate = g;\n            b.firstCapturedUpdate = p;\n            Pc(l);\n            a.expirationTime = l;\n            a.memoizedState = k;\n        }\n        function Qc(a, b, c) {\n            null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n            Rc(b.firstEffect, c);\n            b.firstEffect = b.lastEffect = null;\n            Rc(b.firstCapturedEffect, c);\n            b.firstCapturedEffect = b.lastCapturedEffect = null;\n        }\n        function Rc(a, b) {\n            for(; null !== a;){\n                var c = a.callback;\n                if (null !== c) {\n                    a.callback = null;\n                    var d = b;\n                    if (\"function\" !== typeof c) throw Error(n(191, c));\n                    c.call(d);\n                }\n                a = a.nextEffect;\n            }\n        }\n        var Sc = q.ReactCurrentBatchConfig, Tc = new ba.Component().refs;\n        function Uc(a, b, c, d) {\n            b = a.memoizedState;\n            c = c(d, b);\n            c = null === c || void 0 === c ? b : aa({}, b, c);\n            a.memoizedState = c;\n            d = a.updateQueue;\n            null !== d && 0 === a.expirationTime && (d.baseState = c);\n        }\n        var Xc = {\n            isMounted: function isMounted(a) {\n                return (a = a._reactInternalFiber) ? ua(a) === a : !1;\n            },\n            enqueueSetState: function enqueueSetState(a, b, c) {\n                a = a._reactInternalFiber;\n                var d = G(), e = Sc.suspense;\n                d = Vc(d, a, e);\n                e = Gc(d, e);\n                e.payload = b;\n                void 0 !== c && null !== c && (e.callback = c);\n                Ic(a, e);\n                Wc(a, d);\n            },\n            enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n                a = a._reactInternalFiber;\n                var d = G(), e = Sc.suspense;\n                d = Vc(d, a, e);\n                e = Gc(d, e);\n                e.tag = 1;\n                e.payload = b;\n                void 0 !== c && null !== c && (e.callback = c);\n                Ic(a, e);\n                Wc(a, d);\n            },\n            enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n                a = a._reactInternalFiber;\n                var c = G(), d = Sc.suspense;\n                c = Vc(c, a, d);\n                d = Gc(c, d);\n                d.tag = 2;\n                void 0 !== b && null !== b && (d.callback = b);\n                Ic(a, d);\n                Wc(a, c);\n            }\n        };\n        function Yc(a, b, c, d, e, f, g) {\n            a = a.stateNode;\n            return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !qc(c, d) || !qc(e, f) : !0;\n        }\n        function Zc(a, b, c) {\n            var d = !1, e = Db;\n            var f = b.contextType;\n            \"object\" === typeof f && null !== f ? f = Cc(f) : (e = C(b) ? Eb : A.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Fb(a, e) : Db);\n            b = new b(c, f);\n            a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n            b.updater = Xc;\n            a.stateNode = b;\n            b._reactInternalFiber = a;\n            d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n            return b;\n        }\n        function $c(a, b, c, d) {\n            a = b.state;\n            \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n            \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n            b.state !== a && Xc.enqueueReplaceState(b, b.state, null);\n        }\n        function ad(a, b, c, d) {\n            var e = a.stateNode;\n            e.props = c;\n            e.state = a.memoizedState;\n            e.refs = Tc;\n            var f = b.contextType;\n            \"object\" === typeof f && null !== f ? e.context = Cc(f) : (f = C(b) ? Eb : A.current, e.context = Fb(a, f));\n            f = a.updateQueue;\n            null !== f && (Nc(a, f, c, e, d), e.state = a.memoizedState);\n            f = b.getDerivedStateFromProps;\n            \"function\" === typeof f && (Uc(a, b, f, c), e.state = a.memoizedState);\n            \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Xc.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (Nc(a, f, c, e, d), e.state = a.memoizedState));\n            \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n        }\n        var bd = Array.isArray;\n        function cd(a, b, c) {\n            a = c.ref;\n            if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n                if (c._owner) {\n                    c = c._owner;\n                    if (c) {\n                        if (1 !== c.tag) throw Error(n(309));\n                        var d = c.stateNode;\n                    }\n                    if (!d) throw Error(n(147, a));\n                    var e = \"\" + a;\n                    if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n                    b = function b(_b) {\n                        var a = d.refs;\n                        a === Tc && (a = d.refs = {});\n                        null === _b ? delete a[e] : a[e] = _b;\n                    };\n                    b._stringRef = e;\n                    return b;\n                }\n                if (\"string\" !== typeof a) throw Error(n(284));\n                if (!c._owner) throw Error(n(290, a));\n            }\n            return a;\n        }\n        function dd(a, b) {\n            if (\"textarea\" !== a.type) throw Error(n(31, \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\"));\n        }\n        function ed(a) {\n            function b(b, c) {\n                if (a) {\n                    var d = b.lastEffect;\n                    null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n                    c.nextEffect = null;\n                    c.effectTag = 8;\n                }\n            }\n            function c(c, d) {\n                if (!a) return null;\n                for(; null !== d;)b(c, d), d = d.sibling;\n                return null;\n            }\n            function d(b, a) {\n                for(b = new Map(); null !== a;)null !== a.key ? b.set(a.key, a) : b.set(a.index, a), a = a.sibling;\n                return b;\n            }\n            function e(b, a, c) {\n                b = fd(b, a);\n                b.index = 0;\n                b.sibling = null;\n                return b;\n            }\n            function f(b, c, d) {\n                b.index = d;\n                if (!a) return c;\n                d = b.alternate;\n                if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n                b.effectTag = 2;\n                return c;\n            }\n            function g(b) {\n                a && null === b.alternate && (b.effectTag = 2);\n                return b;\n            }\n            function l(b, a, c, d) {\n                if (null === a || 6 !== a.tag) return a = gd(c, b.mode, d), a.return = b, a;\n                a = e(a, c);\n                a.return = b;\n                return a;\n            }\n            function h(b, a, c, d) {\n                if (null !== a && a.elementType === c.type) return d = e(a, c.props), d.ref = cd(b, a, c), d.return = b, d;\n                d = hd(c.type, c.key, c.props, null, b.mode, d);\n                d.ref = cd(b, a, c);\n                d.return = b;\n                return d;\n            }\n            function k(b, a, c, d) {\n                if (null === a || 4 !== a.tag || a.stateNode.containerInfo !== c.containerInfo || a.stateNode.implementation !== c.implementation) return a = id(c, b.mode, d), a.return = b, a;\n                a = e(a, c.children || []);\n                a.return = b;\n                return a;\n            }\n            function p(b, a, c, d, f) {\n                if (null === a || 7 !== a.tag) return a = jd(c, b.mode, d, f), a.return = b, a;\n                a = e(a, c);\n                a.return = b;\n                return a;\n            }\n            function D(b, a, c) {\n                if (\"string\" === typeof a || \"number\" === typeof a) return a = gd(\"\" + a, b.mode, c), a.return = b, a;\n                if (\"object\" === typeof a && null !== a) {\n                    switch(a.$$typeof){\n                        case ca:\n                            return c = hd(a.type, a.key, a.props, null, b.mode, c), c.ref = cd(b, null, a), c.return = b, c;\n                        case da:\n                            return a = id(a, b.mode, c), a.return = b, a;\n                    }\n                    if (bd(a) || ra(a)) return a = jd(a, b.mode, c, null), a.return = b, a;\n                    dd(b, a);\n                }\n                return null;\n            }\n            function x(b, a, c, d) {\n                var e = null !== a ? a.key : null;\n                if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : l(b, a, \"\" + c, d);\n                if (\"object\" === typeof c && null !== c) {\n                    switch(c.$$typeof){\n                        case ca:\n                            return c.key === e ? c.type === ea ? p(b, a, c.props.children, d, e) : h(b, a, c, d) : null;\n                        case da:\n                            return c.key === e ? k(b, a, c, d) : null;\n                    }\n                    if (bd(c) || ra(c)) return null !== e ? null : p(b, a, c, d, null);\n                    dd(b, c);\n                }\n                return null;\n            }\n            function K(b, a, c, d, e) {\n                if (\"string\" === typeof d || \"number\" === typeof d) return b = b.get(c) || null, l(a, b, \"\" + d, e);\n                if (\"object\" === typeof d && null !== d) {\n                    switch(d.$$typeof){\n                        case ca:\n                            return b = b.get(null === d.key ? c : d.key) || null, d.type === ea ? p(a, b, d.props.children, e, d.key) : h(a, b, d, e);\n                        case da:\n                            return b = b.get(null === d.key ? c : d.key) || null, k(a, b, d, e);\n                    }\n                    if (bd(d) || ra(d)) return b = b.get(c) || null, p(a, b, d, e, null);\n                    dd(a, d);\n                }\n                return null;\n            }\n            function Ha(e, g, h, l) {\n                for(var k = null, w = null, t = g, r = g = 0, p = null; null !== t && r < h.length; r++){\n                    t.index > r ? (p = t, t = null) : p = t.sibling;\n                    var v = x(e, t, h[r], l);\n                    if (null === v) {\n                        null === t && (t = p);\n                        break;\n                    }\n                    a && t && null === v.alternate && b(e, t);\n                    g = f(v, g, r);\n                    null === w ? k = v : w.sibling = v;\n                    w = v;\n                    t = p;\n                }\n                if (r === h.length) return c(e, t), k;\n                if (null === t) {\n                    for(; r < h.length; r++)t = D(e, h[r], l), null !== t && (g = f(t, g, r), null === w ? k = t : w.sibling = t, w = t);\n                    return k;\n                }\n                for(t = d(e, t); r < h.length; r++)p = K(t, e, r, h[r], l), null !== p && (a && null !== p.alternate && t.delete(null === p.key ? r : p.key), g = f(p, g, r), null === w ? k = p : w.sibling = p, w = p);\n                a && t.forEach(function(a) {\n                    return b(e, a);\n                });\n                return k;\n            }\n            function O(e, g, h, l) {\n                var k = ra(h);\n                if (\"function\" !== typeof k) throw Error(n(150));\n                h = k.call(h);\n                if (null == h) throw Error(n(151));\n                for(var t = k = null, r = g, w = g = 0, p = null, v = h.next(); null !== r && !v.done; w++, v = h.next()){\n                    r.index > w ? (p = r, r = null) : p = r.sibling;\n                    var N = x(e, r, v.value, l);\n                    if (null === N) {\n                        null === r && (r = p);\n                        break;\n                    }\n                    a && r && null === N.alternate && b(e, r);\n                    g = f(N, g, w);\n                    null === t ? k = N : t.sibling = N;\n                    t = N;\n                    r = p;\n                }\n                if (v.done) return c(e, r), k;\n                if (null === r) {\n                    for(; !v.done; w++, v = h.next())v = D(e, v.value, l), null !== v && (g = f(v, g, w), null === t ? k = v : t.sibling = v, t = v);\n                    return k;\n                }\n                for(r = d(e, r); !v.done; w++, v = h.next())v = K(r, e, w, v.value, l), null !== v && (a && null !== v.alternate && r.delete(null === v.key ? w : v.key), g = f(v, g, w), null === t ? k = v : t.sibling = v, t = v);\n                a && r.forEach(function(a) {\n                    return b(e, a);\n                });\n                return k;\n            }\n            return function(a, d, f, h) {\n                var k = \"object\" === typeof f && null !== f && f.type === ea && null === f.key;\n                k && (f = f.props.children);\n                var l = \"object\" === typeof f && null !== f;\n                if (l) switch(f.$$typeof){\n                    case ca:\n                        a: {\n                            l = f.key;\n                            for(k = d; null !== k;){\n                                if (k.key === l) {\n                                    if (7 === k.tag ? f.type === ea : k.elementType === f.type) {\n                                        c(a, k.sibling);\n                                        d = e(k, f.type === ea ? f.props.children : f.props);\n                                        d.ref = cd(a, k, f);\n                                        d.return = a;\n                                        a = d;\n                                        break a;\n                                    } else {\n                                        c(a, k);\n                                        break;\n                                    }\n                                } else b(a, k);\n                                k = k.sibling;\n                            }\n                            f.type === ea ? (d = jd(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = hd(f.type, f.key, f.props, null, a.mode, h), h.ref = cd(a, d, f), h.return = a, a = h);\n                        }\n                        return g(a);\n                    case da:\n                        a: {\n                            for(k = f.key; null !== d;){\n                                if (d.key === k) {\n                                    if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                                        c(a, d.sibling);\n                                        d = e(d, f.children || []);\n                                        d.return = a;\n                                        a = d;\n                                        break a;\n                                    } else {\n                                        c(a, d);\n                                        break;\n                                    }\n                                } else b(a, d);\n                                d = d.sibling;\n                            }\n                            d = id(f, a.mode, h);\n                            d.return = a;\n                            a = d;\n                        }\n                        return g(a);\n                }\n                if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = gd(f, a.mode, h), d.return = a, a = d), g(a);\n                if (bd(f)) return Ha(a, d, f, h);\n                if (ra(f)) return O(a, d, f, h);\n                l && dd(a, f);\n                if (\"undefined\" === typeof f && !k) switch(a.tag){\n                    case 1:\n                    case 0:\n                        throw a = a.type, Error(n(152, a.displayName || a.name || \"Component\"));\n                }\n                return c(a, d);\n            };\n        }\n        var kd = ed(!0), ld = ed(!1), md = {}, H = {\n            current: md\n        }, nd = {\n            current: md\n        }, od = {\n            current: md\n        };\n        function pd(a) {\n            if (a === md) throw Error(n(174));\n            return a;\n        }\n        function qd(a, b) {\n            z(od, b);\n            z(nd, a);\n            z(H, md);\n            b = Aa(b);\n            y(H);\n            z(H, b);\n        }\n        function rd(a) {\n            y(H);\n            y(nd);\n            y(od);\n        }\n        function sd(a) {\n            var b = pd(od.current), c = pd(H.current);\n            b = Ba(c, a.type, b);\n            c !== b && (z(nd, a), z(H, b));\n        }\n        function td(a) {\n            nd.current === a && (y(H), y(nd));\n        }\n        var I = {\n            current: 0\n        };\n        function ud(a) {\n            for(var b = a; null !== b;){\n                if (13 === b.tag) {\n                    var c = b.memoizedState;\n                    if (null !== c && (c = c.dehydrated, null === c || qb(c) || rb(c))) return b;\n                } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {\n                    if (0 !== (b.effectTag & 64)) return b;\n                } else if (null !== b.child) {\n                    b.child.return = b;\n                    b = b.child;\n                    continue;\n                }\n                if (b === a) break;\n                for(; null === b.sibling;){\n                    if (null === b.return || b.return === a) return null;\n                    b = b.return;\n                }\n                b.sibling.return = b.return;\n                b = b.sibling;\n            }\n            return null;\n        }\n        function vd(a, b) {\n            return {\n                responder: a,\n                props: b\n            };\n        }\n        var wd = q.ReactCurrentDispatcher, J = q.ReactCurrentBatchConfig, xd = 0, yd = null, L = null, zd = null, Ad = null, M = null, Bd = null, Cd = 0, Dd = null, Ed = 0, Fd = !1, Gd = null, Hd = 0;\n        function P() {\n            throw Error(n(321));\n        }\n        function Id(a, b) {\n            if (null === b) return !1;\n            for(var c = 0; c < b.length && c < a.length; c++)if (!oc(a[c], b[c])) return !1;\n            return !0;\n        }\n        function Jd(a, b, c, d, e, f) {\n            xd = f;\n            yd = b;\n            zd = null !== a ? a.memoizedState : null;\n            wd.current = null === zd ? Kd : Ld;\n            b = c(d, e);\n            if (Fd) {\n                do Fd = !1, Hd += 1, zd = null !== a ? a.memoizedState : null, Bd = Ad, Dd = M = L = null, wd.current = Ld, b = c(d, e);\n                while (Fd);\n                Gd = null;\n                Hd = 0;\n            }\n            wd.current = Md;\n            a = yd;\n            a.memoizedState = Ad;\n            a.expirationTime = Cd;\n            a.updateQueue = Dd;\n            a.effectTag |= Ed;\n            a = null !== L && null !== L.next;\n            xd = 0;\n            Bd = M = Ad = zd = L = yd = null;\n            Cd = 0;\n            Dd = null;\n            Ed = 0;\n            if (a) throw Error(n(300));\n            return b;\n        }\n        function Nd() {\n            wd.current = Md;\n            xd = 0;\n            Bd = M = Ad = zd = L = yd = null;\n            Cd = 0;\n            Dd = null;\n            Ed = 0;\n            Fd = !1;\n            Gd = null;\n            Hd = 0;\n        }\n        function Od() {\n            var a = {\n                memoizedState: null,\n                baseState: null,\n                queue: null,\n                baseUpdate: null,\n                next: null\n            };\n            null === M ? Ad = M = a : M = M.next = a;\n            return M;\n        }\n        function Pd() {\n            if (null !== Bd) M = Bd, Bd = M.next, L = zd, zd = null !== L ? L.next : null;\n            else {\n                if (null === zd) throw Error(n(310));\n                L = zd;\n                var a = {\n                    memoizedState: L.memoizedState,\n                    baseState: L.baseState,\n                    queue: L.queue,\n                    baseUpdate: L.baseUpdate,\n                    next: null\n                };\n                M = null === M ? Ad = a : M.next = a;\n                zd = L.next;\n            }\n            return M;\n        }\n        function Qd(a, b) {\n            return \"function\" === typeof b ? b(a) : b;\n        }\n        function Rd(a) {\n            var b = Pd(), c = b.queue;\n            if (null === c) throw Error(n(311));\n            c.lastRenderedReducer = a;\n            if (0 < Hd) {\n                var d = c.dispatch;\n                if (null !== Gd) {\n                    var e = Gd.get(c);\n                    if (void 0 !== e) {\n                        Gd.delete(c);\n                        var f = b.memoizedState;\n                        do f = a(f, e.action), e = e.next;\n                        while (null !== e);\n                        oc(f, b.memoizedState) || (Bc = !0);\n                        b.memoizedState = f;\n                        b.baseUpdate === c.last && (b.baseState = f);\n                        c.lastRenderedState = f;\n                        return [\n                            f,\n                            d\n                        ];\n                    }\n                }\n                return [\n                    b.memoizedState,\n                    d\n                ];\n            }\n            d = c.last;\n            var g = b.baseUpdate;\n            f = b.baseState;\n            null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n            if (null !== d) {\n                var l = e = null, h = d, k = !1;\n                do {\n                    var p = h.expirationTime;\n                    p < xd ? (k || (k = !0, l = g, e = f), p > Cd && (Cd = p, Pc(Cd))) : (Oc(p, h.suspenseConfig), f = h.eagerReducer === a ? h.eagerState : a(f, h.action));\n                    g = h;\n                    h = h.next;\n                }while (null !== h && h !== d);\n                k || (l = g, e = f);\n                oc(f, b.memoizedState) || (Bc = !0);\n                b.memoizedState = f;\n                b.baseUpdate = l;\n                b.baseState = e;\n                c.lastRenderedState = f;\n            }\n            return [\n                b.memoizedState,\n                c.dispatch\n            ];\n        }\n        function Sd(a) {\n            var b = Od();\n            \"function\" === typeof a && (a = a());\n            b.memoizedState = b.baseState = a;\n            a = b.queue = {\n                last: null,\n                dispatch: null,\n                lastRenderedReducer: Qd,\n                lastRenderedState: a\n            };\n            a = a.dispatch = Td.bind(null, yd, a);\n            return [\n                b.memoizedState,\n                a\n            ];\n        }\n        function Ud(a) {\n            return Rd(Qd);\n        }\n        function Vd(a, b, c, d) {\n            a = {\n                tag: a,\n                create: b,\n                destroy: c,\n                deps: d,\n                next: null\n            };\n            null === Dd ? (Dd = {\n                lastEffect: null\n            }, Dd.lastEffect = a.next = a) : (b = Dd.lastEffect, null === b ? Dd.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, Dd.lastEffect = a));\n            return a;\n        }\n        function Wd(a, b, c, d) {\n            var e = Od();\n            Ed |= a;\n            e.memoizedState = Vd(b, c, void 0, void 0 === d ? null : d);\n        }\n        function Xd(a, b, c, d) {\n            var e = Pd();\n            d = void 0 === d ? null : d;\n            var f = void 0;\n            if (null !== L) {\n                var g = L.memoizedState;\n                f = g.destroy;\n                if (null !== d && Id(d, g.deps)) {\n                    Vd(0, c, f, d);\n                    return;\n                }\n            }\n            Ed |= a;\n            e.memoizedState = Vd(b, c, f, d);\n        }\n        function Yd(a, b) {\n            return Wd(516, 192, a, b);\n        }\n        function Zd(a, b) {\n            return Xd(516, 192, a, b);\n        }\n        function $d(a, b) {\n            if (\"function\" === typeof b) return a = a(), b(a), function() {\n                b(null);\n            };\n            if (null !== b && void 0 !== b) return a = a(), b.current = a, function() {\n                b.current = null;\n            };\n        }\n        function ae() {}\n        function be(a, b) {\n            Od().memoizedState = [\n                a,\n                void 0 === b ? null : b\n            ];\n            return a;\n        }\n        function ce(a, b) {\n            var c = Pd();\n            b = void 0 === b ? null : b;\n            var d = c.memoizedState;\n            if (null !== d && null !== b && Id(b, d[1])) return d[0];\n            c.memoizedState = [\n                a,\n                b\n            ];\n            return a;\n        }\n        function Td(a, b, c) {\n            if (!(25 > Hd)) throw Error(n(301));\n            var d = a.alternate;\n            if (a === yd || null !== d && d === yd) {\n                if (Fd = !0, a = {\n                    expirationTime: xd,\n                    suspenseConfig: null,\n                    action: c,\n                    eagerReducer: null,\n                    eagerState: null,\n                    next: null\n                }, null === Gd && (Gd = new Map()), c = Gd.get(b), void 0 === c) Gd.set(b, a);\n                else {\n                    for(b = c; null !== b.next;)b = b.next;\n                    b.next = a;\n                }\n            } else {\n                var e = G(), f = Sc.suspense;\n                e = Vc(e, a, f);\n                f = {\n                    expirationTime: e,\n                    suspenseConfig: f,\n                    action: c,\n                    eagerReducer: null,\n                    eagerState: null,\n                    next: null\n                };\n                var g = b.last;\n                if (null === g) f.next = f;\n                else {\n                    var l = g.next;\n                    null !== l && (f.next = l);\n                    g.next = f;\n                }\n                b.last = f;\n                if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n                    var h = b.lastRenderedState, k = d(h, c);\n                    f.eagerReducer = d;\n                    f.eagerState = k;\n                    if (oc(k, h)) return;\n                } catch (p) {} finally{}\n                Wc(a, e);\n            }\n        }\n        var Md = {\n            readContext: Cc,\n            useCallback: P,\n            useContext: P,\n            useEffect: P,\n            useImperativeHandle: P,\n            useLayoutEffect: P,\n            useMemo: P,\n            useReducer: P,\n            useRef: P,\n            useState: P,\n            useDebugValue: P,\n            useResponder: P,\n            useDeferredValue: P,\n            useTransition: P\n        }, Kd = {\n            readContext: Cc,\n            useCallback: be,\n            useContext: Cc,\n            useEffect: Yd,\n            useImperativeHandle: function useImperativeHandle(a, b, c) {\n                c = null !== c && void 0 !== c ? c.concat([\n                    a\n                ]) : null;\n                return Wd(4, 36, $d.bind(null, b, a), c);\n            },\n            useLayoutEffect: function useLayoutEffect(a, b) {\n                return Wd(4, 36, a, b);\n            },\n            useMemo: function useMemo(a, b) {\n                var c = Od();\n                b = void 0 === b ? null : b;\n                a = a();\n                c.memoizedState = [\n                    a,\n                    b\n                ];\n                return a;\n            },\n            useReducer: function useReducer(a, b, c) {\n                var d = Od();\n                b = void 0 !== c ? c(b) : b;\n                d.memoizedState = d.baseState = b;\n                a = d.queue = {\n                    last: null,\n                    dispatch: null,\n                    lastRenderedReducer: a,\n                    lastRenderedState: b\n                };\n                a = a.dispatch = Td.bind(null, yd, a);\n                return [\n                    d.memoizedState,\n                    a\n                ];\n            },\n            useRef: function useRef(a) {\n                var b = Od();\n                a = {\n                    current: a\n                };\n                return b.memoizedState = a;\n            },\n            useState: Sd,\n            useDebugValue: ae,\n            useResponder: vd,\n            useDeferredValue: function useDeferredValue(a, b) {\n                var c = Sd(a), d = c[0], e = c[1];\n                Yd(function() {\n                    m.unstable_next(function() {\n                        var c = J.suspense;\n                        J.suspense = void 0 === b ? null : b;\n                        try {\n                            e(a);\n                        } finally{\n                            J.suspense = c;\n                        }\n                    });\n                }, [\n                    a,\n                    b\n                ]);\n                return d;\n            },\n            useTransition: function useTransition(a) {\n                var b = Sd(!1), c = b[0], d = b[1];\n                return [\n                    be(function(b) {\n                        d(!0);\n                        m.unstable_next(function() {\n                            var c = J.suspense;\n                            J.suspense = void 0 === a ? null : a;\n                            try {\n                                d(!1), b();\n                            } finally{\n                                J.suspense = c;\n                            }\n                        });\n                    }, [\n                        a,\n                        c\n                    ]),\n                    c\n                ];\n            }\n        }, Ld = {\n            readContext: Cc,\n            useCallback: ce,\n            useContext: Cc,\n            useEffect: Zd,\n            useImperativeHandle: function useImperativeHandle(a, b, c) {\n                c = null !== c && void 0 !== c ? c.concat([\n                    a\n                ]) : null;\n                return Xd(4, 36, $d.bind(null, b, a), c);\n            },\n            useLayoutEffect: function useLayoutEffect(a, b) {\n                return Xd(4, 36, a, b);\n            },\n            useMemo: function useMemo(a, b) {\n                var c = Pd();\n                b = void 0 === b ? null : b;\n                var d = c.memoizedState;\n                if (null !== d && null !== b && Id(b, d[1])) return d[0];\n                a = a();\n                c.memoizedState = [\n                    a,\n                    b\n                ];\n                return a;\n            },\n            useReducer: Rd,\n            useRef: function useRef() {\n                return Pd().memoizedState;\n            },\n            useState: Ud,\n            useDebugValue: ae,\n            useResponder: vd,\n            useDeferredValue: function useDeferredValue(a, b) {\n                var c = Ud(), d = c[0], e = c[1];\n                Zd(function() {\n                    m.unstable_next(function() {\n                        var c = J.suspense;\n                        J.suspense = void 0 === b ? null : b;\n                        try {\n                            e(a);\n                        } finally{\n                            J.suspense = c;\n                        }\n                    });\n                }, [\n                    a,\n                    b\n                ]);\n                return d;\n            },\n            useTransition: function useTransition(a) {\n                var b = Ud(), c = b[0], d = b[1];\n                return [\n                    ce(function(b) {\n                        d(!0);\n                        m.unstable_next(function() {\n                            var c = J.suspense;\n                            J.suspense = void 0 === a ? null : a;\n                            try {\n                                d(!1), b();\n                            } finally{\n                                J.suspense = c;\n                            }\n                        });\n                    }, [\n                        a,\n                        c\n                    ]),\n                    c\n                ];\n            }\n        }, de = null, ee = null, fe = !1;\n        function ge(a, b) {\n            var c = he(5, null, null, 0);\n            c.elementType = \"DELETED\";\n            c.type = \"DELETED\";\n            c.stateNode = b;\n            c.return = a;\n            c.effectTag = 8;\n            null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n        }\n        function ie(a, b) {\n            switch(a.tag){\n                case 5:\n                    return b = ob(b, a.type, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;\n                case 6:\n                    return b = pb(b, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;\n                case 13:\n                    return !1;\n                default:\n                    return !1;\n            }\n        }\n        function je(a) {\n            if (fe) {\n                var b = ee;\n                if (b) {\n                    var c = b;\n                    if (!ie(a, b)) {\n                        b = sb(c);\n                        if (!b || !ie(a, b)) {\n                            a.effectTag = a.effectTag & -1025 | 2;\n                            fe = !1;\n                            de = a;\n                            return;\n                        }\n                        ge(de, c);\n                    }\n                    de = a;\n                    ee = tb(b);\n                } else a.effectTag = a.effectTag & -1025 | 2, fe = !1, de = a;\n            }\n        }\n        function ke(a) {\n            for(a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)a = a.return;\n            de = a;\n        }\n        function ne(a) {\n            if (!Sa || a !== de) return !1;\n            if (!fe) return ke(a), fe = !0, !1;\n            var b = a.type;\n            if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !Ja(b, a.memoizedProps)) for(b = ee; b;)ge(a, b), b = sb(b);\n            ke(a);\n            if (13 === a.tag) {\n                if (!Sa) throw Error(n(316));\n                a = a.memoizedState;\n                a = null !== a ? a.dehydrated : null;\n                if (!a) throw Error(n(317));\n                ee = wb(a);\n            } else ee = de ? sb(a.stateNode) : null;\n            return !0;\n        }\n        function oe() {\n            Sa && (ee = de = null, fe = !1);\n        }\n        var pe = q.ReactCurrentOwner, Bc = !1;\n        function Q(a, b, c, d) {\n            b.child = null === a ? ld(b, null, c, d) : kd(b, a.child, c, d);\n        }\n        function qe(a, b, c, d, e) {\n            c = c.render;\n            var f = b.ref;\n            Ac(b, e);\n            d = Jd(a, b, c, d, f, e);\n            if (null !== a && !Bc) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), re(a, b, e);\n            b.effectTag |= 1;\n            Q(a, b, d, e);\n            return b.child;\n        }\n        function se(a, b, c, d, e, f) {\n            if (null === a) {\n                var g = c.type;\n                if (\"function\" === typeof g && !te(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, ue(a, b, g, d, e, f);\n                a = hd(c.type, null, d, null, b.mode, f);\n                a.ref = b.ref;\n                a.return = b;\n                return b.child = a;\n            }\n            g = a.child;\n            if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : qc, c(e, d) && a.ref === b.ref)) return re(a, b, f);\n            b.effectTag |= 1;\n            a = fd(g, d);\n            a.ref = b.ref;\n            a.return = b;\n            return b.child = a;\n        }\n        function ue(a, b, c, d, e, f) {\n            return null !== a && qc(a.memoizedProps, d) && a.ref === b.ref && (Bc = !1, e < f) ? re(a, b, f) : ve(a, b, c, d, f);\n        }\n        function we(a, b) {\n            var c = b.ref;\n            if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n        }\n        function ve(a, b, c, d, e) {\n            var f = C(c) ? Eb : A.current;\n            f = Fb(b, f);\n            Ac(b, e);\n            c = Jd(a, b, c, d, f, e);\n            if (null !== a && !Bc) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), re(a, b, e);\n            b.effectTag |= 1;\n            Q(a, b, c, e);\n            return b.child;\n        }\n        function xe(a, b, c, d, e) {\n            if (C(c)) {\n                var f = !0;\n                Kb(b);\n            } else f = !1;\n            Ac(b, e);\n            if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Zc(b, c, d), ad(b, c, d, e), d = !0;\n            else if (null === a) {\n                var g = b.stateNode, l = b.memoizedProps;\n                g.props = l;\n                var h = g.context, k = c.contextType;\n                \"object\" === typeof k && null !== k ? k = Cc(k) : (k = C(c) ? Eb : A.current, k = Fb(b, k));\n                var p = c.getDerivedStateFromProps, D = \"function\" === typeof p || \"function\" === typeof g.getSnapshotBeforeUpdate;\n                D || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (l !== d || h !== k) && $c(b, g, d, k);\n                Dc = !1;\n                var x = b.memoizedState;\n                h = g.state = x;\n                var K = b.updateQueue;\n                null !== K && (Nc(b, K, d, g, e), h = b.memoizedState);\n                l !== d || x !== h || B.current || Dc ? (\"function\" === typeof p && (Uc(b, c, p, d), h = b.memoizedState), (l = Dc || Yc(b, c, l, d, x, h, k)) ? (D || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = h), g.props = d, g.state = h, g.context = k, d = l) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n            } else g = b.stateNode, l = b.memoizedProps, g.props = b.type === b.elementType ? l : rc(b.type, l), h = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = Cc(k) : (k = C(c) ? Eb : A.current, k = Fb(b, k)), p = c.getDerivedStateFromProps, (D = \"function\" === typeof p || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (l !== d || h !== k) && $c(b, g, d, k), Dc = !1, h = b.memoizedState, x = g.state = h, K = b.updateQueue, null !== K && (Nc(b, K, d, g, e), x = b.memoizedState), l !== d || h !== x || B.current || Dc ? (\"function\" === typeof p && (Uc(b, c, p, d), x = b.memoizedState), (p = Dc || Yc(b, c, l, d, h, x, k)) ? (D || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = p) : (\"function\" !== typeof g.componentDidUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || l === a.memoizedProps && h === a.memoizedState || (b.effectTag |= 256), d = !1);\n            return ye(a, b, c, d, f, e);\n        }\n        function ye(a, b, c, d, e, f) {\n            we(a, b);\n            var g = 0 !== (b.effectTag & 64);\n            if (!d && !g) return e && Lb(b, c, !1), re(a, b, f);\n            d = b.stateNode;\n            pe.current = b;\n            var l = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n            b.effectTag |= 1;\n            null !== a && g ? (b.child = kd(b, a.child, null, f), b.child = kd(b, null, l, f)) : Q(a, b, l, f);\n            b.memoizedState = d.state;\n            e && Lb(b, c, !0);\n            return b.child;\n        }\n        function ze(a) {\n            var b = a.stateNode;\n            b.pendingContext ? Ib(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Ib(a, b.context, !1);\n            qd(a, b.containerInfo);\n        }\n        var Ae = {\n            dehydrated: null,\n            retryTime: 0\n        };\n        function Be(a, b, c) {\n            var d = b.mode, e = b.pendingProps, f = I.current, g = !1, l;\n            (l = 0 !== (b.effectTag & 64)) || (l = 0 !== (f & 2) && (null === a || null !== a.memoizedState));\n            l ? (g = !0, b.effectTag &= -65) : null !== a && null === a.memoizedState || void 0 === e.fallback || !0 === e.unstable_avoidThisFallback || (f |= 1);\n            z(I, f & 1);\n            if (null === a) {\n                void 0 !== e.fallback && je(b);\n                if (g) {\n                    g = e.fallback;\n                    e = jd(null, d, 0, null);\n                    e.return = b;\n                    if (0 === (b.mode & 2)) for(a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a;)a.return = e, a = a.sibling;\n                    c = jd(g, d, c, null);\n                    c.return = b;\n                    e.sibling = c;\n                    b.memoizedState = Ae;\n                    b.child = e;\n                    return c;\n                }\n                d = e.children;\n                b.memoizedState = null;\n                return b.child = ld(b, null, d, c);\n            }\n            if (null !== a.memoizedState) {\n                a = a.child;\n                d = a.sibling;\n                if (g) {\n                    e = e.fallback;\n                    c = fd(a, a.pendingProps);\n                    c.return = b;\n                    if (0 === (b.mode & 2) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== a.child)) for(c.child = g; null !== g;)g.return = c, g = g.sibling;\n                    d = fd(d, e, d.expirationTime);\n                    d.return = b;\n                    c.sibling = d;\n                    c.childExpirationTime = 0;\n                    b.memoizedState = Ae;\n                    b.child = c;\n                    return d;\n                }\n                c = kd(b, a.child, e.children, c);\n                b.memoizedState = null;\n                return b.child = c;\n            }\n            a = a.child;\n            if (g) {\n                g = e.fallback;\n                e = jd(null, d, 0, null);\n                e.return = b;\n                e.child = a;\n                null !== a && (a.return = e);\n                if (0 === (b.mode & 2)) for(a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a;)a.return = e, a = a.sibling;\n                c = jd(g, d, c, null);\n                c.return = b;\n                e.sibling = c;\n                c.effectTag |= 2;\n                e.childExpirationTime = 0;\n                b.memoizedState = Ae;\n                b.child = e;\n                return c;\n            }\n            b.memoizedState = null;\n            return b.child = kd(b, a, e.children, c);\n        }\n        function Ce(a, b) {\n            a.expirationTime < b && (a.expirationTime = b);\n            var c = a.alternate;\n            null !== c && c.expirationTime < b && (c.expirationTime = b);\n            zc(a.return, b);\n        }\n        function De(a, b, c, d, e, f) {\n            var g = a.memoizedState;\n            null === g ? a.memoizedState = {\n                isBackwards: b,\n                rendering: null,\n                last: d,\n                tail: c,\n                tailExpiration: 0,\n                tailMode: e,\n                lastEffect: f\n            } : (g.isBackwards = b, g.rendering = null, g.last = d, g.tail = c, g.tailExpiration = 0, g.tailMode = e, g.lastEffect = f);\n        }\n        function Ee(a, b, c) {\n            var d = b.pendingProps, e = d.revealOrder, f = d.tail;\n            Q(a, b, d.children, c);\n            d = I.current;\n            if (0 !== (d & 2)) d = d & 1 | 2, b.effectTag |= 64;\n            else {\n                if (null !== a && 0 !== (a.effectTag & 64)) a: for(a = b.child; null !== a;){\n                    if (13 === a.tag) null !== a.memoizedState && Ce(a, c);\n                    else if (19 === a.tag) Ce(a, c);\n                    else if (null !== a.child) {\n                        a.child.return = a;\n                        a = a.child;\n                        continue;\n                    }\n                    if (a === b) break a;\n                    for(; null === a.sibling;){\n                        if (null === a.return || a.return === b) break a;\n                        a = a.return;\n                    }\n                    a.sibling.return = a.return;\n                    a = a.sibling;\n                }\n                d &= 1;\n            }\n            z(I, d);\n            if (0 === (b.mode & 2)) b.memoizedState = null;\n            else switch(e){\n                case \"forwards\":\n                    c = b.child;\n                    for(e = null; null !== c;)a = c.alternate, null !== a && null === ud(a) && (e = c), c = c.sibling;\n                    c = e;\n                    null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);\n                    De(b, !1, e, c, f, b.lastEffect);\n                    break;\n                case \"backwards\":\n                    c = null;\n                    e = b.child;\n                    for(b.child = null; null !== e;){\n                        a = e.alternate;\n                        if (null !== a && null === ud(a)) {\n                            b.child = e;\n                            break;\n                        }\n                        a = e.sibling;\n                        e.sibling = c;\n                        c = e;\n                        e = a;\n                    }\n                    De(b, !0, c, null, f, b.lastEffect);\n                    break;\n                case \"together\":\n                    De(b, !1, null, null, void 0, b.lastEffect);\n                    break;\n                default:\n                    b.memoizedState = null;\n            }\n            return b.child;\n        }\n        function re(a, b, c) {\n            null !== a && (b.dependencies = a.dependencies);\n            var d = b.expirationTime;\n            0 !== d && Pc(d);\n            if (b.childExpirationTime < c) return null;\n            if (null !== a && b.child !== a.child) throw Error(n(153));\n            if (null !== b.child) {\n                a = b.child;\n                c = fd(a, a.pendingProps, a.expirationTime);\n                b.child = c;\n                for(c.return = b; null !== a.sibling;)a = a.sibling, c = c.sibling = fd(a, a.pendingProps, a.expirationTime), c.return = b;\n                c.sibling = null;\n            }\n            return b.child;\n        }\n        function Fe(a) {\n            a.effectTag |= 4;\n        }\n        var _Ge, He, Ie, Je;\n        if (Qa) _Ge = function Ge(a, b) {\n            for(var c = b.child; null !== c;){\n                if (5 === c.tag || 6 === c.tag) Fa(a, c.stateNode);\n                else if (4 !== c.tag && null !== c.child) {\n                    c.child.return = c;\n                    c = c.child;\n                    continue;\n                }\n                if (c === b) break;\n                for(; null === c.sibling;){\n                    if (null === c.return || c.return === b) return;\n                    c = c.return;\n                }\n                c.sibling.return = c.return;\n                c = c.sibling;\n            }\n        }, He = function He() {}, Ie = function Ie(a, b, c, d, e) {\n            a = a.memoizedProps;\n            if (a !== d) {\n                var f = b.stateNode, g = pd(H.current);\n                c = Ia(f, c, a, d, e, g);\n                (b.updateQueue = c) && Fe(b);\n            }\n        }, Je = function Je(a, b, c, d) {\n            c !== d && Fe(b);\n        };\n        else if (Ra) {\n            _Ge = function Ge(a, b, c, d) {\n                for(var e = b.child; null !== e;){\n                    if (5 === e.tag) {\n                        var f = e.stateNode;\n                        c && d && (f = mb(f, e.type, e.memoizedProps, e));\n                        Fa(a, f);\n                    } else if (6 === e.tag) f = e.stateNode, c && d && (f = nb(f, e.memoizedProps, e)), Fa(a, f);\n                    else if (4 !== e.tag) {\n                        if (13 === e.tag && 0 !== (e.effectTag & 4) && (f = null !== e.memoizedState)) {\n                            var g = e.child;\n                            if (null !== g && (null !== g.child && (g.child.return = g, _Ge(a, g, !0, f)), f = g.sibling, null !== f)) {\n                                f.return = e;\n                                e = f;\n                                continue;\n                            }\n                        }\n                        if (null !== e.child) {\n                            e.child.return = e;\n                            e = e.child;\n                            continue;\n                        }\n                    }\n                    if (e === b) break;\n                    for(; null === e.sibling;){\n                        if (null === e.return || e.return === b) return;\n                        e = e.return;\n                    }\n                    e.sibling.return = e.return;\n                    e = e.sibling;\n                }\n            };\n            var Ke = function Ke(a, b, c, d) {\n                for(var e = b.child; null !== e;){\n                    if (5 === e.tag) {\n                        var f = e.stateNode;\n                        c && d && (f = mb(f, e.type, e.memoizedProps, e));\n                        ib(a, f);\n                    } else if (6 === e.tag) f = e.stateNode, c && d && (f = nb(f, e.memoizedProps, e)), ib(a, f);\n                    else if (4 !== e.tag) {\n                        if (13 === e.tag && 0 !== (e.effectTag & 4) && (f = null !== e.memoizedState)) {\n                            var g = e.child;\n                            if (null !== g && (null !== g.child && (g.child.return = g, Ke(a, g, !0, f)), f = g.sibling, null !== f)) {\n                                f.return = e;\n                                e = f;\n                                continue;\n                            }\n                        }\n                        if (null !== e.child) {\n                            e.child.return = e;\n                            e = e.child;\n                            continue;\n                        }\n                    }\n                    if (e === b) break;\n                    for(; null === e.sibling;){\n                        if (null === e.return || e.return === b) return;\n                        e = e.return;\n                    }\n                    e.sibling.return = e.return;\n                    e = e.sibling;\n                }\n            };\n            He = function He(a) {\n                var b = a.stateNode;\n                if (null !== a.firstEffect) {\n                    var c = b.containerInfo, d = hb(c);\n                    Ke(d, a, !1, !1);\n                    b.pendingChildren = d;\n                    Fe(a);\n                    kb(c, d);\n                }\n            };\n            Ie = function Ie(a, b, c, d, e) {\n                var f = a.stateNode, g = a.memoizedProps;\n                if ((a = null === b.firstEffect) && g === d) b.stateNode = f;\n                else {\n                    var l = b.stateNode, h = pd(H.current), k = null;\n                    g !== d && (k = Ia(l, c, g, d, e, h));\n                    a && null === k ? b.stateNode = f : (f = gb(f, k, c, g, d, b, a, l), Ga(f, c, d, e, h) && Fe(b), b.stateNode = f, a ? Fe(b) : _Ge(f, b, !1, !1));\n                }\n            };\n            Je = function Je(a, b, c, d) {\n                c !== d && (a = pd(od.current), c = pd(H.current), b.stateNode = La(d, a, c, b), Fe(b));\n            };\n        } else He = function He() {}, Ie = function Ie() {}, Je = function Je() {};\n        function Le(a, b) {\n            switch(a.tailMode){\n                case \"hidden\":\n                    b = a.tail;\n                    for(var c = null; null !== b;)null !== b.alternate && (c = b), b = b.sibling;\n                    null === c ? a.tail = null : c.sibling = null;\n                    break;\n                case \"collapsed\":\n                    c = a.tail;\n                    for(var d = null; null !== c;)null !== c.alternate && (d = c), c = c.sibling;\n                    null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;\n            }\n        }\n        function Me(a) {\n            switch(a.tag){\n                case 1:\n                    C(a.type) && Gb();\n                    var b = a.effectTag;\n                    return b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;\n                case 3:\n                    rd();\n                    Hb();\n                    b = a.effectTag;\n                    if (0 !== (b & 64)) throw Error(n(285));\n                    a.effectTag = b & -4097 | 64;\n                    return a;\n                case 5:\n                    return td(a), null;\n                case 13:\n                    return y(I), b = a.effectTag, b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;\n                case 19:\n                    return y(I), null;\n                case 4:\n                    return rd(), null;\n                case 10:\n                    return yc(a), null;\n                default:\n                    return null;\n            }\n        }\n        function Ne(a, b) {\n            return {\n                value: a,\n                source: b,\n                stack: Ab(b)\n            };\n        }\n        var Oe = \"function\" === typeof WeakSet ? WeakSet : Set;\n        function Pe(a, b) {\n            var c = b.source, d = b.stack;\n            null === d && null !== c && (d = Ab(c));\n            null !== c && ta(c.type);\n            b = b.value;\n            null !== a && 1 === a.tag && ta(a.type);\n            try {\n                console.error(b);\n            } catch (e) {\n                setTimeout(function() {\n                    throw e;\n                });\n            }\n        }\n        function Qe(a, b) {\n            try {\n                b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n            } catch (c) {\n                Re(a, c);\n            }\n        }\n        function Se(a) {\n            var b = a.ref;\n            if (null !== b) if (\"function\" === typeof b) try {\n                b(null);\n            } catch (c) {\n                Re(a, c);\n            }\n            else b.current = null;\n        }\n        function Te(a, b) {\n            switch(b.tag){\n                case 0:\n                case 11:\n                case 15:\n                    Ue(2, 0, b);\n                    break;\n                case 1:\n                    if (b.effectTag & 256 && null !== a) {\n                        var c = a.memoizedProps, d = a.memoizedState;\n                        a = b.stateNode;\n                        b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : rc(b.type, c), d);\n                        a.__reactInternalSnapshotBeforeUpdate = b;\n                    }\n                    break;\n                case 3:\n                case 5:\n                case 6:\n                case 4:\n                case 17:\n                    break;\n                default:\n                    throw Error(n(163));\n            }\n        }\n        function Ue(a, b, c) {\n            c = c.updateQueue;\n            c = null !== c ? c.lastEffect : null;\n            if (null !== c) {\n                var d = c = c.next;\n                do {\n                    if (0 !== (d.tag & a)) {\n                        var e = d.destroy;\n                        d.destroy = void 0;\n                        void 0 !== e && e();\n                    }\n                    0 !== (d.tag & b) && (e = d.create, d.destroy = e());\n                    d = d.next;\n                }while (d !== c);\n            }\n        }\n        function Ve(a, b, c) {\n            \"function\" === typeof We && We(b);\n            switch(b.tag){\n                case 0:\n                case 11:\n                case 14:\n                case 15:\n                    a = b.updateQueue;\n                    if (null !== a && (a = a.lastEffect, null !== a)) {\n                        var d = a.next;\n                        hc(97 < c ? 97 : c, function() {\n                            var a = d;\n                            do {\n                                var c = a.destroy;\n                                if (void 0 !== c) {\n                                    var g = b;\n                                    try {\n                                        c();\n                                    } catch (l) {\n                                        Re(g, l);\n                                    }\n                                }\n                                a = a.next;\n                            }while (a !== d);\n                        });\n                    }\n                    break;\n                case 1:\n                    Se(b);\n                    c = b.stateNode;\n                    \"function\" === typeof c.componentWillUnmount && Qe(b, c);\n                    break;\n                case 5:\n                    Se(b);\n                    break;\n                case 4:\n                    Qa ? Xe(a, b, c) : Ra && Ye(b);\n            }\n        }\n        function Ze(a, b, c) {\n            for(var d = b;;)if (Ve(a, d, c), null === d.child || Qa && 4 === d.tag) {\n                if (d === b) break;\n                for(; null === d.sibling;){\n                    if (null === d.return || d.return === b) return;\n                    d = d.return;\n                }\n                d.sibling.return = d.return;\n                d = d.sibling;\n            } else d.child.return = d, d = d.child;\n        }\n        function $e(a) {\n            var b = a.alternate;\n            a.return = null;\n            a.child = null;\n            a.memoizedState = null;\n            a.updateQueue = null;\n            a.dependencies = null;\n            a.alternate = null;\n            a.firstEffect = null;\n            a.lastEffect = null;\n            a.pendingProps = null;\n            a.memoizedProps = null;\n            null !== b && $e(b);\n        }\n        function Ye(a) {\n            if (Ra) {\n                a = a.stateNode.containerInfo;\n                var b = hb(a);\n                lb(a, b);\n            }\n        }\n        function af(a) {\n            return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n        }\n        function bf(a) {\n            if (Qa) {\n                a: {\n                    for(var b = a.return; null !== b;){\n                        if (af(b)) {\n                            var c = b;\n                            break a;\n                        }\n                        b = b.return;\n                    }\n                    throw Error(n(160));\n                }\n                b = c.stateNode;\n                switch(c.tag){\n                    case 5:\n                        var d = !1;\n                        break;\n                    case 3:\n                        b = b.containerInfo;\n                        d = !0;\n                        break;\n                    case 4:\n                        b = b.containerInfo;\n                        d = !0;\n                        break;\n                    default:\n                        throw Error(n(161));\n                }\n                c.effectTag & 16 && (bb(b), c.effectTag &= -17);\n                a: b: for(c = a;;){\n                    for(; null === c.sibling;){\n                        if (null === c.return || af(c.return)) {\n                            c = null;\n                            break a;\n                        }\n                        c = c.return;\n                    }\n                    c.sibling.return = c.return;\n                    for(c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;){\n                        if (c.effectTag & 2) continue b;\n                        if (null === c.child || 4 === c.tag) continue b;\n                        else c.child.return = c, c = c.child;\n                    }\n                    if (!(c.effectTag & 2)) {\n                        c = c.stateNode;\n                        break a;\n                    }\n                }\n                for(var e = a;;){\n                    var f = 5 === e.tag || 6 === e.tag;\n                    if (f) f = f ? e.stateNode : e.stateNode.instance, c ? d ? Za(b, f, c) : Ya(b, f, c) : d ? Ua(b, f) : Ta(b, f);\n                    else if (4 !== e.tag && null !== e.child) {\n                        e.child.return = e;\n                        e = e.child;\n                        continue;\n                    }\n                    if (e === a) break;\n                    for(; null === e.sibling;){\n                        if (null === e.return || e.return === a) return;\n                        e = e.return;\n                    }\n                    e.sibling.return = e.return;\n                    e = e.sibling;\n                }\n            }\n        }\n        function Xe(a, b, c) {\n            for(var d = b, e = !1, f, g;;){\n                if (!e) {\n                    e = d.return;\n                    a: for(;;){\n                        if (null === e) throw Error(n(160));\n                        f = e.stateNode;\n                        switch(e.tag){\n                            case 5:\n                                g = !1;\n                                break a;\n                            case 3:\n                                f = f.containerInfo;\n                                g = !0;\n                                break a;\n                            case 4:\n                                f = f.containerInfo;\n                                g = !0;\n                                break a;\n                        }\n                        e = e.return;\n                    }\n                    e = !0;\n                }\n                if (5 === d.tag || 6 === d.tag) Ze(a, d, c), g ? ab(f, d.stateNode) : $a(f, d.stateNode);\n                else if (4 === d.tag) {\n                    if (null !== d.child) {\n                        f = d.stateNode.containerInfo;\n                        g = !0;\n                        d.child.return = d;\n                        d = d.child;\n                        continue;\n                    }\n                } else if (Ve(a, d, c), null !== d.child) {\n                    d.child.return = d;\n                    d = d.child;\n                    continue;\n                }\n                if (d === b) break;\n                for(; null === d.sibling;){\n                    if (null === d.return || d.return === b) return;\n                    d = d.return;\n                    4 === d.tag && (e = !1);\n                }\n                d.sibling.return = d.return;\n                d = d.sibling;\n            }\n        }\n        function cf(a, b) {\n            if (Qa) switch(b.tag){\n                case 0:\n                case 11:\n                case 14:\n                case 15:\n                    Ue(4, 8, b);\n                    break;\n                case 1:\n                    break;\n                case 5:\n                    var c = b.stateNode;\n                    if (null != c) {\n                        var d = b.memoizedProps;\n                        a = null !== a ? a.memoizedProps : d;\n                        var e = b.type, f = b.updateQueue;\n                        b.updateQueue = null;\n                        null !== f && Xa(c, f, e, a, d, b);\n                    }\n                    break;\n                case 6:\n                    if (null === b.stateNode) throw Error(n(162));\n                    c = b.memoizedProps;\n                    Va(b.stateNode, null !== a ? a.memoizedProps : c, c);\n                    break;\n                case 3:\n                    Sa && (b = b.stateNode, b.hydrate && (b.hydrate = !1, xb(b.containerInfo)));\n                    break;\n                case 12:\n                    break;\n                case 13:\n                    df(b);\n                    ef(b);\n                    break;\n                case 19:\n                    ef(b);\n                    break;\n                case 17:\n                    break;\n                case 20:\n                    break;\n                case 21:\n                    break;\n                default:\n                    throw Error(n(163));\n            }\n            else {\n                switch(b.tag){\n                    case 0:\n                    case 11:\n                    case 14:\n                    case 15:\n                        Ue(4, 8, b);\n                        return;\n                    case 12:\n                        return;\n                    case 13:\n                        df(b);\n                        ef(b);\n                        return;\n                    case 19:\n                        ef(b);\n                        return;\n                    case 3:\n                        Sa && (c = b.stateNode, c.hydrate && (c.hydrate = !1, xb(c.containerInfo)));\n                }\n                a: if (Ra) switch(b.tag){\n                    case 1:\n                    case 5:\n                    case 6:\n                    case 20:\n                        break a;\n                    case 3:\n                    case 4:\n                        b = b.stateNode;\n                        lb(b.containerInfo, b.pendingChildren);\n                        break a;\n                    default:\n                        throw Error(n(163));\n                }\n            }\n        }\n        function df(a) {\n            var b = a;\n            if (null === a.memoizedState) var c = !1;\n            else c = !0, b = a.child, ff = E();\n            if (Qa && null !== b) {\n                a: if (a = b, Qa) for(b = a;;){\n                    if (5 === b.tag) {\n                        var d = b.stateNode;\n                        c ? cb(d) : eb(b.stateNode, b.memoizedProps);\n                    } else if (6 === b.tag) d = b.stateNode, c ? db(d) : fb(d, b.memoizedProps);\n                    else if (13 === b.tag && null !== b.memoizedState && null === b.memoizedState.dehydrated) {\n                        d = b.child.sibling;\n                        d.return = b;\n                        b = d;\n                        continue;\n                    } else if (null !== b.child) {\n                        b.child.return = b;\n                        b = b.child;\n                        continue;\n                    }\n                    if (b === a) break a;\n                    for(; null === b.sibling;){\n                        if (null === b.return || b.return === a) break a;\n                        b = b.return;\n                    }\n                    b.sibling.return = b.return;\n                    b = b.sibling;\n                }\n            }\n        }\n        function ef(a) {\n            var b = a.updateQueue;\n            if (null !== b) {\n                a.updateQueue = null;\n                var c = a.stateNode;\n                null === c && (c = a.stateNode = new Oe());\n                b.forEach(function(b) {\n                    var d = gf.bind(null, a, b);\n                    c.has(b) || (c.add(b), b.then(d, d));\n                });\n            }\n        }\n        var hf = \"function\" === typeof WeakMap ? WeakMap : Map;\n        function jf(a, b, c) {\n            c = Gc(c, null);\n            c.tag = 3;\n            c.payload = {\n                element: null\n            };\n            var d = b.value;\n            c.callback = function() {\n                kf || (kf = !0, lf = d);\n                Pe(a, b);\n            };\n            return c;\n        }\n        function mf(a, b, c) {\n            c = Gc(c, null);\n            c.tag = 3;\n            var d = a.type.getDerivedStateFromError;\n            if (\"function\" === typeof d) {\n                var e = b.value;\n                c.payload = function() {\n                    Pe(a, b);\n                    return d(e);\n                };\n            }\n            var f = a.stateNode;\n            null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function() {\n                \"function\" !== typeof d && (null === nf ? nf = new Set([\n                    this\n                ]) : nf.add(this), Pe(a, b));\n                var c = b.stack;\n                this.componentDidCatch(b.value, {\n                    componentStack: null !== c ? c : \"\"\n                });\n            });\n            return c;\n        }\n        var of = Math.ceil, pf = q.ReactCurrentDispatcher, qf = q.ReactCurrentOwner, R = 0, rf = 8, S = 16, sf = 32, tf = 0, uf = 1, vf = 2, wf = 3, xf = 4, yf = 5, T = R, U = null, V = null, W = 0, X = tf, zf = null, Af = 1073741823, Bf = 1073741823, Cf = null, Df = 0, Ef = !1, ff = 0, Ff = 500, Y = null, kf = !1, lf = null, nf = null, Gf = !1, Hf = null, If = 90, Jf = null, Kf = 0, Lf = null, Mf = 0;\n        function G() {\n            return (T & (S | sf)) !== R ? 1073741821 - (E() / 10 | 0) : 0 !== Mf ? Mf : Mf = 1073741821 - (E() / 10 | 0);\n        }\n        function Vc(a, b, c) {\n            b = b.mode;\n            if (0 === (b & 2)) return 1073741823;\n            var d = fc();\n            if (0 === (b & 4)) return 99 === d ? 1073741823 : 1073741822;\n            if ((T & S) !== R) return W;\n            if (null !== c) a = mc(a, c.timeoutMs | 0 || 5E3, 250);\n            else switch(d){\n                case 99:\n                    a = 1073741823;\n                    break;\n                case 98:\n                    a = mc(a, 150, 100);\n                    break;\n                case 97:\n                case 96:\n                    a = mc(a, 5E3, 250);\n                    break;\n                case 95:\n                    a = 2;\n                    break;\n                default:\n                    throw Error(n(326));\n            }\n            null !== U && a === W && --a;\n            return a;\n        }\n        function Wc(a, b) {\n            if (50 < Kf) throw Kf = 0, Lf = null, Error(n(185));\n            a = Nf(a, b);\n            if (null !== a) {\n                var c = fc();\n                1073741823 === b ? (T & rf) !== R && (T & (S | sf)) === R ? Of(a) : (Z(a), T === R && F()) : Z(a);\n                (T & 4) === R || 98 !== c && 99 !== c || (null === Jf ? Jf = new Map([\n                    [\n                        a,\n                        b\n                    ]\n                ]) : (c = Jf.get(a), (void 0 === c || c > b) && Jf.set(a, b)));\n            }\n        }\n        function Nf(a, b) {\n            a.expirationTime < b && (a.expirationTime = b);\n            var c = a.alternate;\n            null !== c && c.expirationTime < b && (c.expirationTime = b);\n            var d = a.return, e = null;\n            if (null === d && 3 === a.tag) e = a.stateNode;\n            else for(; null !== d;){\n                c = d.alternate;\n                d.childExpirationTime < b && (d.childExpirationTime = b);\n                null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n                if (null === d.return && 3 === d.tag) {\n                    e = d.stateNode;\n                    break;\n                }\n                d = d.return;\n            }\n            null !== e && (U === e && (Pc(b), X === xf && Pf(e, W)), Qf(e, b));\n            return e;\n        }\n        function Rf(a) {\n            var b = a.lastExpiredTime;\n            if (0 !== b) return b;\n            b = a.firstPendingTime;\n            if (!Sf(a, b)) return b;\n            b = a.lastPingedTime;\n            a = a.nextKnownPendingLevel;\n            return b > a ? b : a;\n        }\n        function Z(a) {\n            if (0 !== a.lastExpiredTime) a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, a.callbackNode = jc(Of.bind(null, a));\n            else {\n                var b = Rf(a), c = a.callbackNode;\n                if (0 === b) null !== c && (a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90);\n                else {\n                    var d = G();\n                    1073741823 === b ? d = 99 : 1 === b || 2 === b ? d = 95 : (d = 10 * (1073741821 - b) - 10 * (1073741821 - d), d = 0 >= d ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95);\n                    if (null !== c) {\n                        var e = a.callbackPriority;\n                        if (a.callbackExpirationTime === b && e >= d) return;\n                        c !== $b && Ob(c);\n                    }\n                    a.callbackExpirationTime = b;\n                    a.callbackPriority = d;\n                    b = 1073741823 === b ? jc(Of.bind(null, a)) : ic(d, Tf.bind(null, a), {\n                        timeout: 10 * (1073741821 - b) - E()\n                    });\n                    a.callbackNode = b;\n                }\n            }\n        }\n        function Tf(a, b) {\n            Mf = 0;\n            if (b) return b = G(), Uf(a, b), Z(a), null;\n            var c = Rf(a);\n            if (0 !== c) {\n                b = a.callbackNode;\n                if ((T & (S | sf)) !== R) throw Error(n(327));\n                Vf();\n                a === U && c === W || Wf(a, c);\n                if (null !== V) {\n                    var d = T;\n                    T |= S;\n                    var e = Xf();\n                    do try {\n                        Yf();\n                        break;\n                    } catch (l) {\n                        Zf(a, l);\n                    }\n                    while (1);\n                    wc();\n                    T = d;\n                    pf.current = e;\n                    if (X === uf) throw b = zf, Wf(a, c), Pf(a, c), Z(a), b;\n                    if (null === V) switch(e = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c, d = X, U = null, d){\n                        case tf:\n                        case uf:\n                            throw Error(n(345));\n                        case vf:\n                            Uf(a, 2 < c ? 2 : c);\n                            break;\n                        case wf:\n                            Pf(a, c);\n                            d = a.lastSuspendedTime;\n                            c === d && (a.nextKnownPendingLevel = $f(e));\n                            if (1073741823 === Af && (e = ff + Ff - E(), 10 < e)) {\n                                if (Ef) {\n                                    var f = a.lastPingedTime;\n                                    if (0 === f || f >= c) {\n                                        a.lastPingedTime = c;\n                                        Wf(a, c);\n                                        break;\n                                    }\n                                }\n                                f = Rf(a);\n                                if (0 !== f && f !== c) break;\n                                if (0 !== d && d !== c) {\n                                    a.lastPingedTime = d;\n                                    break;\n                                }\n                                a.timeoutHandle = Ma(ag.bind(null, a), e);\n                                break;\n                            }\n                            ag(a);\n                            break;\n                        case xf:\n                            Pf(a, c);\n                            d = a.lastSuspendedTime;\n                            c === d && (a.nextKnownPendingLevel = $f(e));\n                            if (Ef && (e = a.lastPingedTime, 0 === e || e >= c)) {\n                                a.lastPingedTime = c;\n                                Wf(a, c);\n                                break;\n                            }\n                            e = Rf(a);\n                            if (0 !== e && e !== c) break;\n                            if (0 !== d && d !== c) {\n                                a.lastPingedTime = d;\n                                break;\n                            }\n                            1073741823 !== Bf ? d = 10 * (1073741821 - Bf) - E() : 1073741823 === Af ? d = 0 : (d = 10 * (1073741821 - Af) - 5E3, e = E(), c = 10 * (1073741821 - c) - e, d = e - d, 0 > d && (d = 0), d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * of(d / 1960)) - d, c < d && (d = c));\n                            if (10 < d) {\n                                a.timeoutHandle = Ma(ag.bind(null, a), d);\n                                break;\n                            }\n                            ag(a);\n                            break;\n                        case yf:\n                            if (1073741823 !== Af && null !== Cf) {\n                                f = Af;\n                                var g = Cf;\n                                d = g.busyMinDurationMs | 0;\n                                0 >= d ? d = 0 : (e = g.busyDelayMs | 0, f = E() - (10 * (1073741821 - f) - (g.timeoutMs | 0 || 5E3)), d = f <= e ? 0 : e + d - f);\n                                if (10 < d) {\n                                    Pf(a, c);\n                                    a.timeoutHandle = Ma(ag.bind(null, a), d);\n                                    break;\n                                }\n                            }\n                            ag(a);\n                            break;\n                        default:\n                            throw Error(n(329));\n                    }\n                    Z(a);\n                    if (a.callbackNode === b) return Tf.bind(null, a);\n                }\n            }\n            return null;\n        }\n        function Of(a) {\n            var b = a.lastExpiredTime;\n            b = 0 !== b ? b : 1073741823;\n            if (a.finishedExpirationTime === b) ag(a);\n            else {\n                if ((T & (S | sf)) !== R) throw Error(n(327));\n                Vf();\n                a === U && b === W || Wf(a, b);\n                if (null !== V) {\n                    var c = T;\n                    T |= S;\n                    var d = Xf();\n                    do try {\n                        bg();\n                        break;\n                    } catch (e) {\n                        Zf(a, e);\n                    }\n                    while (1);\n                    wc();\n                    T = c;\n                    pf.current = d;\n                    if (X === uf) throw c = zf, Wf(a, b), Pf(a, b), Z(a), c;\n                    if (null !== V) throw Error(n(261));\n                    a.finishedWork = a.current.alternate;\n                    a.finishedExpirationTime = b;\n                    U = null;\n                    ag(a);\n                    Z(a);\n                }\n            }\n            return null;\n        }\n        function cg(a, b) {\n            Uf(a, b);\n            Z(a);\n            (T & (S | sf)) === R && F();\n        }\n        function dg() {\n            if (null !== Jf) {\n                var a = Jf;\n                Jf = null;\n                a.forEach(function(a, c) {\n                    Uf(c, a);\n                    Z(c);\n                });\n                F();\n            }\n        }\n        function eg(a, b) {\n            if ((T & (S | sf)) !== R) throw Error(n(187));\n            var c = T;\n            T |= 1;\n            try {\n                return hc(99, a.bind(null, b));\n            } finally{\n                T = c, F();\n            }\n        }\n        function Wf(a, b) {\n            a.finishedWork = null;\n            a.finishedExpirationTime = 0;\n            var c = a.timeoutHandle;\n            c !== Oa && (a.timeoutHandle = Oa, Na(c));\n            if (null !== V) for(c = V.return; null !== c;){\n                var d = c;\n                switch(d.tag){\n                    case 1:\n                        var e = d.type.childContextTypes;\n                        null !== e && void 0 !== e && Gb();\n                        break;\n                    case 3:\n                        rd();\n                        Hb();\n                        break;\n                    case 5:\n                        td(d);\n                        break;\n                    case 4:\n                        rd();\n                        break;\n                    case 13:\n                        y(I);\n                        break;\n                    case 19:\n                        y(I);\n                        break;\n                    case 10:\n                        yc(d);\n                }\n                c = c.return;\n            }\n            U = a;\n            V = fd(a.current, null);\n            W = b;\n            X = tf;\n            zf = null;\n            Bf = Af = 1073741823;\n            Cf = null;\n            Df = 0;\n            Ef = !1;\n        }\n        function Zf(a, b) {\n            do {\n                try {\n                    wc();\n                    Nd();\n                    if (null === V || null === V.return) return X = uf, zf = b, null;\n                    a: {\n                        var c = a, d = V.return, e = V, f = b;\n                        b = W;\n                        e.effectTag |= 2048;\n                        e.firstEffect = e.lastEffect = null;\n                        if (null !== f && \"object\" === typeof f && \"function\" === typeof f.then) {\n                            var g = f, l = 0 !== (I.current & 1), h = d;\n                            do {\n                                var k;\n                                if (k = 13 === h.tag) {\n                                    var p = h.memoizedState;\n                                    if (null !== p) k = null !== p.dehydrated ? !0 : !1;\n                                    else {\n                                        var D = h.memoizedProps;\n                                        k = void 0 === D.fallback ? !1 : !0 !== D.unstable_avoidThisFallback ? !0 : l ? !1 : !0;\n                                    }\n                                }\n                                if (k) {\n                                    var x = h.updateQueue;\n                                    if (null === x) {\n                                        var K = new Set();\n                                        K.add(g);\n                                        h.updateQueue = K;\n                                    } else x.add(g);\n                                    if (0 === (h.mode & 2)) {\n                                        h.effectTag |= 64;\n                                        e.effectTag &= -2981;\n                                        if (1 === e.tag) if (null === e.alternate) e.tag = 17;\n                                        else {\n                                            var Ha = Gc(1073741823, null);\n                                            Ha.tag = 2;\n                                            Ic(e, Ha);\n                                        }\n                                        e.expirationTime = 1073741823;\n                                        break a;\n                                    }\n                                    f = void 0;\n                                    e = b;\n                                    var O = c.pingCache;\n                                    null === O ? (O = c.pingCache = new hf(), f = new Set(), O.set(g, f)) : (f = O.get(g), void 0 === f && (f = new Set(), O.set(g, f)));\n                                    if (!f.has(e)) {\n                                        f.add(e);\n                                        var w = fg.bind(null, c, g, e);\n                                        g.then(w, w);\n                                    }\n                                    h.effectTag |= 4096;\n                                    h.expirationTime = b;\n                                    break a;\n                                }\n                                h = h.return;\n                            }while (null !== h);\n                            f = Error((ta(e.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + Ab(e));\n                        }\n                        X !== yf && (X = vf);\n                        f = Ne(f, e);\n                        h = d;\n                        do {\n                            switch(h.tag){\n                                case 3:\n                                    g = f;\n                                    h.effectTag |= 4096;\n                                    h.expirationTime = b;\n                                    var r = jf(h, g, b);\n                                    Jc(h, r);\n                                    break a;\n                                case 1:\n                                    g = f;\n                                    var t = h.type, N = h.stateNode;\n                                    if (0 === (h.effectTag & 64) && (\"function\" === typeof t.getDerivedStateFromError || null !== N && \"function\" === typeof N.componentDidCatch && (null === nf || !nf.has(N)))) {\n                                        h.effectTag |= 4096;\n                                        h.expirationTime = b;\n                                        var Mc = mf(h, g, b);\n                                        Jc(h, Mc);\n                                        break a;\n                                    }\n                            }\n                            h = h.return;\n                        }while (null !== h);\n                    }\n                    V = gg(V);\n                } catch (Rb) {\n                    b = Rb;\n                    continue;\n                }\n                break;\n            }while (1);\n        }\n        function Xf() {\n            var a = pf.current;\n            pf.current = Md;\n            return null === a ? Md : a;\n        }\n        function Oc(a, b) {\n            a < Af && 2 < a && (Af = a);\n            null !== b && a < Bf && 2 < a && (Bf = a, Cf = b);\n        }\n        function Pc(a) {\n            a > Df && (Df = a);\n        }\n        function bg() {\n            for(; null !== V;)V = hg(V);\n        }\n        function Yf() {\n            for(; null !== V && !Pb();)V = hg(V);\n        }\n        function hg(a) {\n            var b = ig(a.alternate, a, W);\n            a.memoizedProps = a.pendingProps;\n            null === b && (b = gg(a));\n            qf.current = null;\n            return b;\n        }\n        function gg(a) {\n            V = a;\n            do {\n                var b = V.alternate;\n                a = V.return;\n                if (0 === (V.effectTag & 2048)) {\n                    a: {\n                        var c = b;\n                        b = V;\n                        var d = W, e = b.pendingProps;\n                        switch(b.tag){\n                            case 2:\n                                break;\n                            case 16:\n                                break;\n                            case 15:\n                            case 0:\n                                break;\n                            case 1:\n                                C(b.type) && Gb();\n                                break;\n                            case 3:\n                                rd();\n                                Hb();\n                                e = b.stateNode;\n                                e.pendingContext && (e.context = e.pendingContext, e.pendingContext = null);\n                                (null === c || null === c.child) && ne(b) && Fe(b);\n                                He(b);\n                                break;\n                            case 5:\n                                td(b);\n                                var f = pd(od.current);\n                                d = b.type;\n                                if (null !== c && null != b.stateNode) Ie(c, b, d, e, f), c.ref !== b.ref && (b.effectTag |= 128);\n                                else if (e) {\n                                    c = pd(H.current);\n                                    if (ne(b)) {\n                                        e = b;\n                                        if (!Sa) throw Error(n(175));\n                                        c = ub(e.stateNode, e.type, e.memoizedProps, f, c, e);\n                                        e.updateQueue = c;\n                                        c = null !== c ? !0 : !1;\n                                        c && Fe(b);\n                                    } else {\n                                        var g = Ea(d, e, f, c, b);\n                                        _Ge(g, b, !1, !1);\n                                        b.stateNode = g;\n                                        Ga(g, d, e, f, c) && Fe(b);\n                                    }\n                                    null !== b.ref && (b.effectTag |= 128);\n                                } else if (null === b.stateNode) throw Error(n(166));\n                                break;\n                            case 6:\n                                if (c && null != b.stateNode) Je(c, b, c.memoizedProps, e);\n                                else {\n                                    if (\"string\" !== typeof e && null === b.stateNode) throw Error(n(166));\n                                    c = pd(od.current);\n                                    f = pd(H.current);\n                                    if (ne(b)) {\n                                        c = b;\n                                        if (!Sa) throw Error(n(176));\n                                        (c = vb(c.stateNode, c.memoizedProps, c)) && Fe(b);\n                                    } else b.stateNode = La(e, c, f, b);\n                                }\n                                break;\n                            case 11:\n                                break;\n                            case 13:\n                                y(I);\n                                e = b.memoizedState;\n                                if (0 !== (b.effectTag & 64)) {\n                                    b.expirationTime = d;\n                                    break a;\n                                }\n                                e = null !== e;\n                                f = !1;\n                                null === c ? void 0 !== b.memoizedProps.fallback && ne(b) : (d = c.memoizedState, f = null !== d, e || null === d || (d = c.child.sibling, null !== d && (g = b.firstEffect, null !== g ? (b.firstEffect = d, d.nextEffect = g) : (b.firstEffect = b.lastEffect = d, d.nextEffect = null), d.effectTag = 8)));\n                                if (e && !f && 0 !== (b.mode & 2)) if (null === c && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (I.current & 1)) X === tf && (X = wf);\n                                else {\n                                    if (X === tf || X === wf) X = xf;\n                                    0 !== Df && null !== U && (Pf(U, W), Qf(U, Df));\n                                }\n                                Ra && e && (b.effectTag |= 4);\n                                Qa && (e || f) && (b.effectTag |= 4);\n                                break;\n                            case 7:\n                                break;\n                            case 8:\n                                break;\n                            case 12:\n                                break;\n                            case 4:\n                                rd();\n                                He(b);\n                                break;\n                            case 10:\n                                yc(b);\n                                break;\n                            case 9:\n                                break;\n                            case 14:\n                                break;\n                            case 17:\n                                C(b.type) && Gb();\n                                break;\n                            case 19:\n                                y(I);\n                                e = b.memoizedState;\n                                if (null === e) break;\n                                f = 0 !== (b.effectTag & 64);\n                                g = e.rendering;\n                                if (null === g) {\n                                    if (f) Le(e, !1);\n                                    else {\n                                        if (X !== tf || null !== c && 0 !== (c.effectTag & 64)) for(c = b.child; null !== c;){\n                                            g = ud(c);\n                                            if (null !== g) {\n                                                b.effectTag |= 64;\n                                                Le(e, !1);\n                                                c = g.updateQueue;\n                                                null !== c && (b.updateQueue = c, b.effectTag |= 4);\n                                                null === e.lastEffect && (b.firstEffect = null);\n                                                b.lastEffect = e.lastEffect;\n                                                c = d;\n                                                for(e = b.child; null !== e;)f = e, d = c, f.effectTag &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childExpirationTime = 0, f.expirationTime = d, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null) : (f.childExpirationTime = g.childExpirationTime, f.expirationTime = g.expirationTime, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, d = g.dependencies, f.dependencies = null === d ? null : {\n                                                    expirationTime: d.expirationTime,\n                                                    firstContext: d.firstContext,\n                                                    responders: d.responders\n                                                }), e = e.sibling;\n                                                z(I, I.current & 1 | 2);\n                                                b = b.child;\n                                                break a;\n                                            }\n                                            c = c.sibling;\n                                        }\n                                    }\n                                } else {\n                                    if (!f) if (c = ud(g), null !== c) {\n                                        if (b.effectTag |= 64, f = !0, c = c.updateQueue, null !== c && (b.updateQueue = c, b.effectTag |= 4), Le(e, !0), null === e.tail && \"hidden\" === e.tailMode) {\n                                            b = b.lastEffect = e.lastEffect;\n                                            null !== b && (b.nextEffect = null);\n                                            break;\n                                        }\n                                    } else E() > e.tailExpiration && 1 < d && (b.effectTag |= 64, f = !0, Le(e, !1), b.expirationTime = b.childExpirationTime = d - 1);\n                                    e.isBackwards ? (g.sibling = b.child, b.child = g) : (c = e.last, null !== c ? c.sibling = g : b.child = g, e.last = g);\n                                }\n                                if (null !== e.tail) {\n                                    0 === e.tailExpiration && (e.tailExpiration = E() + 500);\n                                    c = e.tail;\n                                    e.rendering = c;\n                                    e.tail = c.sibling;\n                                    e.lastEffect = b.lastEffect;\n                                    c.sibling = null;\n                                    e = I.current;\n                                    e = f ? e & 1 | 2 : e & 1;\n                                    z(I, e);\n                                    b = c;\n                                    break a;\n                                }\n                                break;\n                            case 20:\n                                break;\n                            case 21:\n                                break;\n                            default:\n                                throw Error(n(156, b.tag));\n                        }\n                        b = null;\n                    }\n                    c = V;\n                    if (1 === W || 1 !== c.childExpirationTime) {\n                        e = 0;\n                        for(f = c.child; null !== f;)d = f.expirationTime, g = f.childExpirationTime, d > e && (e = d), g > e && (e = g), f = f.sibling;\n                        c.childExpirationTime = e;\n                    }\n                    if (null !== b) return b;\n                    null !== a && 0 === (a.effectTag & 2048) && (null === a.firstEffect && (a.firstEffect = V.firstEffect), null !== V.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = V.firstEffect), a.lastEffect = V.lastEffect), 1 < V.effectTag && (null !== a.lastEffect ? a.lastEffect.nextEffect = V : a.firstEffect = V, a.lastEffect = V));\n                } else {\n                    b = Me(V);\n                    if (null !== b) return b.effectTag &= 2047, b;\n                    null !== a && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);\n                }\n                b = V.sibling;\n                if (null !== b) return b;\n                V = a;\n            }while (null !== V);\n            X === tf && (X = yf);\n            return null;\n        }\n        function $f(a) {\n            var b = a.expirationTime;\n            a = a.childExpirationTime;\n            return b > a ? b : a;\n        }\n        function ag(a) {\n            var b = fc();\n            hc(99, jg.bind(null, a, b));\n            return null;\n        }\n        function jg(a, b) {\n            Vf();\n            if ((T & (S | sf)) !== R) throw Error(n(327));\n            var c = a.finishedWork, d = a.finishedExpirationTime;\n            if (null === c) return null;\n            a.finishedWork = null;\n            a.finishedExpirationTime = 0;\n            if (c === a.current) throw Error(n(177));\n            a.callbackNode = null;\n            a.callbackExpirationTime = 0;\n            a.callbackPriority = 90;\n            a.nextKnownPendingLevel = 0;\n            var e = $f(c);\n            a.firstPendingTime = e;\n            d <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1);\n            d <= a.lastPingedTime && (a.lastPingedTime = 0);\n            d <= a.lastExpiredTime && (a.lastExpiredTime = 0);\n            a === U && (V = U = null, W = 0);\n            1 < c.effectTag ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, e = c.firstEffect) : e = c : e = c.firstEffect;\n            if (null !== e) {\n                var f = T;\n                T |= sf;\n                qf.current = null;\n                Ca(a.containerInfo);\n                Y = e;\n                do try {\n                    kg();\n                } catch (jb) {\n                    if (null === Y) throw Error(n(330));\n                    Re(Y, jb);\n                    Y = Y.nextEffect;\n                }\n                while (null !== Y);\n                Y = e;\n                do try {\n                    for(var g = a, l = b; null !== Y;){\n                        var h = Y.effectTag;\n                        h & 16 && Qa && bb(Y.stateNode);\n                        if (h & 128) {\n                            var k = Y.alternate;\n                            if (null !== k) {\n                                var p = k.ref;\n                                null !== p && (\"function\" === typeof p ? p(null) : p.current = null);\n                            }\n                        }\n                        switch(h & 1038){\n                            case 2:\n                                bf(Y);\n                                Y.effectTag &= -3;\n                                break;\n                            case 6:\n                                bf(Y);\n                                Y.effectTag &= -3;\n                                cf(Y.alternate, Y);\n                                break;\n                            case 1024:\n                                Y.effectTag &= -1025;\n                                break;\n                            case 1028:\n                                Y.effectTag &= -1025;\n                                cf(Y.alternate, Y);\n                                break;\n                            case 4:\n                                cf(Y.alternate, Y);\n                                break;\n                            case 8:\n                                var D = g, x = Y, K = l;\n                                Qa ? Xe(D, x, K) : Ze(D, x, K);\n                                $e(x);\n                        }\n                        Y = Y.nextEffect;\n                    }\n                } catch (jb) {\n                    if (null === Y) throw Error(n(330));\n                    Re(Y, jb);\n                    Y = Y.nextEffect;\n                }\n                while (null !== Y);\n                Da(a.containerInfo);\n                a.current = c;\n                Y = e;\n                do try {\n                    for(h = d; null !== Y;){\n                        var Ha = Y.effectTag;\n                        if (Ha & 36) {\n                            var O = Y.alternate;\n                            k = Y;\n                            p = h;\n                            switch(k.tag){\n                                case 0:\n                                case 11:\n                                case 15:\n                                    Ue(16, 32, k);\n                                    break;\n                                case 1:\n                                    var w = k.stateNode;\n                                    if (k.effectTag & 4) if (null === O) w.componentDidMount();\n                                    else {\n                                        var r = k.elementType === k.type ? O.memoizedProps : rc(k.type, O.memoizedProps);\n                                        w.componentDidUpdate(r, O.memoizedState, w.__reactInternalSnapshotBeforeUpdate);\n                                    }\n                                    var t = k.updateQueue;\n                                    null !== t && Qc(k, t, w, p);\n                                    break;\n                                case 3:\n                                    var N = k.updateQueue;\n                                    if (null !== N) {\n                                        g = null;\n                                        if (null !== k.child) switch(k.child.tag){\n                                            case 5:\n                                                g = za(k.child.stateNode);\n                                                break;\n                                            case 1:\n                                                g = k.child.stateNode;\n                                        }\n                                        Qc(k, N, g, p);\n                                    }\n                                    break;\n                                case 5:\n                                    var Mc = k.stateNode;\n                                    null === O && k.effectTag & 4 && Wa(Mc, k.type, k.memoizedProps, k);\n                                    break;\n                                case 6:\n                                    break;\n                                case 4:\n                                    break;\n                                case 12:\n                                    break;\n                                case 13:\n                                    if (Sa && null === k.memoizedState) {\n                                        var Rb = k.alternate;\n                                        if (null !== Rb) {\n                                            var le = Rb.memoizedState;\n                                            if (null !== le) {\n                                                var me = le.dehydrated;\n                                                null !== me && yb(me);\n                                            }\n                                        }\n                                    }\n                                    break;\n                                case 19:\n                                case 17:\n                                case 20:\n                                case 21:\n                                    break;\n                                default:\n                                    throw Error(n(163));\n                            }\n                        }\n                        if (Ha & 128) {\n                            k = void 0;\n                            var Sb = Y.ref;\n                            if (null !== Sb) {\n                                var v = Y.stateNode;\n                                switch(Y.tag){\n                                    case 5:\n                                        k = za(v);\n                                        break;\n                                    default:\n                                        k = v;\n                                }\n                                \"function\" === typeof Sb ? Sb(k) : Sb.current = k;\n                            }\n                        }\n                        Y = Y.nextEffect;\n                    }\n                } catch (jb) {\n                    if (null === Y) throw Error(n(330));\n                    Re(Y, jb);\n                    Y = Y.nextEffect;\n                }\n                while (null !== Y);\n                Y = null;\n                ac();\n                T = f;\n            } else a.current = c;\n            if (Gf) Gf = !1, Hf = a, If = b;\n            else for(Y = e; null !== Y;)b = Y.nextEffect, Y.nextEffect = null, Y = b;\n            b = a.firstPendingTime;\n            0 === b && (nf = null);\n            1073741823 === b ? a === Lf ? Kf++ : (Kf = 0, Lf = a) : Kf = 0;\n            \"function\" === typeof lg && lg(c.stateNode, d);\n            Z(a);\n            if (kf) throw kf = !1, a = lf, lf = null, a;\n            if ((T & rf) !== R) return null;\n            F();\n            return null;\n        }\n        function kg() {\n            for(; null !== Y;){\n                var a = Y.effectTag;\n                0 !== (a & 256) && Te(Y.alternate, Y);\n                0 === (a & 512) || Gf || (Gf = !0, ic(97, function() {\n                    Vf();\n                    return null;\n                }));\n                Y = Y.nextEffect;\n            }\n        }\n        function Vf() {\n            if (90 !== If) {\n                var a = 97 < If ? 97 : If;\n                If = 90;\n                return hc(a, mg);\n            }\n        }\n        function mg() {\n            if (null === Hf) return !1;\n            var a = Hf;\n            Hf = null;\n            if ((T & (S | sf)) !== R) throw Error(n(331));\n            var b = T;\n            T |= sf;\n            for(a = a.current.firstEffect; null !== a;){\n                try {\n                    var c = a;\n                    if (0 !== (c.effectTag & 512)) switch(c.tag){\n                        case 0:\n                        case 11:\n                        case 15:\n                            Ue(128, 0, c), Ue(0, 64, c);\n                    }\n                } catch (d) {\n                    if (null === a) throw Error(n(330));\n                    Re(a, d);\n                }\n                c = a.nextEffect;\n                a.nextEffect = null;\n                a = c;\n            }\n            T = b;\n            F();\n            return !0;\n        }\n        function ng(a, b, c) {\n            b = Ne(c, b);\n            b = jf(a, b, 1073741823);\n            Ic(a, b);\n            a = Nf(a, 1073741823);\n            null !== a && Z(a);\n        }\n        function Re(a, b) {\n            if (3 === a.tag) ng(a, a, b);\n            else for(var c = a.return; null !== c;){\n                if (3 === c.tag) {\n                    ng(c, a, b);\n                    break;\n                } else if (1 === c.tag) {\n                    var d = c.stateNode;\n                    if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === nf || !nf.has(d))) {\n                        a = Ne(b, a);\n                        a = mf(c, a, 1073741823);\n                        Ic(c, a);\n                        c = Nf(c, 1073741823);\n                        null !== c && Z(c);\n                        break;\n                    }\n                }\n                c = c.return;\n            }\n        }\n        function fg(a, b, c) {\n            var d = a.pingCache;\n            null !== d && d.delete(b);\n            U === a && W === c ? X === xf || X === wf && 1073741823 === Af && E() - ff < Ff ? Wf(a, W) : Ef = !0 : Sf(a, c) && (b = a.lastPingedTime, 0 !== b && b < c || (a.lastPingedTime = c, a.finishedExpirationTime === c && (a.finishedExpirationTime = 0, a.finishedWork = null), Z(a)));\n        }\n        function gf(a, b) {\n            var c = a.stateNode;\n            null !== c && c.delete(b);\n            b = 0;\n            0 === b && (b = G(), b = Vc(b, a, null));\n            a = Nf(a, b);\n            null !== a && Z(a);\n        }\n        var ig;\n        ig = function ig(a, b, c) {\n            var d = b.expirationTime;\n            if (null !== a) {\n                var e = b.pendingProps;\n                if (a.memoizedProps !== e || B.current) Bc = !0;\n                else {\n                    if (d < c) {\n                        Bc = !1;\n                        switch(b.tag){\n                            case 3:\n                                ze(b);\n                                oe();\n                                break;\n                            case 5:\n                                sd(b);\n                                if (b.mode & 4 && 1 !== c && Ka(b.type, e)) return b.expirationTime = b.childExpirationTime = 1, null;\n                                break;\n                            case 1:\n                                C(b.type) && Kb(b);\n                                break;\n                            case 4:\n                                qd(b, b.stateNode.containerInfo);\n                                break;\n                            case 10:\n                                xc(b, b.memoizedProps.value);\n                                break;\n                            case 13:\n                                if (null !== b.memoizedState) {\n                                    d = b.child.childExpirationTime;\n                                    if (0 !== d && d >= c) return Be(a, b, c);\n                                    z(I, I.current & 1);\n                                    b = re(a, b, c);\n                                    return null !== b ? b.sibling : null;\n                                }\n                                z(I, I.current & 1);\n                                break;\n                            case 19:\n                                d = b.childExpirationTime >= c;\n                                if (0 !== (a.effectTag & 64)) {\n                                    if (d) return Ee(a, b, c);\n                                    b.effectTag |= 64;\n                                }\n                                e = b.memoizedState;\n                                null !== e && (e.rendering = null, e.tail = null);\n                                z(I, I.current);\n                                if (!d) return null;\n                        }\n                        return re(a, b, c);\n                    }\n                    Bc = !1;\n                }\n            } else Bc = !1;\n            b.expirationTime = 0;\n            switch(b.tag){\n                case 2:\n                    d = b.type;\n                    null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n                    a = b.pendingProps;\n                    e = Fb(b, A.current);\n                    Ac(b, c);\n                    e = Jd(null, b, d, a, e, c);\n                    b.effectTag |= 1;\n                    if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n                        b.tag = 1;\n                        Nd();\n                        if (C(d)) {\n                            var f = !0;\n                            Kb(b);\n                        } else f = !1;\n                        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n                        var g = d.getDerivedStateFromProps;\n                        \"function\" === typeof g && Uc(b, d, g, a);\n                        e.updater = Xc;\n                        b.stateNode = e;\n                        e._reactInternalFiber = b;\n                        ad(b, d, a, c);\n                        b = ye(null, b, d, !0, f, c);\n                    } else b.tag = 0, Q(null, b, e, c), b = b.child;\n                    return b;\n                case 16:\n                    e = b.elementType;\n                    null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n                    a = b.pendingProps;\n                    sa(e);\n                    if (1 !== e._status) throw e._result;\n                    e = e._result;\n                    b.type = e;\n                    f = b.tag = og(e);\n                    a = rc(e, a);\n                    switch(f){\n                        case 0:\n                            b = ve(null, b, e, a, c);\n                            break;\n                        case 1:\n                            b = xe(null, b, e, a, c);\n                            break;\n                        case 11:\n                            b = qe(null, b, e, a, c);\n                            break;\n                        case 14:\n                            b = se(null, b, e, rc(e.type, a), d, c);\n                            break;\n                        default:\n                            throw Error(n(306, e, \"\"));\n                    }\n                    return b;\n                case 0:\n                    return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), ve(a, b, d, e, c);\n                case 1:\n                    return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), xe(a, b, d, e, c);\n                case 3:\n                    ze(b);\n                    d = b.updateQueue;\n                    if (null === d) throw Error(n(282));\n                    e = b.memoizedState;\n                    e = null !== e ? e.element : null;\n                    Nc(b, d, b.pendingProps, null, c);\n                    d = b.memoizedState.element;\n                    if (d === e) oe(), b = re(a, b, c);\n                    else {\n                        if (e = b.stateNode.hydrate) Sa ? (ee = tb(b.stateNode.containerInfo), de = b, e = fe = !0) : e = !1;\n                        if (e) for(c = ld(b, null, d, c), b.child = c; c;)c.effectTag = c.effectTag & -3 | 1024, c = c.sibling;\n                        else Q(a, b, d, c), oe();\n                        b = b.child;\n                    }\n                    return b;\n                case 5:\n                    return sd(b), null === a && je(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ja(d, e) ? g = null : null !== f && Ja(d, f) && (b.effectTag |= 16), we(a, b), b.mode & 4 && 1 !== c && Ka(d, e) ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (Q(a, b, g, c), b = b.child), b;\n                case 6:\n                    return null === a && je(b), null;\n                case 13:\n                    return Be(a, b, c);\n                case 4:\n                    return qd(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = kd(b, null, d, c) : Q(a, b, d, c), b.child;\n                case 11:\n                    return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), qe(a, b, d, e, c);\n                case 7:\n                    return Q(a, b, b.pendingProps, c), b.child;\n                case 8:\n                    return Q(a, b, b.pendingProps.children, c), b.child;\n                case 12:\n                    return Q(a, b, b.pendingProps.children, c), b.child;\n                case 10:\n                    a: {\n                        d = b.type._context;\n                        e = b.pendingProps;\n                        g = b.memoizedProps;\n                        f = e.value;\n                        xc(b, f);\n                        if (null !== g) {\n                            var l = g.value;\n                            f = oc(l, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(l, f) : 1073741823) | 0;\n                            if (0 === f) {\n                                if (g.children === e.children && !B.current) {\n                                    b = re(a, b, c);\n                                    break a;\n                                }\n                            } else for(l = b.child, null !== l && (l.return = b); null !== l;){\n                                var h = l.dependencies;\n                                if (null !== h) {\n                                    g = l.child;\n                                    for(var k = h.firstContext; null !== k;){\n                                        if (k.context === d && 0 !== (k.observedBits & f)) {\n                                            1 === l.tag && (k = Gc(c, null), k.tag = 2, Ic(l, k));\n                                            l.expirationTime < c && (l.expirationTime = c);\n                                            k = l.alternate;\n                                            null !== k && k.expirationTime < c && (k.expirationTime = c);\n                                            zc(l.return, c);\n                                            h.expirationTime < c && (h.expirationTime = c);\n                                            break;\n                                        }\n                                        k = k.next;\n                                    }\n                                } else g = 10 === l.tag ? l.type === b.type ? null : l.child : l.child;\n                                if (null !== g) g.return = l;\n                                else for(g = l; null !== g;){\n                                    if (g === b) {\n                                        g = null;\n                                        break;\n                                    }\n                                    l = g.sibling;\n                                    if (null !== l) {\n                                        l.return = g.return;\n                                        g = l;\n                                        break;\n                                    }\n                                    g = g.return;\n                                }\n                                l = g;\n                            }\n                        }\n                        Q(a, b, e.children, c);\n                        b = b.child;\n                    }\n                    return b;\n                case 9:\n                    return e = b.type, f = b.pendingProps, d = f.children, Ac(b, c), e = Cc(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, Q(a, b, d, c), b.child;\n                case 14:\n                    return e = b.type, f = rc(e, b.pendingProps), f = rc(e.type, f), se(a, b, e, f, d, c);\n                case 15:\n                    return ue(a, b, b.type, b.pendingProps, d, c);\n                case 17:\n                    return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : rc(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, C(d) ? (a = !0, Kb(b)) : a = !1, Ac(b, c), Zc(b, d, e), ad(b, d, e, c), ye(null, b, d, !0, a, c);\n                case 19:\n                    return Ee(a, b, c);\n            }\n            throw Error(n(156, b.tag));\n        };\n        var lg = null, We = null;\n        function pg(a) {\n            if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n            var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n            if (b.isDisabled || !b.supportsFiber) return !0;\n            try {\n                var c = b.inject(a);\n                lg = function lg(a) {\n                    try {\n                        b.onCommitFiberRoot(c, a, void 0, 64 === (a.current.effectTag & 64));\n                    } catch (e) {}\n                };\n                We = function We(a) {\n                    try {\n                        b.onCommitFiberUnmount(c, a);\n                    } catch (e) {}\n                };\n            } catch (d) {}\n            return !0;\n        }\n        function qg(a, b, c, d) {\n            this.tag = a;\n            this.key = c;\n            this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n            this.index = 0;\n            this.ref = null;\n            this.pendingProps = b;\n            this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n            this.mode = d;\n            this.effectTag = 0;\n            this.lastEffect = this.firstEffect = this.nextEffect = null;\n            this.childExpirationTime = this.expirationTime = 0;\n            this.alternate = null;\n        }\n        function he(a, b, c, d) {\n            return new qg(a, b, c, d);\n        }\n        function te(a) {\n            a = a.prototype;\n            return !(!a || !a.isReactComponent);\n        }\n        function og(a) {\n            if (\"function\" === typeof a) return te(a) ? 1 : 0;\n            if (void 0 !== a && null !== a) {\n                a = a.$$typeof;\n                if (a === la) return 11;\n                if (a === oa) return 14;\n            }\n            return 2;\n        }\n        function fd(a, b) {\n            var c = a.alternate;\n            null === c ? (c = he(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n            c.childExpirationTime = a.childExpirationTime;\n            c.expirationTime = a.expirationTime;\n            c.child = a.child;\n            c.memoizedProps = a.memoizedProps;\n            c.memoizedState = a.memoizedState;\n            c.updateQueue = a.updateQueue;\n            b = a.dependencies;\n            c.dependencies = null === b ? null : {\n                expirationTime: b.expirationTime,\n                firstContext: b.firstContext,\n                responders: b.responders\n            };\n            c.sibling = a.sibling;\n            c.index = a.index;\n            c.ref = a.ref;\n            return c;\n        }\n        function hd(a, b, c, d, e, f) {\n            var g = 2;\n            d = a;\n            if (\"function\" === typeof a) te(a) && (g = 1);\n            else if (\"string\" === typeof a) g = 5;\n            else a: switch(a){\n                case ea:\n                    return jd(c.children, e, f, b);\n                case ka:\n                    g = 8;\n                    e |= 7;\n                    break;\n                case fa:\n                    g = 8;\n                    e |= 1;\n                    break;\n                case ha:\n                    return a = he(12, c, b, e | 8), a.elementType = ha, a.type = ha, a.expirationTime = f, a;\n                case ma:\n                    return a = he(13, c, b, e), a.type = ma, a.elementType = ma, a.expirationTime = f, a;\n                case na:\n                    return a = he(19, c, b, e), a.elementType = na, a.expirationTime = f, a;\n                default:\n                    if (\"object\" === typeof a && null !== a) switch(a.$$typeof){\n                        case ia:\n                            g = 10;\n                            break a;\n                        case ja:\n                            g = 9;\n                            break a;\n                        case la:\n                            g = 11;\n                            break a;\n                        case oa:\n                            g = 14;\n                            break a;\n                        case pa:\n                            g = 16;\n                            d = null;\n                            break a;\n                    }\n                    throw Error(n(130, null == a ? a : typeof a, \"\"));\n            }\n            b = he(g, c, b, e);\n            b.elementType = a;\n            b.type = d;\n            b.expirationTime = f;\n            return b;\n        }\n        function jd(a, b, c, d) {\n            a = he(7, a, d, b);\n            a.expirationTime = c;\n            return a;\n        }\n        function gd(a, b, c) {\n            a = he(6, a, null, b);\n            a.expirationTime = c;\n            return a;\n        }\n        function id(a, b, c) {\n            b = he(4, null !== a.children ? a.children : [], a.key, b);\n            b.expirationTime = c;\n            b.stateNode = {\n                containerInfo: a.containerInfo,\n                pendingChildren: null,\n                implementation: a.implementation\n            };\n            return b;\n        }\n        function rg(a, b, c) {\n            this.tag = b;\n            this.current = null;\n            this.containerInfo = a;\n            this.pingCache = this.pendingChildren = null;\n            this.finishedExpirationTime = 0;\n            this.finishedWork = null;\n            this.timeoutHandle = Oa;\n            this.pendingContext = this.context = null;\n            this.hydrate = c;\n            this.callbackNode = null;\n            this.callbackPriority = 90;\n            this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;\n        }\n        function Sf(a, b) {\n            var c = a.firstSuspendedTime;\n            a = a.lastSuspendedTime;\n            return 0 !== c && c >= b && a <= b;\n        }\n        function Pf(a, b) {\n            var c = a.firstSuspendedTime, d = a.lastSuspendedTime;\n            c < b && (a.firstSuspendedTime = b);\n            if (d > b || 0 === c) a.lastSuspendedTime = b;\n            b <= a.lastPingedTime && (a.lastPingedTime = 0);\n            b <= a.lastExpiredTime && (a.lastExpiredTime = 0);\n        }\n        function Qf(a, b) {\n            b > a.firstPendingTime && (a.firstPendingTime = b);\n            var c = a.firstSuspendedTime;\n            0 !== c && (b >= c ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));\n        }\n        function Uf(a, b) {\n            var c = a.lastExpiredTime;\n            if (0 === c || c > b) a.lastExpiredTime = b;\n        }\n        function sg(a) {\n            var b = a._reactInternalFiber;\n            if (void 0 === b) {\n                if (\"function\" === typeof a.render) throw Error(n(188));\n                throw Error(n(268, Object.keys(a)));\n            }\n            a = xa(b);\n            return null === a ? null : a.stateNode;\n        }\n        function tg(a, b) {\n            a = a.memoizedState;\n            null !== a && null !== a.dehydrated && a.retryTime < b && (a.retryTime = b);\n        }\n        function ug(a, b) {\n            tg(a, b);\n            (a = a.alternate) && tg(a, b);\n        }\n        var vg = {\n            createContainer: function createContainer(a, b, c) {\n                a = new rg(a, b, c);\n                b = he(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);\n                a.current = b;\n                return b.stateNode = a;\n            },\n            updateContainer: function updateContainer(a, b, c, d) {\n                var e = b.current, f = G(), g = Sc.suspense;\n                f = Vc(f, e, g);\n                a: if (c) {\n                    c = c._reactInternalFiber;\n                    b: {\n                        if (ua(c) !== c || 1 !== c.tag) throw Error(n(170));\n                        var l = c;\n                        do {\n                            switch(l.tag){\n                                case 3:\n                                    l = l.stateNode.context;\n                                    break b;\n                                case 1:\n                                    if (C(l.type)) {\n                                        l = l.stateNode.__reactInternalMemoizedMergedChildContext;\n                                        break b;\n                                    }\n                            }\n                            l = l.return;\n                        }while (null !== l);\n                        throw Error(n(171));\n                    }\n                    if (1 === c.tag) {\n                        var h = c.type;\n                        if (C(h)) {\n                            c = Jb(c, h, l);\n                            break a;\n                        }\n                    }\n                    c = l;\n                } else c = Db;\n                null === b.context ? b.context = c : b.pendingContext = c;\n                b = Gc(f, g);\n                b.payload = {\n                    element: a\n                };\n                d = void 0 === d ? null : d;\n                null !== d && (b.callback = d);\n                Ic(e, b);\n                Wc(e, f);\n                return f;\n            },\n            batchedEventUpdates: function batchedEventUpdates(a, b) {\n                var c = T;\n                T |= 2;\n                try {\n                    return a(b);\n                } finally{\n                    T = c, T === R && F();\n                }\n            },\n            batchedUpdates: function batchedUpdates(a, b) {\n                var c = T;\n                T |= 1;\n                try {\n                    return a(b);\n                } finally{\n                    T = c, T === R && F();\n                }\n            },\n            unbatchedUpdates: function unbatchedUpdates(a, b) {\n                var c = T;\n                T &= -2;\n                T |= rf;\n                try {\n                    return a(b);\n                } finally{\n                    T = c, T === R && F();\n                }\n            },\n            deferredUpdates: function deferredUpdates(a) {\n                return hc(97, a);\n            },\n            syncUpdates: function syncUpdates(a, b, c, d) {\n                return hc(99, a.bind(null, b, c, d));\n            },\n            discreteUpdates: function discreteUpdates(a, b, c, d) {\n                var e = T;\n                T |= 4;\n                try {\n                    return hc(98, a.bind(null, b, c, d));\n                } finally{\n                    T = e, T === R && F();\n                }\n            },\n            flushDiscreteUpdates: function flushDiscreteUpdates() {\n                (T & (1 | S | sf)) === R && (dg(), Vf());\n            },\n            flushControlled: function flushControlled(a) {\n                var b = T;\n                T |= 1;\n                try {\n                    hc(99, a);\n                } finally{\n                    T = b, T === R && F();\n                }\n            },\n            flushSync: eg,\n            flushPassiveEffects: Vf,\n            IsThisRendererActing: {\n                current: !1\n            },\n            getPublicRootInstance: function getPublicRootInstance(a) {\n                a = a.current;\n                if (!a.child) return null;\n                switch(a.child.tag){\n                    case 5:\n                        return za(a.child.stateNode);\n                    default:\n                        return a.child.stateNode;\n                }\n            },\n            attemptSynchronousHydration: function attemptSynchronousHydration(a) {\n                switch(a.tag){\n                    case 3:\n                        var b = a.stateNode;\n                        b.hydrate && cg(b, b.firstPendingTime);\n                        break;\n                    case 13:\n                        eg(function() {\n                            return Wc(a, 1073741823);\n                        }), b = mc(G(), 150, 100), ug(a, b);\n                }\n            },\n            attemptUserBlockingHydration: function attemptUserBlockingHydration(a) {\n                if (13 === a.tag) {\n                    var b = mc(G(), 150, 100);\n                    Wc(a, b);\n                    ug(a, b);\n                }\n            },\n            attemptContinuousHydration: function attemptContinuousHydration(a) {\n                if (13 === a.tag) {\n                    G();\n                    var b = lc++;\n                    Wc(a, b);\n                    ug(a, b);\n                }\n            },\n            attemptHydrationAtCurrentPriority: function attemptHydrationAtCurrentPriority(a) {\n                if (13 === a.tag) {\n                    var b = G();\n                    b = Vc(b, a, null);\n                    Wc(a, b);\n                    ug(a, b);\n                }\n            },\n            findHostInstance: sg,\n            findHostInstanceWithWarning: function findHostInstanceWithWarning(a) {\n                return sg(a);\n            },\n            findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(a) {\n                a = ya(a);\n                return null === a ? null : 20 === a.tag ? a.stateNode.instance : a.stateNode;\n            },\n            shouldSuspend: function shouldSuspend() {\n                return !1;\n            },\n            injectIntoDevTools: function injectIntoDevTools(a) {\n                var b = a.findFiberByHostInstance;\n                return pg(aa({}, a, {\n                    overrideHookState: null,\n                    overrideProps: null,\n                    setSuspenseHandler: null,\n                    scheduleUpdate: null,\n                    currentDispatcherRef: q.ReactCurrentDispatcher,\n                    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n                        a = xa(a);\n                        return null === a ? null : a.stateNode;\n                    },\n                    findFiberByHostInstance: function findFiberByHostInstance(a) {\n                        return b ? b(a) : null;\n                    },\n                    findHostInstancesForRefresh: null,\n                    scheduleRefresh: null,\n                    scheduleRoot: null,\n                    setRefreshHandler: null,\n                    getCurrentFiber: null\n                }));\n            }\n        };\n        module.exports = vg.default || vg;\n        var $$$renderer = module.exports;\n        module.exports = $$$reconciler;\n        return $$$renderer;\n    };\n})(reactReconciler_production_min);\nvar ReactFiberReconciler = reactReconciler_production_min.exports;\n/* eslint-disable no-continue */ /**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} a props A\n * @param {Object} b props B\n * @returns {boolean} props equals?\n *\n */ var propsEqual = function propsEqual(a, b) {\n    var oldPropsKeys = Object.keys(a);\n    var newPropsKeys = Object.keys(b);\n    if (oldPropsKeys.length !== newPropsKeys.length) {\n        return false;\n    }\n    for(var i = 0; i < oldPropsKeys.length; i += 1){\n        var propName = oldPropsKeys[i];\n        if (propName === \"render\" && !a[propName] !== !b[propName]) {\n            return false;\n        }\n        if (propName !== \"children\" && a[propName] !== b[propName]) {\n            if (typeof a[propName] === \"object\" && typeof b[propName] === \"object\" && propsEqual(a[propName], b[propName])) {\n                continue;\n            }\n            return false;\n        }\n        if (propName === \"children\" && (typeof a[propName] === \"string\" || typeof b[propName] === \"string\")) {\n            return a[propName] === b[propName];\n        }\n    }\n    return true;\n};\nvar _excluded = [\n    \"style\",\n    \"children\"\n], _excluded2 = [\n    \"style\"\n];\nvar emptyObject = {};\nvar appendChild = function appendChild(parentInstance, child) {\n    var isParentText = parentInstance.type === \"TEXT\" || parentInstance.type === \"LINK\" || parentInstance.type === \"TSPAN\";\n    var isChildTextInstance = child.type === \"TEXT_INSTANCE\";\n    var isOrphanTextInstance = isChildTextInstance && !isParentText;\n    // Ignore orphan text instances.\n    // Caused by cases such as <>{name && <Text>{name}</Text>}</>\n    if (isOrphanTextInstance) {\n        console.warn(\"Invalid '\" + child.value + \"' string child outside <Text> component\");\n        return;\n    }\n    parentInstance.children.push(child);\n};\nvar createRenderer = function createRenderer(_ref) {\n    var _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? function() {} : _ref$onChange;\n    return ReactFiberReconciler({\n        schedulePassiveEffects: scheduler__WEBPACK_IMPORTED_MODULE_13__.unstable_scheduleCallback,\n        cancelPassiveEffects: scheduler__WEBPACK_IMPORTED_MODULE_13__.unstable_cancelCallback,\n        supportsMutation: true,\n        isPrimaryRenderer: false,\n        warnsIfNotActing: false,\n        appendInitialChild: appendChild,\n        createInstance: function createInstance(type, _ref2) {\n            var style = _ref2.style;\n            _ref2.children;\n            var props = _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__(_ref2, _excluded);\n            return {\n                type: type,\n                box: {},\n                style: style || {},\n                props: props || {},\n                children: []\n            };\n        },\n        createTextInstance: function createTextInstance(text, rootContainerInstance) {\n            return {\n                type: \"TEXT_INSTANCE\",\n                value: text\n            };\n        },\n        finalizeInitialChildren: function finalizeInitialChildren(element, type, props) {\n            return false;\n        },\n        getPublicInstance: function getPublicInstance(instance) {\n            return instance;\n        },\n        prepareForCommit: function prepareForCommit() {\n        // Noop\n        },\n        clearContainer: function clearContainer() {\n        // Noop\n        },\n        prepareUpdate: function prepareUpdate(element, type, oldProps, newProps) {\n            return !propsEqual(oldProps, newProps);\n        },\n        resetAfterCommit: onChange,\n        resetTextContent: function resetTextContent(element) {\n        // Noop\n        },\n        getRootHostContext: function getRootHostContext() {\n            return emptyObject;\n        },\n        getChildHostContext: function getChildHostContext() {\n            return emptyObject;\n        },\n        shouldSetTextContent: function shouldSetTextContent(type, props) {\n            return false;\n        },\n        now: Date.now,\n        useSyncScheduling: true,\n        appendChild: appendChild,\n        appendChildToContainer: function appendChildToContainer(parentInstance, child) {\n            if (parentInstance.type === \"ROOT\") {\n                parentInstance.document = child;\n            } else {\n                appendChild(parentInstance, child);\n            }\n        },\n        insertBefore: function insertBefore(parentInstance, child, beforeChild) {\n            var _parentInstance$child;\n            var index = (_parentInstance$child = parentInstance.children) === null || _parentInstance$child === void 0 ? void 0 : _parentInstance$child.indexOf(beforeChild);\n            if (index === undefined) return;\n            if (index !== -1 && child) parentInstance.children.splice(index, 0, child);\n        },\n        removeChild: function removeChild(parentInstance, child) {\n            var _parentInstance$child2;\n            var index = (_parentInstance$child2 = parentInstance.children) === null || _parentInstance$child2 === void 0 ? void 0 : _parentInstance$child2.indexOf(child);\n            if (index === undefined) return;\n            if (index !== -1) parentInstance.children.splice(index, 1);\n        },\n        removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {\n            var _parentInstance$child3;\n            var index = (_parentInstance$child3 = parentInstance.children) === null || _parentInstance$child3 === void 0 ? void 0 : _parentInstance$child3.indexOf(child);\n            if (index === undefined) return;\n            if (index !== -1) parentInstance.children.splice(index, 1);\n        },\n        commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {\n            textInstance.value = newText;\n        },\n        commitUpdate: function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n            var style = newProps.style, props = _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__(newProps, _excluded2);\n            instance.props = props;\n            instance.style = style;\n        }\n    });\n};\nvar name = \"@react-pdf/renderer\";\nvar version$1 = \"3.3.4\";\nvar license = \"MIT\";\nvar description = \"Create PDF files on the browser and server\";\nvar author = \"Diego Muracciole <diegomuracciole@gmail.com>\";\nvar homepage = \"https://github.com/diegomura/react-pdf#readme\";\nvar type = \"module\";\nvar main = \"./lib/react-pdf.cjs\";\nvar module = \"./lib/react-pdf.js\";\nvar browser = {\n    \"./lib/react-pdf.js\": \"./lib/react-pdf.browser.js\",\n    \"./lib/react-pdf.cjs\": \"./lib/react-pdf.browser.cjs\"\n};\nvar exports = {\n    \".\": {\n        \"import\": \"./lib/react-pdf.js\",\n        require: \"./lib/react-pdf.cjs\",\n        \"default\": \"./lib/react-pdf.js\"\n    }\n};\nvar repository = {\n    type: \"git\",\n    url: \"https://github.com/diegomura/react-pdf.git\",\n    directory: \"packages/renderer\"\n};\nvar scripts = {\n    build: \"rimraf ./lib && rollup -c\",\n    watch: \"rimraf ./lib && rollup -c -w\",\n    size: \"size-limit\",\n    lint: \"eslint src\",\n    test: 'NODE_OPTIONS=\"--experimental-vm-modules\" jest'\n};\nvar dependencies = {\n    \"@babel/runtime\": \"^7.20.13\",\n    \"@react-pdf/font\": \"^2.4.2\",\n    \"@react-pdf/layout\": \"^3.10.3\",\n    \"@react-pdf/pdfkit\": \"^3.1.2\",\n    \"@react-pdf/primitives\": \"^3.1.1\",\n    \"@react-pdf/render\": \"^3.4.1\",\n    \"@react-pdf/types\": \"^2.4.0\",\n    events: \"^3.3.0\",\n    \"object-assign\": \"^4.1.1\",\n    \"prop-types\": \"^15.6.2\",\n    queue: \"^6.0.1\",\n    scheduler: \"^0.17.0\"\n};\nvar peerDependencies = {\n    react: \"^16.8.6 || ^17.0.0 || ^18.0.0\"\n};\nvar files = [\n    \"lib\",\n    \"index.d.ts\"\n];\nvar collective = {\n    type: \"opencollective\",\n    url: \"https://opencollective.com/react-pdf\",\n    logo: \"https://opencollective.com/opencollective/logo.txt\"\n};\nvar husky = {\n    hooks: {\n        \"pre-commit\": \"git add . && lint-staged\"\n    }\n};\nvar devDependencies = {\n    \"@size-limit/preset-big-lib\": \"^11.0.1\",\n    assert: \"^2.0.0\",\n    \"browserify-zlib\": \"^0.2.0\",\n    buffer: \"^6.0.3\",\n    process: \"^0.11.10\",\n    \"react-reconciler\": \"0.23.0\",\n    \"size-limit\": \"^11.0.1\",\n    util: \"^0.12.4\"\n};\nvar packageJson = {\n    name: name,\n    version: version$1,\n    license: license,\n    description: description,\n    author: author,\n    homepage: homepage,\n    type: type,\n    main: main,\n    module: module,\n    browser: browser,\n    exports: exports,\n    repository: repository,\n    scripts: scripts,\n    dependencies: dependencies,\n    peerDependencies: peerDependencies,\n    \"lint-staged\": {\n        \"*.js\": [\n            \"yarn run lint\",\n            \"prettier --write\",\n            \"git add\"\n        ]\n    },\n    files: files,\n    collective: collective,\n    husky: husky,\n    devDependencies: devDependencies\n};\nvar version = packageJson.version;\nvar fontStore = new _react_pdf_font__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n// We must keep a single renderer instance, otherwise React will complain\nvar renderer;\n// The pdf instance acts as an event emitter for DOM usage.\n// We only want to trigger an update when PDF content changes\nvar events = {};\nvar pdf = function pdf(initialValue) {\n    var onChange = function onChange() {\n        var _events$change;\n        var listeners = ((_events$change = events.change) === null || _events$change === void 0 ? void 0 : _events$change.slice()) || [];\n        for(var i = 0; i < listeners.length; i += 1)listeners[i]();\n    };\n    var container = {\n        type: \"ROOT\",\n        document: null\n    };\n    renderer = renderer || createRenderer({\n        onChange: onChange\n    });\n    var mountNode = renderer.createContainer(container);\n    var updateContainer = function updateContainer(doc, callback) {\n        renderer.updateContainer(doc, mountNode, null, callback);\n    };\n    if (initialValue) updateContainer(initialValue);\n    var render = /*#__PURE__*/ function() {\n        var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee(compress) {\n            var props, pdfVersion, language, pageLayout, pageMode, ctx, layout, fileStream;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee$(_context) {\n                while(1)switch(_context.prev = _context.next){\n                    case 0:\n                        if (compress === void 0) {\n                            compress = true;\n                        }\n                        props = container.document.props || {};\n                        pdfVersion = props.pdfVersion, language = props.language, pageLayout = props.pageLayout, pageMode = props.pageMode;\n                        ctx = new _react_pdf_pdfkit__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n                            compress: compress,\n                            pdfVersion: pdfVersion,\n                            lang: language,\n                            displayTitle: true,\n                            autoFirstPage: false,\n                            pageLayout: pageLayout,\n                            pageMode: pageMode\n                        });\n                        _context.next = 6;\n                        return (0,_react_pdf_layout__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(container.document, fontStore);\n                    case 6:\n                        layout = _context.sent;\n                        fileStream = (0,_react_pdf_render__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(ctx, layout);\n                        return _context.abrupt(\"return\", {\n                            layout: layout,\n                            fileStream: fileStream\n                        });\n                    case 9:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }, _callee);\n        }));\n        return function render(_x) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n    var callOnRender = function callOnRender(params) {\n        if (params === void 0) {\n            params = {};\n        }\n        if (container.document.props.onRender) {\n            container.document.props.onRender(params);\n        }\n    };\n    var toBlob = /*#__PURE__*/ function() {\n        var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee2() {\n            var chunks, _yield$render, _INTERNAL__LAYOUT__DATA_, instance;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee2$(_context2) {\n                while(1)switch(_context2.prev = _context2.next){\n                    case 0:\n                        chunks = [];\n                        _context2.next = 3;\n                        return render();\n                    case 3:\n                        _yield$render = _context2.sent;\n                        _INTERNAL__LAYOUT__DATA_ = _yield$render.layout;\n                        instance = _yield$render.fileStream;\n                        return _context2.abrupt(\"return\", new Promise(function(resolve, reject) {\n                            instance.on(\"data\", function(chunk) {\n                                chunks.push(chunk instanceof Uint8Array ? chunk : new Uint8Array(chunk));\n                            });\n                            instance.on(\"end\", function() {\n                                try {\n                                    var blob = new Blob(chunks, {\n                                        type: \"application/pdf\"\n                                    });\n                                    callOnRender({\n                                        blob: blob,\n                                        _INTERNAL__LAYOUT__DATA_: _INTERNAL__LAYOUT__DATA_\n                                    });\n                                    resolve(blob);\n                                } catch (error) {\n                                    reject(error);\n                                }\n                            });\n                        }));\n                    case 7:\n                    case \"end\":\n                        return _context2.stop();\n                }\n            }, _callee2);\n        }));\n        return function toBlob() {\n            return _ref2.apply(this, arguments);\n        };\n    }();\n    // TODO: rename this method to `toStream` in next major release, because it return stream not a buffer\n    var toBuffer = /*#__PURE__*/ function() {\n        var _ref3 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee3() {\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee3$(_context3) {\n                while(1)switch(_context3.prev = _context3.next){\n                    case 0:\n                        callOnRender();\n                        _context3.next = 3;\n                        return render();\n                    case 3:\n                        return _context3.abrupt(\"return\", _context3.sent.fileStream);\n                    case 4:\n                    case \"end\":\n                        return _context3.stop();\n                }\n            }, _callee3);\n        }));\n        return function toBuffer() {\n            return _ref3.apply(this, arguments);\n        };\n    }();\n    /*\n   * TODO: remove this method in next major release. it is buggy\n   * see\n   * - https://github.com/diegomura/react-pdf/issues/2112\n   * - https://github.com/diegomura/react-pdf/issues/2095\n   */ var toString = /*#__PURE__*/ function() {\n        var _ref4 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee4() {\n            var result, _yield$render2, instance;\n            return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee4$(_context4) {\n                while(1)switch(_context4.prev = _context4.next){\n                    case 0:\n                        if (true) {\n                            console.warn(\"`toString` is deprecated and will be removed in next major release\");\n                        }\n                        result = \"\";\n                        _context4.next = 4;\n                        return render(false);\n                    case 4:\n                        _yield$render2 = _context4.sent;\n                        instance = _yield$render2.fileStream;\n                        return _context4.abrupt(\"return\", new Promise(function(resolve, reject) {\n                            try {\n                                instance.on(\"data\", function(buffer) {\n                                    result += buffer;\n                                });\n                                instance.on(\"end\", function() {\n                                    callOnRender();\n                                    resolve(result);\n                                });\n                            } catch (error) {\n                                reject(error);\n                            }\n                        }));\n                    case 7:\n                    case \"end\":\n                        return _context4.stop();\n                }\n            }, _callee4);\n        }));\n        return function toString() {\n            return _ref4.apply(this, arguments);\n        };\n    }();\n    var on = function on(event, listener) {\n        if (!events[event]) events[event] = [];\n        events[event].push(listener);\n    };\n    var removeListener = function removeListener(event, listener) {\n        if (!events[event]) return;\n        var idx = events[event].indexOf(listener);\n        if (idx > -1) events[event].splice(idx, 1);\n    };\n    return {\n        on: on,\n        container: container,\n        toBlob: toBlob,\n        toBuffer: toBuffer,\n        toString: toString,\n        removeListener: removeListener,\n        updateContainer: updateContainer\n    };\n};\nvar Font = fontStore;\nvar StyleSheet = {\n    create: function create(s) {\n        return s;\n    }\n};\n/**\n * @param {React.ReactElement} element\n * @returns {Promise<NodeJS.ReadableStream>}\n */ var renderToStream = /*#__PURE__*/ function() {\n    var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee(element) {\n        var instance, stream;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee$(_context) {\n            while(1)switch(_context.prev = _context.next){\n                case 0:\n                    instance = pdf(element);\n                    _context.next = 3;\n                    return instance.toBuffer();\n                case 3:\n                    stream = _context.sent;\n                    return _context.abrupt(\"return\", stream);\n                case 5:\n                case \"end\":\n                    return _context.stop();\n            }\n        }, _callee);\n    }));\n    return function renderToStream(_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/**\n * @param {React.ReactElement} element\n * @param {string} filePath\n * @param {Function} [callback]\n */ var renderToFile = /*#__PURE__*/ function() {\n    var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__(/*#__PURE__*/ _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().mark(function _callee2(element, filePath, callback) {\n        var output, stream;\n        return _babel_runtime_helpers_regeneratorRuntime__WEBPACK_IMPORTED_MODULE_2__().wrap(function _callee2$(_context2) {\n            while(1)switch(_context2.prev = _context2.next){\n                case 0:\n                    _context2.next = 2;\n                    return renderToStream(element);\n                case 2:\n                    output = _context2.sent;\n                    stream = fs__WEBPACK_IMPORTED_MODULE_4__.createWriteStream(filePath);\n                    output.pipe(stream);\n                    return _context2.abrupt(\"return\", new Promise(function(resolve, reject) {\n                        stream.on(\"finish\", function() {\n                            if (callback) callback(output, filePath);\n                            resolve(output);\n                        });\n                        stream.on(\"error\", reject);\n                    }));\n                case 6:\n                case \"end\":\n                    return _context2.stop();\n            }\n        }, _callee2);\n    }));\n    return function renderToFile(_x2, _x3, _x4) {\n        return _ref2.apply(this, arguments);\n    };\n}();\n/**\n * @param {React.ReactElement} element\n * @returns {Promise<Buffer>}\n */ var renderToBuffer = function renderToBuffer(element) {\n    return renderToStream(element).then(function(stream) {\n        return new Promise(function(resolve, reject) {\n            var chunks = [];\n            stream.on(\"data\", function(chunk) {\n                return chunks.push(chunk);\n            });\n            stream.on(\"end\", function() {\n                return resolve(buffer__WEBPACK_IMPORTED_MODULE_5__.Buffer.concat(chunks));\n            });\n            stream.on(\"error\", function(error) {\n                return reject(error);\n            });\n        });\n    });\n};\nvar renderToString = function renderToString(element) {\n    if (true) {\n        console.warn(\"`renderToString` is deprecated and will be removed in next major release, use `renderToBuffer` instead\");\n    }\n    return renderToBuffer(element).then(function(buffer) {\n        return buffer.toString();\n    });\n};\nvar throwEnvironmentError = function throwEnvironmentError(name) {\n    throw new Error(name + \" is a web specific API. You're either using this component on Node, or your bundler is not loading react-pdf from the appropriate web build.\");\n};\nvar usePDF = function usePDF() {\n    throwEnvironmentError(\"usePDF\");\n};\nvar PDFViewer = function PDFViewer() {\n    throwEnvironmentError(\"PDFViewer\");\n};\nvar PDFDownloadLink = function PDFDownloadLink() {\n    throwEnvironmentError(\"PDFDownloadLink\");\n};\nvar BlobProvider = function BlobProvider() {\n    throwEnvironmentError(\"BlobProvider\");\n};\nvar render = renderToFile;\n// TODO: remove this default export in next major release because it breaks tree-shacking\nvar index = _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__({\n    pdf: pdf,\n    Font: Font,\n    version: version,\n    StyleSheet: StyleSheet,\n    usePDF: usePDF,\n    PDFViewer: PDFViewer,\n    BlobProvider: BlobProvider,\n    PDFDownloadLink: PDFDownloadLink,\n    renderToStream: renderToStream,\n    renderToString: renderToString,\n    renderToFile: renderToFile,\n    render: render\n}, _react_pdf_primitives__WEBPACK_IMPORTED_MODULE_1__);\n //# sourceMappingURL=react-pdf.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/renderer/lib/react-pdf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@react-pdf/stylesheet/lib/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ resolveStyles),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   processTransform: () => (/* binding */ processTransform),\n/* harmony export */   transformColor: () => (/* binding */ transformColor)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var postcss_value_parser_lib_parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! postcss-value-parser/lib/parse.js */ \"(ssr)/./node_modules/postcss-value-parser/lib/parse.js\");\n/* harmony import */ var postcss_value_parser_lib_unit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! postcss-value-parser/lib/unit.js */ \"(ssr)/./node_modules/postcss-value-parser/lib/unit.js\");\n/* harmony import */ var hsl_to_hex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hsl-to-hex */ \"(ssr)/./node_modules/hsl-to-hex/index.js\");\n/* harmony import */ var color_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! color-string */ \"(ssr)/./node_modules/color-string/index.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var media_engine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! media-engine */ \"(ssr)/./node_modules/media-engine/src/index.js\");\n\n\n\n\n\n\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\nvar flexDefaults = [\n    1,\n    1,\n    0\n];\n/**\n * @type {(number | 'auto')[]}\n */ var flexAuto = [\n    1,\n    1,\n    \"auto\"\n];\nvar expandFlex = function expandFlex(key, value) {\n    /**\n   * @type {(number | 'auto')[]}\n   */ var defaults = flexDefaults;\n    var matches = [];\n    if (value === \"auto\") {\n        defaults = flexAuto;\n    } else {\n        matches = (\"\" + value).split(\" \");\n    }\n    var flexGrow = matches[0] || defaults[0];\n    var flexShrink = matches[1] || defaults[1];\n    var flexBasis = matches[2] || defaults[2];\n    return {\n        flexGrow: flexGrow,\n        flexShrink: flexShrink,\n        flexBasis: flexBasis\n    };\n};\n/* eslint-disable no-plusplus */ var BOX_MODEL_UNITS = \"px,in,mm,cm,pt,%,vw,vh\";\nvar logError = function logError(style, value) {\n    console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + \" \".repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n/**\n * @param {Object} options\n * @param {Function} [options.expandsTo]\n * @param {number} [options.maxValues]\n * @param {boolean} [options.autoSupported]\n */ var expandBoxModel = function expandBoxModel(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp, expandsTo = _ref.expandsTo, _ref$maxValues = _ref.maxValues, maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues, _ref$autoSupported = _ref.autoSupported, autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n    return function(model, value) {\n        var _ref2;\n        var nodes = postcss_value_parser_lib_parse_js__WEBPACK_IMPORTED_MODULE_1__(\"\" + value);\n        var parts = [];\n        for(var i = 0; i < nodes.length; i++){\n            var node = nodes[i];\n            // value contains `calc`, `url` or other css function\n            // `,`, `/` or strings that unsupported by margin and padding\n            if (node.type === \"function\" || node.type === \"string\" || node.type === \"div\") {\n                logError(model, value);\n                return {};\n            }\n            if (node.type === \"word\") {\n                if (node.value === \"auto\" && autoSupported) {\n                    parts.push(node.value);\n                } else {\n                    var result = postcss_value_parser_lib_unit_js__WEBPACK_IMPORTED_MODULE_2__(node.value);\n                    // when unit isn't specified this condition is true\n                    if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n                        parts.push(node.value);\n                    } else {\n                        logError(model, value);\n                        return {};\n                    }\n                }\n            }\n        }\n        // checks that we have enough parsed values\n        if (parts.length > maxValues) {\n            logError(model, value);\n            return {};\n        }\n        var first = parts[0];\n        if (expandsTo) {\n            var second = parts[1] || parts[0];\n            var third = parts[2] || parts[0];\n            var fourth = parts[3] || parts[1] || parts[0];\n            return expandsTo({\n                first: first,\n                second: second,\n                third: third,\n                fourth: fourth\n            });\n        }\n        return _ref2 = {}, _ref2[model] = first, _ref2;\n    };\n};\nvar processMargin = expandBoxModel({\n    expandsTo: function expandsTo(_ref) {\n        var first = _ref.first, second = _ref.second, third = _ref.third, fourth = _ref.fourth;\n        return {\n            marginTop: first,\n            marginRight: second,\n            marginBottom: third,\n            marginLeft: fourth\n        };\n    },\n    maxValues: 4,\n    autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n    expandsTo: function expandsTo(_ref2) {\n        var first = _ref2.first, second = _ref2.second;\n        return {\n            marginTop: first,\n            marginBottom: second\n        };\n    },\n    maxValues: 2,\n    autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n    expandsTo: function expandsTo(_ref3) {\n        var first = _ref3.first, second = _ref3.second;\n        return {\n            marginRight: first,\n            marginLeft: second\n        };\n    },\n    maxValues: 2,\n    autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n    autoSupported: true\n});\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n    return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\nvar expandBorders = function expandBorders(key, value) {\n    var match = matchBorderShorthand(\"\" + value);\n    if (match) {\n        var color = match[5] || value;\n        var style = match[4] || value;\n        var width = match[1] || value;\n        if (key.match(/(Top|Right|Bottom|Left)$/)) {\n            var _ref;\n            return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n        }\n        if (key.match(/Color$/)) {\n            return {\n                borderTopColor: color,\n                borderRightColor: color,\n                borderBottomColor: color,\n                borderLeftColor: color\n            };\n        }\n        if (key.match(/Style$/)) {\n            return {\n                borderTopStyle: style,\n                borderRightStyle: style,\n                borderBottomStyle: style,\n                borderLeftStyle: style\n            };\n        }\n        if (key.match(/Width$/)) {\n            return {\n                borderTopWidth: width,\n                borderRightWidth: width,\n                borderBottomWidth: width,\n                borderLeftWidth: width\n            };\n        }\n        if (key.match(/Radius$/)) {\n            return {\n                borderTopLeftRadius: value,\n                borderTopRightRadius: value,\n                borderBottomRightRadius: value,\n                borderBottomLeftRadius: value\n            };\n        }\n        return {\n            borderTopColor: color,\n            borderTopStyle: style,\n            borderTopWidth: width,\n            borderRightColor: color,\n            borderRightStyle: style,\n            borderRightWidth: width,\n            borderBottomColor: color,\n            borderBottomStyle: style,\n            borderBottomWidth: width,\n            borderLeftColor: color,\n            borderLeftStyle: style,\n            borderLeftWidth: width\n        };\n    }\n    return value;\n};\nvar processPadding = expandBoxModel({\n    expandsTo: function expandsTo(_ref) {\n        var first = _ref.first, second = _ref.second, third = _ref.third, fourth = _ref.fourth;\n        return {\n            paddingTop: first,\n            paddingRight: second,\n            paddingBottom: third,\n            paddingLeft: fourth\n        };\n    },\n    maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n    expandsTo: function expandsTo(_ref2) {\n        var first = _ref2.first, second = _ref2.second;\n        return {\n            paddingTop: first,\n            paddingBottom: second\n        };\n    },\n    maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n    expandsTo: function expandsTo(_ref3) {\n        var first = _ref3.first, second = _ref3.second;\n        return {\n            paddingRight: first,\n            paddingLeft: second\n        };\n    },\n    maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n    var match = (\"\" + value).split(\" \");\n    return {\n        objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n        objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n    };\n};\nvar Y_AXIS_SHORTHANDS = {\n    top: true,\n    bottom: true\n};\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n    if (Y_AXIS_SHORTHANDS[a]) return 1;\n    if (Y_AXIS_SHORTHANDS[b]) return -1;\n    return 0;\n};\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n    if (!values || values.length === 0) return [\n        \"center\",\n        \"center\"\n    ];\n    var pair = values.length === 1 ? [\n        values[0],\n        \"center\"\n    ] : values;\n    return pair.sort(sortTransformOriginPair);\n};\n// Transforms shorthand transformOrigin values\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n    var match = (\"\" + value).split(\" \");\n    var pair = getTransformOriginPair(match);\n    return {\n        transformOriginX: pair[0],\n        transformOriginY: pair[1]\n    };\n};\nvar expandGap = function expandGap(key, value) {\n    var match = (\"\" + value).split(\" \");\n    return {\n        rowGap: (match === null || match === void 0 ? void 0 : match[0]) || value,\n        columnGap: (match === null || match === void 0 ? void 0 : match[1]) || value\n    };\n};\nvar shorthands = {\n    flex: expandFlex,\n    gap: expandGap,\n    margin: processMargin,\n    marginHorizontal: processMarginHorizontal,\n    marginVertical: processMarginVertical,\n    marginTop: processMarginSingle,\n    marginRight: processMarginSingle,\n    marginBottom: processMarginSingle,\n    marginLeft: processMarginSingle,\n    padding: processPadding,\n    paddingHorizontal: processPaddingHorizontal,\n    paddingVertical: processPaddingVertical,\n    paddingTop: processPaddingSingle,\n    paddingRight: processPaddingSingle,\n    paddingBottom: processPaddingSingle,\n    paddingLeft: processPaddingSingle,\n    border: expandBorders,\n    borderTop: expandBorders,\n    borderRight: expandBorders,\n    borderBottom: expandBorders,\n    borderLeft: expandBorders,\n    borderColor: expandBorders,\n    borderRadius: expandBorders,\n    borderStyle: expandBorders,\n    borderWidth: expandBorders,\n    objectPosition: expandObjectPosition,\n    transformOrigin: expandTransformOrigin\n};\n/**\n * Transforms style key-value\n *\n * @param {string} key style key\n * @param {string} value style value\n * @returns {string | Number} transformed style values\n */ var expandStyle = function expandStyle(key, value) {\n    var _ref;\n    return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n/**\n * Expand the shorthand properties.\n *\n * @param {Object} style object\n * @returns {Object} expanded style object\n */ var expand = function expand(style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n    for(var i = 0; i < propsArray.length; i += 1){\n        var key = propsArray[i];\n        var value = style[key];\n        var extended = expandStyle(key, value);\n        var keys = Object.keys(extended);\n        for(var j = 0; j < keys.length; j += 1){\n            var propName = keys[j];\n            var propValue = extended[propName];\n            resolvedStyle[propName] = propValue;\n        }\n    }\n    return resolvedStyle;\n};\n/**\n * Remove nil values from array\n *\n * @template T\n * @param {(T | null | undefined)[]} array\n * @returns {T[]} array without nils\n */ var compact = function compact(array) {\n    return array.filter(Boolean);\n};\n/**\n * Merges style objects array\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} merged style object\n */ var mergeStyles = function mergeStyles(styles) {\n    return styles.reduce(function(acc, style) {\n        var s = Array.isArray(style) ? flatten(style) : style;\n        Object.keys(s).forEach(function(key) {\n            if (s[key] !== null && s[key] !== undefined) {\n                acc[key] = s[key];\n            }\n        });\n        return acc;\n    }, {});\n};\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} flattened style object\n */ var flatten = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(mergeStyles, compact, _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.castArray);\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {string} value scalar value\n * @returns {Object} parsed value\n */ var parseValue = function parseValue(value) {\n    var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n    return match ? {\n        value: parseFloat(match[1]),\n        unit: match[2] || \"pt\"\n    } : {\n        value: value,\n        unit: undefined\n    };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {string} value styles value\n * @returns {Object} transformed value\n */ var transformUnit = function transformUnit(container, value) {\n    var scalar = parseValue(value);\n    var dpi = container.dpi || 72;\n    var mmFactor = 1 / 25.4 * dpi;\n    var cmFactor = 1 / 2.54 * dpi;\n    switch(scalar.unit){\n        case \"in\":\n            return scalar.value * dpi;\n        case \"mm\":\n            return scalar.value * mmFactor;\n        case \"cm\":\n            return scalar.value * cmFactor;\n        case \"vh\":\n            return scalar.value * (container.height / 100);\n        case \"vw\":\n            return scalar.value * (container.width / 100);\n        default:\n            return scalar.value;\n    }\n};\nvar isRgb = function isRgb(value) {\n    return /rgba?/g.test(value);\n};\nvar isHsl = function isHsl(value) {\n    return /hsla?/g.test(value);\n};\n/**\n * Transform rgb color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */ var parseRgb = function parseRgb(value) {\n    var rgb = color_string__WEBPACK_IMPORTED_MODULE_4__.get.rgb(value);\n    return color_string__WEBPACK_IMPORTED_MODULE_4__.to.hex(rgb);\n};\n/**\n * Transform Hsl color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */ var parseHsl = function parseHsl(value) {\n    var hsl = color_string__WEBPACK_IMPORTED_MODULE_4__.get.hsl(value).map(Math.round);\n    var hex = hsl_to_hex__WEBPACK_IMPORTED_MODULE_3__.apply(void 0, hsl);\n    return hex.toUpperCase();\n};\n/**\n * Transform given color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */ var transformColor = function transformColor(value) {\n    if (isRgb(value)) return parseRgb(value);\n    if (isHsl(value)) return parseHsl(value);\n    return value;\n};\nvar parse = function parse(transformString) {\n    var transforms = transformString.trim().split(/\\) |\\)/);\n    // Handle \"initial\", \"inherit\", \"unset\".\n    if (transforms.length === 1) {\n        return [\n            [\n                transforms[0],\n                true\n            ]\n        ];\n    }\n    var parsed = [];\n    for(var i = 0; i < transforms.length; i += 1){\n        var transform = transforms[i];\n        if (transform) {\n            var _transform$split = transform.split(\"(\"), name = _transform$split[0], rawValue = _transform$split[1];\n            var splitChar = rawValue.indexOf(\",\") >= 0 ? \",\" : \" \";\n            var value = rawValue.split(splitChar).map(function(val) {\n                return val.trim();\n            });\n            parsed.push({\n                operation: name,\n                value: value\n            });\n        }\n    }\n    return parsed;\n};\nvar parseAngle = function parseAngle(value) {\n    var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n    var _unitsRegexp$exec = unitsRegexp.exec(value), angle = _unitsRegexp$exec[1], unit = _unitsRegexp$exec[2];\n    var number = Number.parseFloat(angle);\n    return unit === \"rad\" ? number * 180 / Math.PI : number;\n};\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n    var operation = _ref.operation, value = _ref.value;\n    switch(operation){\n        case \"scale\":\n            {\n                var _value$map = value.map(function(num) {\n                    return Number.parseFloat(num);\n                }), scaleX = _value$map[0], _value$map$ = _value$map[1], scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n                return {\n                    operation: \"scale\",\n                    value: [\n                        scaleX,\n                        scaleY\n                    ]\n                };\n            }\n        case \"scaleX\":\n            {\n                return {\n                    operation: \"scale\",\n                    value: [\n                        Number.parseFloat(value),\n                        1\n                    ]\n                };\n            }\n        case \"scaleY\":\n            {\n                return {\n                    operation: \"scale\",\n                    value: [\n                        1,\n                        Number.parseFloat(value)\n                    ]\n                };\n            }\n        case \"rotate\":\n            {\n                return {\n                    operation: \"rotate\",\n                    value: [\n                        parseAngle(value)\n                    ]\n                };\n            }\n        case \"translate\":\n            {\n                return {\n                    operation: \"translate\",\n                    value: value.map(function(num) {\n                        return Number.parseFloat(num);\n                    })\n                };\n            }\n        case \"translateX\":\n            {\n                return {\n                    operation: \"translate\",\n                    value: [\n                        Number.parseFloat(value),\n                        0\n                    ]\n                };\n            }\n        case \"translateY\":\n            {\n                return {\n                    operation: \"translate\",\n                    value: [\n                        0,\n                        Number.parseFloat(value)\n                    ]\n                };\n            }\n        case \"skew\":\n            {\n                return {\n                    operation: \"skew\",\n                    value: value.map(parseAngle)\n                };\n            }\n        case \"skewX\":\n            {\n                return {\n                    operation: \"skew\",\n                    value: [\n                        parseAngle(value),\n                        0\n                    ]\n                };\n            }\n        case \"skewY\":\n            {\n                return {\n                    operation: \"skew\",\n                    value: [\n                        0,\n                        parseAngle(value)\n                    ]\n                };\n            }\n        default:\n            {\n                return {\n                    operation: operation,\n                    value: value.map(function(num) {\n                        return Number.parseFloat(num);\n                    })\n                };\n            }\n    }\n};\nvar normalize = function normalize(operations) {\n    return operations.map(function(operation) {\n        return normalizeTransformOperation(operation);\n    });\n};\nvar processTransform = function processTransform(value) {\n    if (typeof value !== \"string\") return value;\n    return normalize(parse(value));\n};\nvar FONT_WEIGHTS = {\n    thin: 100,\n    hairline: 100,\n    ultralight: 200,\n    extralight: 200,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    demibold: 600,\n    bold: 700,\n    ultrabold: 800,\n    extrabold: 800,\n    heavy: 900,\n    black: 900\n};\nvar processFontWeight = function processFontWeight(value) {\n    if (!value) return FONT_WEIGHTS.normal;\n    if (typeof value === \"number\") return value;\n    var lv = value.toLowerCase();\n    if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n    return value;\n};\nvar matchNumber = function matchNumber(value) {\n    return typeof value === \"string\" && /^-?\\d*\\.?\\d*$/.test(value);\n};\nvar castFloat = function castFloat(value) {\n    if (typeof value !== \"string\") return value;\n    if (matchNumber(value)) return parseFloat(value);\n    return value;\n};\nvar offsetKeyword = function offsetKeyword(value) {\n    switch(value){\n        case \"top\":\n        case \"left\":\n            return \"0%\";\n        case \"right\":\n        case \"bottom\":\n            return \"100%\";\n        case \"center\":\n            return \"50%\";\n        default:\n            return null;\n    }\n};\nvar transformObjectPosition = function transformObjectPosition(value) {\n    return offsetKeyword(value) || castFloat(value);\n};\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n    return offsetKeyword(value) || castFloat(value);\n};\nvar handlers = {\n    transform: processTransform,\n    fontWeight: processFontWeight,\n    objectPositionX: transformObjectPosition,\n    objectPositionY: transformObjectPosition,\n    transformOriginX: transformTransformOrigin,\n    transformOriginY: transformTransformOrigin\n};\nvar transformStyle = function transformStyle(key, value, container) {\n    var result = handlers[key] ? handlers[key](value) : value;\n    return transformColor(transformUnit(container, castFloat(result)));\n};\n/**\n * @typedef {Function} Transform\n * @param {Object} style styles object\n * @returns {Object} transformed styles\n */ /**\n * Transform styles values\n *\n * @param {Object} container\n * @returns {Transform} transform function\n */ var transform = function transform(container) {\n    return function(style) {\n        if (!style) return style;\n        var propsArray = Object.keys(style);\n        var resolvedStyle = {};\n        for(var i = 0; i < propsArray.length; i += 1){\n            var key = propsArray[i];\n            var value = style[key];\n            var transformed = transformStyle(key, value, container);\n            resolvedStyle[key] = transformed;\n        }\n        return resolvedStyle;\n    };\n};\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */ var resolveMediaQueries = function resolveMediaQueries(container, styles) {\n    return Object.keys(styles).reduce(function(acc, key) {\n        var _extends2;\n        if (/@media/.test(key)) {\n            var _matchMedia;\n            return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__({}, acc, media_engine__WEBPACK_IMPORTED_MODULE_6__((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n        }\n        return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n    }, {});\n};\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */ var resolveStyles = function resolveStyles(container, style) {\n    var computeMediaQueries = function computeMediaQueries(value) {\n        return resolveMediaQueries(container, value);\n    };\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(transform(container), expand, computeMediaQueries, flatten)(style);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/stylesheet/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js":
/*!********************************************************!*\
  !*** ./node_modules/@react-pdf/textkit/lib/textkit.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ layoutEngine),\n/* harmony export */   fontSubstitution: () => (/* binding */ fontSubstitution),\n/* harmony export */   justification: () => (/* binding */ justification),\n/* harmony export */   linebreaker: () => (/* binding */ linebreaker),\n/* harmony export */   scriptItemizer: () => (/* binding */ scriptItemizer),\n/* harmony export */   textDecoration: () => (/* binding */ textDecoration),\n/* harmony export */   wordHyphenation: () => (/* binding */ wordHyphenation)\n/* harmony export */ });\n/* harmony import */ var _react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-pdf/fns */ \"(ssr)/./node_modules/@react-pdf/fns/lib/index.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createForOfIteratorHelperLoose */ \"(ssr)/./node_modules/@babel/runtime/helpers/createForOfIteratorHelperLoose.js\");\n/* harmony import */ var unicode_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! unicode-properties */ \"(ssr)/./node_modules/unicode-properties/dist/module.mjs\");\n/* harmony import */ var hyphen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hyphen */ \"(ssr)/./node_modules/hyphen/index.js\");\n/* harmony import */ var hyphen_patterns_en_us_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! hyphen/patterns/en-us.js */ \"(ssr)/./node_modules/hyphen/patterns/en-us.js\");\n\n\n\n\n\n\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */ var fromFragments = function fromFragments(fragments) {\n    var offset = 0;\n    var string = \"\";\n    var runs = [];\n    fragments.forEach(function(fragment) {\n        string += fragment.string;\n        runs.push({\n            start: offset,\n            end: offset + fragment.string.length,\n            attributes: fragment.attributes || {}\n        });\n        offset += fragment.string.length;\n    });\n    return {\n        string: string,\n        runs: runs\n    };\n};\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param  {String} word\n * @return {Array} same word\n */ var defaultHyphenationEngine = function defaultHyphenationEngine(word) {\n    return [\n        word\n    ];\n};\n/**\n * Wrap words of attribute string\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string including syllables\n */ var wrapWords = function wrapWords(engines, options) {\n    if (engines === void 0) {\n        engines = {};\n    }\n    if (options === void 0) {\n        options = {};\n    }\n    return function(attributedString) {\n        var _engines$wordHyphenat, _engines;\n        var syllables = [];\n        var fragments = [];\n        var hyphenateWord = options.hyphenationCallback || ((_engines$wordHyphenat = (_engines = engines).wordHyphenation) === null || _engines$wordHyphenat === void 0 ? void 0 : _engines$wordHyphenat.call(_engines, options)) || defaultHyphenationEngine;\n        for(var i = 0; i < attributedString.runs.length; i += 1){\n            var string = \"\";\n            var run = attributedString.runs[i];\n            var words = attributedString.string.slice(run.start, run.end).split(/([ ]+)/g).filter(Boolean);\n            for(var j = 0; j < words.length; j += 1){\n                var word = words[j];\n                var parts = hyphenateWord(word);\n                syllables.push.apply(syllables, parts);\n                string += parts.join(\"\");\n            }\n            fragments.push({\n                string: string,\n                attributes: run.attributes\n            });\n        }\n        return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__({}, fromFragments(fragments), {\n            syllables: syllables\n        });\n    };\n};\n/**\n * Clone rect\n *\n * @param  {Object}  rect\n * @return {Object} cloned rect\n */ var copy = function copy(rect) {\n    return Object.assign({}, rect);\n};\nvar partition = function partition(rect, height) {\n    var a = Object.assign({}, rect, {\n        height: height\n    });\n    var b = Object.assign({}, rect, {\n        y: rect.y + height,\n        height: rect.height - height\n    });\n    return [\n        a,\n        b\n    ];\n};\n/**\n * Crop upper section of rect\n *\n * @param  {Object}  rect\n * @return {Object} cropped rect\n */ var crop = function crop(height, rect) {\n    var _partition = partition(rect, height), result = _partition[1];\n    return result;\n};\n/**\n * Get paragraph block height\n *\n * @param  {Object}  paragraph block\n * @return {number} paragraph block height\n */ var height$2 = function height(paragraph) {\n    return paragraph.reduce(function(acc, block) {\n        return acc + block.box.height;\n    }, 0);\n};\n/**\n * Calculate run scale\n *\n * @param  {Object}  run\n * @return {number} scale\n */ var calculateScale = function calculateScale(run) {\n    var _attributes$font;\n    var attributes = run.attributes || {};\n    var fontSize = attributes.fontSize || 12;\n    var unitsPerEm = (_attributes$font = attributes.font) === null || _attributes$font === void 0 ? void 0 : _attributes$font.unitsPerEm;\n    return unitsPerEm ? fontSize / unitsPerEm : 0;\n};\n/**\n * Get run scale\n *\n * @param  {Object}  run\n * @return {number} scale\n */ var scale = function scale(run) {\n    var _run$attributes;\n    return ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : _run$attributes.scale) || calculateScale(run);\n};\n/**\n * Get ligature offset by index\n *\n * Ex. ffi ligature\n *\n *   glyphs:         l  o  f  f  i  m\n *   glyphIndices:   0  1  2  2  2  3\n *   offset:         0  0  0  1  2  0\n *\n * @param  {number}  index\n * @param  {Object}  run\n * @return {number} ligature offset\n */ var offset = function offset(index, run) {\n    if (!run) return 0;\n    var glyphIndices = run.glyphIndices || [];\n    var value = glyphIndices[index];\n    return glyphIndices.slice(0, index).filter(function(i) {\n        return i === value;\n    }).length;\n};\n/**\n * Get run font\n *\n * @param  {Object}  run\n * @return {Object} font\n */ var getFont = function getFont(run) {\n    var _run$attributes;\n    return ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : _run$attributes.font) || null;\n};\n/**\n * Slice glyph between codePoints range\n * Util for breaking ligatures\n *\n * @param  {number}  start code point index\n * @param  {number}  end code point index\n * @param  {Object}  font to generate new glyph\n * @param  {Object} glyph to be sliced\n * @return {Array} sliced glyph parts\n */ var slice$2 = function slice(start, end, font, glyph) {\n    if (!glyph) return [];\n    if (start === end) return [];\n    if (start === 0 && end === glyph.codePoints.length) return [\n        glyph\n    ];\n    var codePoints = glyph.codePoints.slice(start, end);\n    var string = String.fromCodePoint.apply(String, codePoints);\n    return font ? font.layout(string).glyphs : [\n        glyph\n    ];\n};\n/**\n * Return glyph index at string index, if glyph indices present.\n * Otherwise return string index\n *\n * @param  {number}  string index\n * @param  {Object}  run\n * @return {number}  glyph index\n */ var glyphIndexAt = function glyphIndexAt(index, run) {\n    var _run$glyphIndices;\n    var result = run === null || run === void 0 ? void 0 : (_run$glyphIndices = run.glyphIndices) === null || _run$glyphIndices === void 0 ? void 0 : _run$glyphIndices[index];\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(result) ? index : result;\n};\n/**\n * Returns new array starting with zero, and keeping same relation between consecutive values\n *\n * @param  {Array[number]}  list\n * @return {boolean} normalized array\n */ var normalize = function normalize(array) {\n    var head = array[0];\n    return array.map(function(value) {\n        return value - head;\n    });\n};\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */ var slice$1 = function slice(start, end, run) {\n    var _run$glyphs, _run$glyphs2;\n    var runScale = scale(run);\n    var font = getFont(run);\n    // Get glyph start and end indices\n    var startIndex = glyphIndexAt(start, run);\n    var endIndex = glyphIndexAt(end, run);\n    // Get start and end glyph\n    var startGlyph = (_run$glyphs = run.glyphs) === null || _run$glyphs === void 0 ? void 0 : _run$glyphs[startIndex];\n    var endGlyph = (_run$glyphs2 = run.glyphs) === null || _run$glyphs2 === void 0 ? void 0 : _run$glyphs2[endIndex];\n    // Get start ligature chunks (if any)\n    var startOffset = offset(start, run);\n    var startGlyphs = startOffset > 0 ? slice$2(startOffset, Infinity, font, startGlyph) : [];\n    // Get end ligature chunks (if any)\n    var endOffset = offset(end, run);\n    var endGlyphs = slice$2(0, endOffset, font, endGlyph);\n    // Compute new glyphs\n    var sliceStart = startIndex + Math.min(1, startOffset);\n    var glyphs = (run.glyphs || []).slice(sliceStart, endIndex);\n    // Compute new positions\n    var glyphPosition = function glyphPosition(g) {\n        return {\n            xAdvance: g.advanceWidth * runScale\n        };\n    };\n    var startPositions = startGlyphs.map(glyphPosition);\n    var positions = (run.positions || []).slice(sliceStart, endIndex);\n    var endPositions = endGlyphs.map(glyphPosition);\n    return Object.assign({}, run, {\n        start: run.start + start,\n        end: Math.min(run.end, run.start + end),\n        glyphIndices: normalize((run.glyphIndices || []).slice(start, end)),\n        glyphs: [\n            startGlyphs,\n            glyphs,\n            endGlyphs\n        ].flat(),\n        positions: [\n            startPositions,\n            positions,\n            endPositions\n        ].flat()\n    });\n};\n/**\n * Get run index that contains passed index\n *\n * @param  {number}  char index\n * @param  {Array}  runs array\n * @return {Array} run index\n */ var runIndexAt$1 = function runIndexAt(n, runs) {\n    if (!runs) return -1;\n    return runs.findIndex(function(run) {\n        return run.start <= n && n < run.end;\n    });\n};\n/**\n * Filter runs contained between start and end\n *\n * @param  {number}  start\n * @param  {number}  end\n * @param  {Array}  runs\n * @return {boolean} filtered runs\n */ var filter = function filter(start, end, runs) {\n    var startIndex = runIndexAt$1(start, runs);\n    var endIndex = Math.max(runIndexAt$1(end - 1, runs), startIndex);\n    return runs.slice(startIndex, endIndex + 1);\n};\n/**\n * Subtract scalar to run\n *\n * @param  {number}  scalar\n * @param  {Object}  run\n * @return {Object} subtracted run\n */ var subtract = function subtract(n, run) {\n    var start = run.start - n;\n    var end = run.end - n;\n    return Object.assign({}, run, {\n        start: start,\n        end: end\n    });\n};\n/**\n * Slice array of runs\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Array}  runs\n * @return {Array} sliced runs\n */ var sliceRuns = function sliceRuns(start, end, runs) {\n    var sliceFirstRun = function sliceFirstRun(a) {\n        return slice$1(start - a.start, end - a.start, a);\n    };\n    var sliceLastRun = function sliceLastRun(a) {\n        return slice$1(0, end - a.start, a);\n    };\n    return runs.map(function(run, i) {\n        var result = run;\n        var isFirst = i === 0;\n        var isLast = !isFirst && i === runs.length - 1;\n        if (isFirst) result = sliceFirstRun(run);\n        if (isLast) result = sliceLastRun(run);\n        return subtract(start, result);\n    });\n};\n/**\n * Slice attributed string between two indices\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {Object} attributedString\n */ var slice = function slice(start, end, attributedString) {\n    if (attributedString.string.length === 0) return attributedString;\n    var string = attributedString.string.slice(start, end);\n    var filteredRuns = filter(start, end, attributedString.runs);\n    var slicedRuns = sliceRuns(start, end, filteredRuns);\n    return Object.assign({}, attributedString, {\n        string: string,\n        runs: slicedRuns\n    });\n};\nvar findCharIndex = function findCharIndex(string) {\n    return string.search(/\\S/g);\n};\nvar findLastCharIndex = function findLastCharIndex(string) {\n    var match = string.match(/\\S/g);\n    return match ? string.lastIndexOf(match[match.length - 1]) : -1;\n};\n/**\n * Removes (strips) whitespace from both ends of the attributted string.\n *\n * @param  {Object}  attributedString\n * @return {Object} attributedString\n */ var trim = function trim(attributedString) {\n    var start = findCharIndex(attributedString.string);\n    var end = findLastCharIndex(attributedString.string);\n    return slice(start, end + 1, attributedString);\n};\n/**\n * Returns empty run\n *\n * @return {Object} empty run\n */ var empty$1 = function empty() {\n    return {\n        start: 0,\n        end: 0,\n        glyphIndices: [],\n        glyphs: [],\n        positions: [],\n        attributes: {}\n    };\n};\nvar isNumber = function isNumber(value) {\n    return typeof value === \"number\";\n};\n/**\n * Append glyph indices with given length\n *\n * Ex. appendIndices(3, [0, 1, 2, 2]) => [0, 1, 2, 2, 3, 3, 3]\n *\n * @param  {number}  length\n * @param  {Array}  glyph indices\n * @return {Array}  extended glyph indices\n */ var appendIndices = function appendIndices(length, indices) {\n    var lastIndex = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(indices);\n    var value = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(lastIndex) ? 0 : lastIndex + 1;\n    var newIndices = Array(length).fill(value);\n    return indices.concat(newIndices);\n};\n/**\n * Get glyph for a given code point\n *\n * @param  {number}  codePoint\n * @param  {Object}  font\n * @return {Object}  glyph\n * */ var fromCodePoint = function fromCodePoint(value, font) {\n    return font && value ? font.glyphForCodePoint(value) : null;\n};\n/**\n * Append glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */ var appendGlyph = function appendGlyph(glyph, run) {\n    var _glyph$codePoints;\n    var glyphLength = ((_glyph$codePoints = glyph.codePoints) === null || _glyph$codePoints === void 0 ? void 0 : _glyph$codePoints.length) || 0;\n    var end = run.end + glyphLength;\n    var glyphs = run.glyphs.concat(glyph);\n    var glyphIndices = appendIndices(glyphLength, run.glyphIndices);\n    if (!run.positions) return Object.assign({}, run, {\n        end: end,\n        glyphs: glyphs,\n        glyphIndices: glyphIndices\n    });\n    var positions = run.positions.concat({\n        xAdvance: glyph.advanceWidth * scale(run)\n    });\n    return Object.assign({}, run, {\n        end: end,\n        glyphs: glyphs,\n        glyphIndices: glyphIndices,\n        positions: positions\n    });\n};\n/**\n * Append glyph or code point to run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */ var append$1 = function append(value, run) {\n    if (!value) return run;\n    var font = getFont(run);\n    var glyph = isNumber(value) ? fromCodePoint(value, font) : value;\n    return appendGlyph(glyph, run);\n};\n/**\n * Get string from array of code points\n *\n * @param {Array} code points\n * @return {String} string\n */ var stringFromCodePoints = function stringFromCodePoints(codePoints) {\n    return String.fromCodePoint.apply(String, codePoints);\n};\n/**\n * Append glyph into last run of attributed string\n *\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */ var append = function append(glyph, attributedString) {\n    var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [];\n    var codePointsString = stringFromCodePoints(codePoints);\n    var string = attributedString.string + codePointsString;\n    var firstRuns = attributedString.runs.slice(0, -1);\n    var lastRun = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(attributedString.runs) || empty$1();\n    var runs = firstRuns.concat(append$1(glyph, lastRun));\n    return Object.assign({}, attributedString, {\n        string: string,\n        runs: runs\n    });\n};\nvar ELLIPSIS_UNICODE = 8230;\nvar ELLIPSIS_STRING = String.fromCharCode(ELLIPSIS_UNICODE);\n/**\n * Get ellipsis codepoint. This may be different in standard and embedded fonts\n *\n * @param  {number}  font\n * @return {Object} ellipsis codepoint\n */ var getEllipsisCodePoint = function getEllipsisCodePoint(font) {\n    if (!font.encode) return ELLIPSIS_UNICODE;\n    var _font$encode = font.encode(ELLIPSIS_STRING), codePoints = _font$encode[0];\n    return parseInt(codePoints[0], 16);\n};\n/**\n * Trucante block with ellipsis\n *\n * @param  {number}  lines quantity\n * @param  {Object}  paragraph block\n * @return {Object} sliced paragraph block\n */ var truncate = function truncate(block) {\n    var _last, _last2, _last2$attributes;\n    var runs = ((_last = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(block)) === null || _last === void 0 ? void 0 : _last.runs) || [];\n    var font = (_last2 = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs)) === null || _last2 === void 0 ? void 0 : (_last2$attributes = _last2.attributes) === null || _last2$attributes === void 0 ? void 0 : _last2$attributes.font;\n    if (font) {\n        var _Object$assign;\n        var index = block.length - 1;\n        var codePoint = getEllipsisCodePoint(font);\n        var glyph = font.glyphForCodePoint(codePoint);\n        var lastBlock = append(glyph, trim(block[index]));\n        return Object.assign([], block, (_Object$assign = {}, _Object$assign[index] = lastBlock, _Object$assign));\n    }\n    return block;\n};\n/**\n * Omit attribute from run\n *\n * @param  {Object}  run\n * @return {Object} run without ommited attribute\n */ var omit = function omit(value, run) {\n    var attributes = Object.assign({}, run.attributes);\n    delete attributes[value];\n    return Object.assign({}, run, {\n        attributes: attributes\n    });\n};\n/**\n * Get run ascent\n *\n * @param  {Object}  run\n * @return {boolean} ascent\n */ var ascent$1 = function ascent(run) {\n    var _run$attributes, _run$attributes$attac, _run$attributes2, _run$attributes2$font;\n    var attachmentHeight = ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : (_run$attributes$attac = _run$attributes.attachment) === null || _run$attributes$attac === void 0 ? void 0 : _run$attributes$attac.height) || 0;\n    var fontAscent = ((_run$attributes2 = run.attributes) === null || _run$attributes2 === void 0 ? void 0 : (_run$attributes2$font = _run$attributes2.font) === null || _run$attributes2$font === void 0 ? void 0 : _run$attributes2$font.ascent) || 0;\n    return Math.max(attachmentHeight, fontAscent * scale(run));\n};\n/**\n * Get run descent\n *\n * @param  {Object}  run\n * @return {number} descent\n */ var descent = function descent(run) {\n    var _run$attributes, _run$attributes$font;\n    var fontDescent = ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : (_run$attributes$font = _run$attributes.font) === null || _run$attributes$font === void 0 ? void 0 : _run$attributes$font.descent) || 0;\n    return scale(run) * fontDescent;\n};\n/**\n * Get run lineGap\n *\n * @param  {Object}  run\n * @return {number} lineGap\n */ var lineGap = function lineGap(run) {\n    var _run$attributes, _run$attributes$font;\n    return (((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : (_run$attributes$font = _run$attributes.font) === null || _run$attributes$font === void 0 ? void 0 : _run$attributes$font.lineGap) || 0) * scale(run);\n};\n/**\n * Get run height\n *\n * @param  {Object}  run\n * @return {number} height\n */ var height$1 = function height(run) {\n    var _run$attributes;\n    var lineHeight = (_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : _run$attributes.lineHeight;\n    return lineHeight || lineGap(run) + ascent$1(run) - descent(run);\n};\n/**\n * Returns attributed string height\n *\n * @param {Object} attributed string\n * @return {number} height\n */ var height = function height(attributeString) {\n    var reducer = function reducer(acc, run) {\n        return Math.max(acc, height$1(run));\n    };\n    return attributeString.runs.reduce(reducer, 0);\n};\n/**\n * Checks if two rects intersect each other\n *\n * @param {Rect} a\n * @param {Rect} b\n * @returns {Boolean} rects intersects\n */ var intersects = function intersects(a, b) {\n    var x = Math.max(a.x, b.x);\n    var num1 = Math.min(a.x + a.width, b.x + b.width);\n    var y = Math.max(a.y, b.y);\n    var num2 = Math.min(a.y + a.height, b.y + b.height);\n    return num1 >= x && num2 >= y;\n};\nvar _excluded = [\n    \"excludeRects\"\n];\nvar getLineFragment = function getLineFragment(lineRect, excludeRect) {\n    if (!intersects(excludeRect, lineRect)) return [\n        lineRect\n    ];\n    var eStart = excludeRect.x;\n    var eEnd = excludeRect.x + excludeRect.width;\n    var lStart = lineRect.x;\n    var lEnd = lineRect.x + lineRect.width;\n    var a = Object.assign({}, lineRect, {\n        width: eStart - lStart\n    });\n    var b = Object.assign({}, lineRect, {\n        x: eEnd,\n        width: lEnd - eEnd\n    });\n    return [\n        a,\n        b\n    ].filter(function(r) {\n        return r.width > 0;\n    });\n};\nvar getLineFragments = function getLineFragments(rect, excludeRects) {\n    var fragments = [\n        rect\n    ];\n    var _loop = function _loop() {\n        var excludeRect = excludeRects[i];\n        fragments = fragments.reduce(function(acc, fragment) {\n            var pieces = getLineFragment(fragment, excludeRect);\n            return acc.concat(pieces);\n        }, []);\n    };\n    for(var i = 0; i < excludeRects.length; i += 1){\n        _loop();\n    }\n    return fragments;\n};\nvar generateLineRects = function generateLineRects(container, height) {\n    var excludeRects = container.excludeRects, rect = _babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__(container, _excluded);\n    if (!excludeRects) return [\n        rect\n    ];\n    var lineRects = [];\n    var maxY = Math.max.apply(Math, excludeRects.map(function(r) {\n        return r.y + r.height;\n    }));\n    var currentRect = rect;\n    while(currentRect.y < maxY){\n        var _partition = partition(currentRect, height), lineRect = _partition[0], rest = _partition[1];\n        var lineRectFragments = getLineFragments(lineRect, excludeRects);\n        currentRect = rest;\n        lineRects.push.apply(lineRects, lineRectFragments);\n    }\n    return [].concat(lineRects, [\n        currentRect\n    ]);\n};\nvar ATTACHMENT_CODE$1 = \"￼\"; // 65532\n/**\n * Remove attachment attribute if no char present\n *\n * @param  {Object} attributed string\n * @return {Object} attributed string\n */ var purgeAttachments = function purgeAttachments(attributedString) {\n    var shouldPurge = !attributedString.string.includes(ATTACHMENT_CODE$1);\n    if (!shouldPurge) return attributedString;\n    var runs = attributedString.runs.map(function(run) {\n        return omit(\"attachment\", run);\n    });\n    return Object.assign({}, attributedString, {\n        runs: runs\n    });\n};\n/**\n * Layout paragraphs inside rectangle\n *\n * @param  {Object} rect\n * @param  {Array} attributed strings\n * @return {Object} layout blocks\n */ var layoutLines = function layoutLines(rects, lines, indent) {\n    var rect = rects.shift();\n    var currentY = rect.y;\n    return lines.map(function(line, i) {\n        var _line$runs, _line$runs$;\n        var lineIndent = i === 0 ? indent : 0;\n        var style = ((_line$runs = line.runs) === null || _line$runs === void 0 ? void 0 : (_line$runs$ = _line$runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes) || {};\n        var height$1 = Math.max(height(line), style.lineHeight);\n        if (currentY + height$1 > rect.y + rect.height && rects.length > 0) {\n            rect = rects.shift();\n            currentY = rect.y;\n        }\n        var newLine = Object.assign({}, line);\n        delete newLine.syllables;\n        newLine.box = {\n            x: rect.x + lineIndent,\n            y: currentY,\n            width: rect.width - lineIndent,\n            height: height$1\n        };\n        currentY += height$1;\n        return purgeAttachments(newLine);\n    });\n};\n/**\n * Performs line breaking and layout\n *\n * @param  {Object} engines\n * @param  {Object}  layout options\n * @param  {Object} rect\n * @param  {Object} attributed string\n * @return {Object} layout block\n */ var layoutParagraph = function layoutParagraph(engines, options) {\n    return function(container, paragraph) {\n        var _paragraph$runs, _paragraph$runs$, _paragraph$runs$$attr;\n        var height$1 = height(paragraph);\n        var indent = ((_paragraph$runs = paragraph.runs) === null || _paragraph$runs === void 0 ? void 0 : (_paragraph$runs$ = _paragraph$runs[0]) === null || _paragraph$runs$ === void 0 ? void 0 : (_paragraph$runs$$attr = _paragraph$runs$.attributes) === null || _paragraph$runs$$attr === void 0 ? void 0 : _paragraph$runs$$attr.indent) || 0;\n        var rects = generateLineRects(container, height$1);\n        var availableWidths = rects.map(function(r) {\n            return r.width;\n        });\n        availableWidths[0] -= indent;\n        var lines = engines.linebreaker(options)(paragraph, availableWidths);\n        return layoutLines(rects, lines, indent);\n    };\n};\n/**\n * Slice block at given height\n *\n * @param  {number}  height\n * @param  {Object}  paragraph block\n * @return {number} sliced paragraph block\n */ var sliceAtHeight = function sliceAtHeight(height, block) {\n    var newBlock = [];\n    var counter = 0;\n    for(var i = 0; i < block.length; i += 1){\n        var line = block[i];\n        counter += line.box.height;\n        if (counter < height) {\n            newBlock.push(line);\n        } else {\n            break;\n        }\n    }\n    return newBlock;\n};\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */ var typesetter = function typesetter(engines, options, container) {\n    return function(attributedStrings) {\n        var blocks = [];\n        var paragraphs = [].concat(attributedStrings);\n        var layoutBlock = layoutParagraph(engines, options);\n        var maxLines = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(container.maxLines) ? Infinity : container.maxLines;\n        var truncateEllipsis = container.truncateMode === \"ellipsis\";\n        var linesCount = maxLines;\n        var paragraphRect = copy(container);\n        var nextParagraph = paragraphs.shift();\n        while(linesCount > 0 && nextParagraph){\n            var block = layoutBlock(paragraphRect, nextParagraph);\n            var slicedBlock = block.slice(0, linesCount);\n            var linesHeight = height$2(slicedBlock);\n            var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n            linesCount -= slicedBlock.length;\n            if (paragraphRect.height >= linesHeight) {\n                blocks.push(shouldTruncate ? truncate(slicedBlock) : slicedBlock);\n                paragraphRect = crop(linesHeight, paragraphRect);\n                nextParagraph = paragraphs.shift();\n            } else {\n                blocks.push(truncate(sliceAtHeight(paragraphRect.height, slicedBlock)));\n                break;\n            }\n        }\n        return blocks;\n    };\n};\nvar DUMMY_CODEPOINT = 123;\n/**\n * Resolve string indices based on glyphs code points\n *\n * @param  {Array}  glyphs\n * @return {Array} glyph indices\n */ var resolve = function resolve(glyphs) {\n    if (glyphs === void 0) {\n        glyphs = [];\n    }\n    return glyphs.reduce(function(acc, glyph) {\n        var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [\n            DUMMY_CODEPOINT\n        ];\n        if (acc.length === 0) return codePoints.map(function() {\n            return 0;\n        });\n        var last = acc[acc.length - 1];\n        var next = codePoints.map(function() {\n            return last + 1;\n        });\n        return [].concat(acc, next);\n    }, []);\n};\nvar getCharacterSpacing = function getCharacterSpacing(run) {\n    var _run$attributes;\n    return ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : _run$attributes.characterSpacing) || 0;\n};\n/**\n * Scale run positions\n *\n * @param  {Object}  run\n * @param  {Array}  positions\n * @return {Array} scaled positions\n */ var scalePositions = function scalePositions(run, positions) {\n    var runScale = scale(run);\n    var characterSpacing = getCharacterSpacing(run);\n    return positions.map(function(position, i) {\n        var isLast = i === positions.length;\n        var xSpacing = isLast ? 0 : characterSpacing;\n        return Object.assign({}, position, {\n            xAdvance: position.xAdvance * runScale + xSpacing,\n            yAdvance: position.yAdvance * runScale,\n            xOffset: position.xOffset * runScale,\n            yOffset: position.yOffset * runScale\n        });\n    });\n};\n/**\n * Create glyph run\n *\n * @param  {String}  string\n * @param  {Object}  run\n * @return {Object}  glyph run\n */ var layoutRun = function layoutRun(string) {\n    return function(run) {\n        var start = run.start, end = run.end, _run$attributes2 = run.attributes, attributes = _run$attributes2 === void 0 ? {} : _run$attributes2;\n        var font = attributes.font;\n        if (!font) return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__({}, run, {\n            glyphs: [],\n            glyphIndices: [],\n            positions: []\n        });\n        var runString = string.slice(start, end);\n        var glyphRun = font.layout(runString);\n        var positions = scalePositions(run, glyphRun.positions);\n        var glyphIndices = resolve(glyphRun.glyphs);\n        return _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__({}, run, {\n            positions: positions,\n            glyphIndices: glyphIndices,\n            glyphs: glyphRun.glyphs\n        });\n    };\n};\n/**\n * Generate glyphs for single attributed string\n *\n * @param  {Object}  layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings\n * @return {Array} attributed string with glyphs\n */ var generateGlyphs = function generateGlyphs() {\n    return function(attributedString) {\n        var runs = attributedString.runs.map(layoutRun(attributedString.string));\n        return Object.assign({}, attributedString, {\n            runs: runs\n        });\n    };\n};\n/**\n * Resolves yOffset for run\n *\n * @param  {Object}  run\n * @return {Object} run\n */ var resolveRunYOffset = function resolveRunYOffset(run) {\n    var _run$attributes, _run$attributes$font, _run$attributes2;\n    if (!run.positions) return run;\n    var unitsPerEm = ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : (_run$attributes$font = _run$attributes.font) === null || _run$attributes$font === void 0 ? void 0 : _run$attributes$font.unitsPerEm) || 0;\n    var yOffset = (((_run$attributes2 = run.attributes) === null || _run$attributes2 === void 0 ? void 0 : _run$attributes2.yOffset) || 0) * unitsPerEm;\n    var positions = run.positions.map(function(p) {\n        return Object.assign({}, p, {\n            yOffset: yOffset\n        });\n    });\n    return Object.assign({}, run, {\n        positions: positions\n    });\n};\n/**\n * Resolves yOffset for multiple paragraphs\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings (paragraphs)\n * @return {Array} attributed strings (paragraphs)\n */ var resolveYOffset = function resolveYOffset() {\n    return function(attributedString) {\n        var runs = attributedString.runs.map(resolveRunYOffset);\n        return Object.assign({}, attributedString, {\n            runs: runs\n        });\n    };\n};\n/**\n * Sort runs in ascending order\n *\n * @param  {Array}  runs\n * @return {Array} sorted runs\n */ var sort = function sort(runs) {\n    return runs.sort(function(a, b) {\n        return a.start - b.start || a.end - b.end;\n    });\n};\n/**\n * Is run empty (start === end)\n *\n * @param  {Object}  run\n * @return {Object} is run empty\n */ var isEmpty = function isEmpty(run) {\n    return run.start === run.end;\n};\nvar sortPoints = function sortPoints(a, b) {\n    return a[1] - b[1] || a[3] - b[3];\n};\nvar generatePoints = function generatePoints(runs) {\n    var result = runs.reduce(function(acc, run, i) {\n        return acc.concat([\n            [\n                \"start\",\n                run.start,\n                run.attributes,\n                i\n            ],\n            [\n                \"end\",\n                run.end,\n                run.attributes,\n                i\n            ]\n        ]);\n    }, []);\n    return result.sort(sortPoints);\n};\nvar mergeRuns = function mergeRuns(runs) {\n    return runs.reduce(function(acc, run) {\n        var attributes = Object.assign({}, acc.attributes, run.attributes);\n        return Object.assign({}, run, {\n            attributes: attributes\n        });\n    }, {});\n};\nvar groupEmptyRuns = function groupEmptyRuns(runs) {\n    var groups = runs.reduce(function(acc, run) {\n        if (!acc[run.start]) acc[run.start] = [];\n        acc[run.start].push(run);\n        return acc;\n    }, {});\n    return Object.values(groups);\n};\nvar flattenEmptyRuns = function flattenEmptyRuns(runs) {\n    return groupEmptyRuns(runs).map(mergeRuns);\n};\nvar flattenRegularRuns = function flattenRegularRuns(runs) {\n    var res = [];\n    var points = generatePoints(runs);\n    var start = -1;\n    var attrs = {};\n    var stack = [];\n    for(var i = 0; i < points.length; i += 1){\n        var _points$i = points[i], type = _points$i[0], offset = _points$i[1], attributes = _points$i[2];\n        if (start !== -1 && start < offset) {\n            res.push({\n                start: start,\n                end: offset,\n                attributes: attrs\n            });\n        }\n        if (type === \"start\") {\n            stack.push(attributes);\n            attrs = Object.assign({}, attrs, attributes);\n        } else {\n            attrs = {};\n            for(var j = 0; j < stack.length; j += 1){\n                if (stack[j] === attributes) {\n                    // eslint-disable-next-line no-plusplus\n                    stack.splice(j--, 1);\n                } else {\n                    attrs = Object.assign({}, attrs, stack[j]);\n                }\n            }\n        }\n        start = offset;\n    }\n    return res;\n};\n/**\n * Flatten many runs\n *\n * @param  {Array}  runs\n * @return {Array} flatten runs\n */ var flatten = function flatten(runs) {\n    if (runs === void 0) {\n        runs = [];\n    }\n    var emptyRuns = flattenEmptyRuns(runs.filter(function(run) {\n        return isEmpty(run);\n    }));\n    var regularRuns = flattenRegularRuns(runs.filter(function(run) {\n        return !isEmpty(run);\n    }));\n    return sort(emptyRuns.concat(regularRuns));\n};\n/**\n * Returns empty attributed string\n *\n * @return {Object} empty attributed string\n */ var empty = function empty() {\n    return {\n        string: \"\",\n        runs: []\n    };\n};\nvar omitFont = function omitFont(attributedString) {\n    var runs = attributedString.runs.map(function(run) {\n        return omit(\"font\", run);\n    });\n    return Object.assign({}, attributedString, {\n        runs: runs\n    });\n};\n/**\n * Performs font substitution and script itemization on attributed string\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} processed attributed string\n */ var preprocessRuns = function preprocessRuns(engines, options) {\n    return function(attributedString) {\n        if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(attributedString)) return empty();\n        var string = attributedString.string;\n        var fontSubstitution = engines.fontSubstitution, scriptItemizer = engines.scriptItemizer;\n        var _omitFont = omitFont(attributedString), omittedFontRuns = _omitFont.runs;\n        var _fontSubstitution = fontSubstitution(options)(attributedString), substitutedRuns = _fontSubstitution.runs;\n        var _scriptItemizer = scriptItemizer(options)(attributedString), itemizationRuns = _scriptItemizer.runs;\n        var runs = substitutedRuns.concat(itemizationRuns).concat(omittedFontRuns);\n        return {\n            string: string,\n            runs: flatten(runs)\n        };\n    };\n};\n/**\n * Get attributed string start value\n *\n * @param  {Object}  attributed string\n * @return {number} start\n */ var start = function start(attributedString) {\n    var runs = attributedString.runs;\n    return runs.length === 0 ? 0 : runs[0].start;\n};\n/**\n * Get attributed string end value\n *\n * @param  {Object}  attributed string\n * @return {number} end\n */ var end = function end(attributedString) {\n    var runs = attributedString.runs;\n    return runs.length === 0 ? 0 : (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs).end;\n};\n/**\n * Get attributed string length\n *\n * @param  {Object}  glyph string\n * @return {number} end\n */ var length$1 = function length(attributedString) {\n    return end(attributedString) - start(attributedString);\n};\n/**\n * Breaks attributed string into paragraphs\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Array} attributed string array\n */ var splitParagraphs = function splitParagraphs() {\n    return function(attributedString) {\n        var res = [];\n        var start = 0;\n        var breakPoint = attributedString.string.indexOf(\"\\n\") + 1;\n        while(breakPoint > 0){\n            res.push(slice(start, breakPoint, attributedString));\n            start = breakPoint;\n            breakPoint = attributedString.string.indexOf(\"\\n\", breakPoint) + 1;\n        }\n        if (start === 0) {\n            res.push(attributedString);\n        } else if (start < attributedString.string.length) {\n            res.push(slice(start, length$1(attributedString), attributedString));\n        }\n        return res;\n    };\n};\n/**\n * Return positions advance width\n *\n * @param  {Object}  positions\n * @return {number} advance width\n */ var advanceWidth$2 = function advanceWidth(positions) {\n    return positions.reduce(function(acc, pos) {\n        return acc + (pos.xAdvance || 0);\n    }, 0);\n};\n/**\n * Return run advance width\n *\n * @param  {Object}  run\n * @return {number} advance width\n */ var advanceWidth$1 = function advanceWidth(run) {\n    return advanceWidth$2(run.positions || []);\n};\n/**\n * Returns attributed string advancewidth\n *\n * @param {Object} attributed string\n * @return {number} advance width\n */ var advanceWidth = function advanceWidth(attributeString) {\n    var reducer = function reducer(acc, run) {\n        return acc + advanceWidth$1(run);\n    };\n    return attributeString.runs.reduce(reducer, 0);\n};\nvar WHITE_SPACES_CODE = 32;\n/**\n * Check if glyph is white space\n *\n * @param  {Object}  glyph\n * @return {Boolean}  is white space\n * */ var isWhiteSpace = function isWhiteSpace(glyph) {\n    var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [];\n    return codePoints.includes(WHITE_SPACES_CODE);\n};\n/**\n * Get white space leading positions\n *\n * @param  {Object}  run\n * @return {Array} white space leading positions\n */ var leadingPositions = function leadingPositions(run) {\n    var glyphs = run.glyphs || [];\n    var positions = run.positions || [];\n    var leadingWhitespaces = glyphs.findIndex(function(g) {\n        return !isWhiteSpace(g);\n    });\n    return positions.slice(0, leadingWhitespaces);\n};\n/**\n * Get run leading white space offset\n *\n * @param  {Object}  run\n * @return {number} leading white space offset\n */ var leadingOffset$1 = function leadingOffset(run) {\n    var positions = leadingPositions(run);\n    return positions.reduce(function(acc, pos) {\n        return acc + (pos.xAdvance || 0);\n    }, 0);\n};\n/**\n * Get attributed string leading white space offset\n *\n * @param  {Object}  attributed string\n * @return {number} leading white space offset\n */ var leadingOffset = function leadingOffset(attributedString) {\n    var runs = attributedString.runs || [];\n    return leadingOffset$1(runs[0]);\n};\nvar reverse = function reverse(array) {\n    return [].concat(array).reverse();\n};\n/**\n * Get white space trailing positions\n *\n * @param  {Object}  run\n * @return {Array} white space trailing positions\n */ var trailingPositions = function trailingPositions(run) {\n    var glyphs = reverse(run.glyphs || []);\n    var positions = reverse(run.positions || []);\n    var leadingWhitespaces = glyphs.findIndex(function(g) {\n        return !isWhiteSpace(g);\n    });\n    return positions.slice(0, leadingWhitespaces);\n};\n/**\n * Get run trailing white space offset\n *\n * @param  {Object}  run\n * @return {number} trailing white space offset\n */ var trailingOffset$1 = function trailingOffset(run) {\n    var positions = trailingPositions(run);\n    return positions.reduce(function(acc, pos) {\n        return acc + (pos.xAdvance || 0);\n    }, 0);\n};\n/**\n * Get attributed string trailing white space offset\n *\n * @param  {Object}  attributed string\n * @return {number} trailing white space offset\n */ var trailingOffset = function trailingOffset(attributedString) {\n    var runs = attributedString.runs || [];\n    return trailingOffset$1((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs));\n};\n/**\n * Drop last char of run\n *\n * @param  {Object}  run\n * @return {boolean} run without last char\n */ var dropLast$1 = function dropLast(run) {\n    return slice$1(0, run.end - run.start - 1, run);\n};\n/**\n * Drop last glyph\n *\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */ var dropLast = function dropLast(attributeString) {\n    var string = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.dropLast)(attributeString.string);\n    var runs = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.adjust)(-1, dropLast$1, attributeString.runs);\n    return Object.assign({}, attributeString, {\n        string: string,\n        runs: runs\n    });\n};\nvar ALIGNMENT_FACTORS = {\n    center: 0.5,\n    right: 1\n};\n/**\n * Remove new line char at the end of line if present\n *\n * @param  {Object}  line\n * @return {Object} line\n */ var removeNewLine = function removeNewLine(line) {\n    return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(line.string) === \"\\n\" ? dropLast(line) : line;\n};\nvar getOverflowLeft = function getOverflowLeft(line) {\n    return leadingOffset(line) + (line.overflowLeft || 0);\n};\nvar getOverflowRight = function getOverflowRight(line) {\n    return trailingOffset(line) + (line.overflowRight || 0);\n};\n/**\n * Ignore whitespace at the start and end of a line for alignment\n *\n * @param  {Object}  line\n * @return {Object} line\n */ var adjustOverflow = function adjustOverflow(line) {\n    var overflowLeft = getOverflowLeft(line);\n    var overflowRight = getOverflowRight(line);\n    var x = line.box.x - overflowLeft;\n    var width = line.box.width + overflowLeft + overflowRight;\n    var box = Object.assign({}, line.box, {\n        x: x,\n        width: width\n    });\n    return Object.assign({}, line, {\n        box: box,\n        overflowLeft: overflowLeft,\n        overflowRight: overflowRight\n    });\n};\n/**\n * Performs line justification by calling appropiate engine\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {string}  text align\n * @param  {Object}  line\n * @return {Object} line\n */ var justifyLine$1 = function justifyLine(engines, options, align) {\n    return function(line) {\n        var lineWidth = advanceWidth(line);\n        var alignFactor = ALIGNMENT_FACTORS[align] || 0;\n        var remainingWidth = Math.max(0, line.box.width - lineWidth);\n        var shouldJustify = align === \"justify\" || lineWidth > line.box.width;\n        var x = line.box.x + remainingWidth * alignFactor;\n        var box = Object.assign({}, line.box, {\n            x: x\n        });\n        var newLine = Object.assign({}, line, {\n            box: box\n        });\n        return shouldJustify ? engines.justification(options)(newLine) : newLine;\n    };\n};\nvar finalizeLine = function finalizeLine(line) {\n    var lineAscent = 0;\n    var lineDescent = 0;\n    var lineHeight = 0;\n    var lineXAdvance = 0;\n    var runs = line.runs.map(function(run) {\n        var height = height$1(run);\n        var ascent = ascent$1(run);\n        var descent$1 = descent(run);\n        var xAdvance = advanceWidth$1(run);\n        lineHeight = Math.max(lineHeight, height);\n        lineAscent = Math.max(lineAscent, ascent);\n        lineDescent = Math.max(lineDescent, descent$1);\n        lineXAdvance += xAdvance;\n        return Object.assign({}, run, {\n            height: height,\n            ascent: ascent,\n            descent: descent$1,\n            xAdvance: xAdvance\n        });\n    });\n    return Object.assign({}, line, {\n        runs: runs,\n        height: lineHeight,\n        ascent: lineAscent,\n        descent: lineDescent,\n        xAdvance: lineXAdvance\n    });\n};\n/**\n * Finalize line by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  line\n * @param  {number}  line index\n * @param  {Array}  total lines\n * @return {Object} line\n */ var finalizeBlock = function finalizeBlock(engines, options) {\n    if (engines === void 0) {\n        engines = {};\n    }\n    return function(line, i, lines) {\n        var _line$runs, _line$runs$;\n        var isLastFragment = i === lines.length - 1;\n        var style = ((_line$runs = line.runs) === null || _line$runs === void 0 ? void 0 : (_line$runs$ = _line$runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes) || {};\n        var align = isLastFragment ? style.alignLastLine : style.align;\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(finalizeLine, engines.textDecoration(options), justifyLine$1(engines, options, align), adjustOverflow, removeNewLine)(line);\n    };\n};\n/**\n * Finalize line block by performing line justification\n * and text decoration (using appropiate engines)\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Array}  line blocks\n * @return {Array} line blocks\n */ var finalizeFragments = function finalizeFragments(engines, options) {\n    return function(blocks) {\n        var blockFinalizer = finalizeBlock(engines, options);\n        return blocks.map(function(block) {\n            return block.map(blockFinalizer);\n        });\n    };\n};\nvar ATTACHMENT_CODE = 0xfffc; // 65532\nvar isReplaceGlyph = function isReplaceGlyph(glyph) {\n    return glyph.codePoints.includes(ATTACHMENT_CODE);\n};\n/**\n * Resolve attachments of run\n *\n * @param  {Object}  run\n * @return {Object} run\n */ var resolveRunAttachments = function resolveRunAttachments(run) {\n    var _run$attributes;\n    if (!run.positions) return run;\n    var glyphs = run.glyphs || [];\n    var attachment = ((_run$attributes = run.attributes) === null || _run$attributes === void 0 ? void 0 : _run$attributes.attachment) || {};\n    var positions = run.positions.map(function(position, i) {\n        var glyph = glyphs[i];\n        if (attachment && attachment.width && isReplaceGlyph(glyph)) {\n            return Object.assign({}, position, {\n                xAdvance: attachment.width\n            });\n        }\n        return Object.assign({}, position);\n    });\n    return Object.assign({}, run, {\n        positions: positions\n    });\n};\n/**\n * Resolve attachments for multiple paragraphs\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings (paragraphs)\n * @return {Array} attributed strings (paragraphs)\n */ var resolveAttachments = function resolveAttachments() {\n    return function(attributedString) {\n        var runs = attributedString.runs.map(resolveRunAttachments);\n        return Object.assign({}, attributedString, {\n            runs: runs\n        });\n    };\n};\nvar applyAttributes = function applyAttributes(a) {\n    return {\n        align: a.align || \"left\",\n        alignLastLine: a.alignLastLine || (a.align === \"justify\" ? \"left\" : a.align || \"left\"),\n        attachment: a.attachment || null,\n        backgroundColor: a.backgroundColor || null,\n        bidiLevel: a.bidiLevel || null,\n        bullet: a.bullet || null,\n        characterSpacing: a.characterSpacing || 0,\n        color: a.color || \"black\",\n        features: a.features || [],\n        fill: a.fill !== false,\n        font: a.font || null,\n        fontSize: a.fontSize || 12,\n        hangingPunctuation: a.hangingPunctuation || false,\n        hyphenationFactor: a.hyphenationFactor || 0,\n        indent: a.indent || 0,\n        justificationFactor: a.justificationFactor || 1,\n        lineHeight: a.lineHeight || null,\n        lineSpacing: a.lineSpacing || 0,\n        link: a.link || null,\n        marginLeft: a.marginLeft || a.margin || 0,\n        marginRight: a.marginRight || a.margin || 0,\n        opacity: a.opacity,\n        paddingTop: a.paddingTop || a.padding || 0,\n        paragraphSpacing: a.paragraphSpacing || 0,\n        underline: a.underline || false,\n        underlineColor: a.underlineColor || a.color || \"black\",\n        underlineStyle: a.underlineStyle || \"solid\",\n        script: a.script || null,\n        shrinkFactor: a.shrinkFactor || 0,\n        strike: a.strike || false,\n        strikeColor: a.strikeColor || a.color || \"black\",\n        strikeStyle: a.strikeStyle || \"solid\",\n        stroke: a.stroke || false,\n        verticalAlign: a.verticalAlign || null,\n        wordSpacing: a.wordSpacing || 0,\n        yOffset: a.yOffset || 0\n    };\n};\n/**\n * Apply default style to run\n *\n * @param  {Object}  run\n * @return {Object} run with styles\n */ var applyRunStyles = function applyRunStyles(run) {\n    var attributes = applyAttributes(run.attributes);\n    return Object.assign({}, run, {\n        attributes: attributes\n    });\n};\n/**\n * Apply default attributes for an attributed string\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */ var applyDefaultStyles = function applyDefaultStyles() {\n    return function(attributedString) {\n        var string = attributedString.string || \"\";\n        var runs = (attributedString.runs || []).map(applyRunStyles);\n        return {\n            string: string,\n            runs: runs\n        };\n    };\n};\n/* eslint-disable no-restricted-syntax */ /**\n * Apply scaling and yOffset for verticalAlign 'sub' and 'super'.\n *\n * @param  {Object} layout options\n * @param  {Object} attributed string\n * @return {Object} attributed string\n */ var verticalAlignment = function verticalAlignment() {\n    return function(attributedString) {\n        attributedString.runs.forEach(function(run) {\n            var attributes = run.attributes;\n            var verticalAlign = attributes.verticalAlign;\n            if (verticalAlign === \"sub\") {\n                attributes.yOffset = -0.2;\n            } else if (verticalAlign === \"super\") {\n                attributes.yOffset = 0.4;\n            }\n        });\n        return attributedString;\n    };\n};\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n *\n * @param  {Object}  engines\n * @param  {Object}  attributed string\n * @param  {Object}  container rect\n * @param  {Object}  layout options\n * @return {Array} paragraph blocks\n */ var layoutEngine = function layoutEngine(engines) {\n    return function(attributedString, container, options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var processParagraph = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(resolveYOffset(), resolveAttachments(), generateGlyphs(), verticalAlignment(), wrapWords(engines, options));\n        var processParagraphs = function processParagraphs(paragraphs) {\n            return paragraphs.map(processParagraph);\n        };\n        return (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.compose)(finalizeFragments(engines, options), typesetter(engines, options, container), processParagraphs, splitParagraphs(), preprocessRuns(engines, options), applyDefaultStyles())(attributedString);\n    };\n};\n/* eslint-disable no-plusplus */ var INFINITY = 10000;\nvar getNextBreakpoint = function getNextBreakpoint(subnodes, widths, lineNumber) {\n    var position = null;\n    var minimumBadness = Infinity;\n    var sum = {\n        width: 0,\n        stretch: 0,\n        shrink: 0\n    };\n    var lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n    var calculateRatio = function calculateRatio(node) {\n        if (sum.width < lineLength) {\n            return sum.stretch - node.stretch > 0 ? (lineLength - sum.width) / sum.stretch : INFINITY;\n        }\n        if (sum.width > lineLength) {\n            return sum.shrink - node.shrink > 0 ? (lineLength - sum.width) / sum.shrink : INFINITY;\n        }\n        return 0;\n    };\n    for(var i = 0; i < subnodes.length; i += 1){\n        var node = subnodes[i];\n        if (node.type === \"box\") {\n            sum.width += node.width;\n        } else if (node.type === \"glue\") {\n            sum.width += node.width;\n            sum.stretch += node.stretch;\n            sum.shrink += node.shrink;\n        }\n        if (sum.width - sum.shrink > lineLength) {\n            if (position === null) {\n                var j = i === 0 ? i + 1 : i;\n                while(j < subnodes.length && (subnodes[j].type === \"glue\" || subnodes[j].type === \"penalty\")){\n                    j++;\n                }\n                position = j - 1;\n            }\n            break;\n        }\n        if (node.type === \"penalty\" || node.type === \"glue\") {\n            var ratio = calculateRatio(node);\n            var penalty = node.type === \"penalty\" ? node.penalty : 0;\n            var badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n            if (minimumBadness >= badness) {\n                position = i;\n                minimumBadness = badness;\n            }\n        }\n    }\n    return sum.width - sum.shrink > lineLength ? position : null;\n};\nvar applyBestFit = function applyBestFit(nodes, widths) {\n    var count = 0;\n    var lineNumber = 0;\n    var subnodes = nodes;\n    var breakpoints = [\n        {\n            position: 0\n        }\n    ];\n    while(subnodes.length > 0){\n        var breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n        if (breakpoint !== null) {\n            count += breakpoint;\n            breakpoints.push({\n                position: count\n            });\n            subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n            count++;\n            lineNumber++;\n        } else {\n            subnodes = [];\n        }\n    }\n    return breakpoints;\n};\n/* eslint-disable no-param-reassign */ /* eslint-disable max-classes-per-file */ var Node = /*#__PURE__*/ function() {\n    function Node(data) {\n        this.prev = null;\n        this.next = null;\n        this.data = data;\n    }\n    var _proto = Node.prototype;\n    _proto.toString = function toString() {\n        return this.data.toString();\n    };\n    return Node;\n}();\nvar LinkedList = /*#__PURE__*/ function() {\n    function LinkedList() {\n        this.head = null;\n        this.tail = null;\n        this.listSize = 0;\n    }\n    var _proto2 = LinkedList.prototype;\n    _proto2.isLinked = function isLinked(node) {\n        return !(node && node.prev === null && node.next === null && this.tail !== node && this.head !== node || this.isEmpty());\n    };\n    _proto2.size = function size() {\n        return this.listSize;\n    };\n    _proto2.isEmpty = function isEmpty() {\n        return this.listSize === 0;\n    };\n    _proto2.first = function first() {\n        return this.head;\n    };\n    _proto2.last = function last() {\n        return this.last;\n    };\n    _proto2.toString = function toString() {\n        return this.toArray().toString();\n    };\n    _proto2.toArray = function toArray() {\n        var node = this.head;\n        var result = [];\n        while(node !== null){\n            result.push(node);\n            node = node.next;\n        }\n        return result;\n    };\n    _proto2.forEach = function forEach(fun) {\n        var node = this.head;\n        while(node !== null){\n            fun(node);\n            node = node.next;\n        }\n    };\n    _proto2.contains = function contains(n) {\n        var node = this.head;\n        if (!this.isLinked(n)) {\n            return false;\n        }\n        while(node !== null){\n            if (node === n) {\n                return true;\n            }\n            node = node.next;\n        }\n        return false;\n    };\n    _proto2.at = function at(i) {\n        var node = this.head;\n        var index = 0;\n        if (i >= this.listLength || i < 0) {\n            return null;\n        }\n        while(node !== null){\n            if (i === index) {\n                return node;\n            }\n            node = node.next;\n            index += 1;\n        }\n        return null;\n    };\n    _proto2.insertAfter = function insertAfter(node, newNode) {\n        if (!this.isLinked(node)) {\n            return this;\n        }\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next === null) {\n            this.tail = newNode;\n        } else {\n            node.next.prev = newNode;\n        }\n        node.next = newNode;\n        this.listSize += 1;\n        return this;\n    };\n    _proto2.insertBefore = function insertBefore(node, newNode) {\n        if (!this.isLinked(node)) {\n            return this;\n        }\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev === null) {\n            this.head = newNode;\n        } else {\n            node.prev.next = newNode;\n        }\n        node.prev = newNode;\n        this.listSize += 1;\n        return this;\n    };\n    _proto2.push = function push(node) {\n        if (this.head === null) {\n            this.unshift(node);\n        } else {\n            this.insertAfter(this.tail, node);\n        }\n        return this;\n    };\n    _proto2.unshift = function unshift(node) {\n        if (this.head === null) {\n            this.head = node;\n            this.tail = node;\n            node.prev = null;\n            node.next = null;\n            this.listSize += 1;\n        } else {\n            this.insertBefore(this.head, node);\n        }\n        return this;\n    };\n    _proto2.remove = function remove(node) {\n        if (!this.isLinked(node)) {\n            return this;\n        }\n        if (node.prev === null) {\n            this.head = node.next;\n        } else {\n            node.prev.next = node.next;\n        }\n        if (node.next === null) {\n            this.tail = node.prev;\n        } else {\n            node.next.prev = node.prev;\n        }\n        this.listSize -= 1;\n        return this;\n    };\n    _proto2.pop = function pop() {\n        var node = this.tail;\n        this.tail.prev.next = null;\n        this.tail = this.tail.prev;\n        this.listSize -= 1;\n        node.prev = null;\n        node.next = null;\n        return node;\n    };\n    _proto2.shift = function shift() {\n        var node = this.head;\n        this.head.next.prev = null;\n        this.head = this.head.next;\n        this.listSize -= 1;\n        node.prev = null;\n        node.next = null;\n        return node;\n    };\n    return LinkedList;\n}();\nLinkedList.Node = Node;\n/* eslint-disable no-restricted-properties */ /**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */ var linebreak = function linebreak(nodes, lines, settings) {\n    var options = {\n        demerits: {\n            line: settings && settings.demerits && settings.demerits.line || 10,\n            flagged: settings && settings.demerits && settings.demerits.flagged || 100,\n            fitness: settings && settings.demerits && settings.demerits.fitness || 3000\n        },\n        tolerance: settings && settings.tolerance || 3\n    };\n    var activeNodes = new LinkedList();\n    var sum = {\n        width: 0,\n        stretch: 0,\n        shrink: 0\n    };\n    var lineLengths = lines;\n    var breaks = [];\n    var tmp = {\n        data: {\n            demerits: Infinity\n        }\n    };\n    function breakpoint(position, demerits, ratio, line, fitnessClass, totals, previous) {\n        return {\n            position: position,\n            demerits: demerits,\n            ratio: ratio,\n            line: line,\n            fitnessClass: fitnessClass,\n            totals: totals || {\n                width: 0,\n                stretch: 0,\n                shrink: 0\n            },\n            previous: previous\n        };\n    }\n    function computeCost(start, end, active, currentLine) {\n        var width = sum.width - active.totals.width;\n        var stretch = 0;\n        var shrink = 0;\n        // If the current line index is within the list of linelengths, use it, otherwise use\n        // the last line length of the list.\n        var lineLength = currentLine < lineLengths.length ? lineLengths[currentLine - 1] : lineLengths[lineLengths.length - 1];\n        if (nodes[end].type === \"penalty\") {\n            width += nodes[end].width;\n        }\n        if (width < lineLength) {\n            // Calculate the stretch ratio\n            stretch = sum.stretch - active.totals.stretch;\n            if (stretch > 0) {\n                return (lineLength - width) / stretch;\n            }\n            return linebreak.infinity;\n        }\n        if (width > lineLength) {\n            // Calculate the shrink ratio\n            shrink = sum.shrink - active.totals.shrink;\n            if (shrink > 0) {\n                return (lineLength - width) / shrink;\n            }\n            return linebreak.infinity;\n        }\n        // perfect match\n        return 0;\n    }\n    // Add width, stretch and shrink values from the current\n    // break point up to the next box or forced penalty.\n    function computeSum(breakPointIndex) {\n        var result = {\n            width: sum.width,\n            stretch: sum.stretch,\n            shrink: sum.shrink\n        };\n        for(var i = breakPointIndex; i < nodes.length; i += 1){\n            if (nodes[i].type === \"glue\") {\n                result.width += nodes[i].width;\n                result.stretch += nodes[i].stretch;\n                result.shrink += nodes[i].shrink;\n            } else if (nodes[i].type === \"box\" || nodes[i].type === \"penalty\" && nodes[i].penalty === -linebreak.infinity && i > breakPointIndex) {\n                break;\n            }\n        }\n        return result;\n    }\n    // The main loop of the algorithm\n    // eslint-disable-next-line no-shadow\n    function mainLoop(node, index, nodes) {\n        var active = activeNodes.first();\n        var next = null;\n        var ratio = 0;\n        var demerits = 0;\n        var candidates = [];\n        var badness;\n        var currentLine = 0;\n        var tmpSum;\n        var currentClass = 0;\n        var fitnessClass;\n        var candidate;\n        var newNode;\n        // The inner loop iterates through all the active nodes with line < currentLine and then\n        // breaks out to insert the new active node candidates before looking at the next active\n        // nodes for the next lines. The result of this is that the active node list is always\n        // sorted by line number.\n        while(active !== null){\n            candidates = [\n                {\n                    demerits: Infinity\n                },\n                {\n                    demerits: Infinity\n                },\n                {\n                    demerits: Infinity\n                },\n                {\n                    demerits: Infinity\n                }\n            ];\n            // Iterate through the linked list of active nodes to find new potential active nodes\n            // and deactivate current active nodes.\n            while(active !== null){\n                next = active.next;\n                currentLine = active.data.line + 1;\n                ratio = computeCost(active.data.position, index, active.data, currentLine);\n                // Deactive nodes when the distance between the current active node and the\n                // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n                // ratio becomes negative) or when the current node is a forced break (i.e. the end\n                // of the paragraph when we want to remove all active nodes, but possibly have a final\n                // candidate active node---if the paragraph can be set using the given tolerance value.)\n                if (ratio < -1 || node.type === \"penalty\" && node.penalty === -linebreak.infinity) {\n                    activeNodes.remove(active);\n                }\n                // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n                // total demerits and record a candidate active node.\n                if (ratio >= -1 && ratio <= options.tolerance) {\n                    badness = 100 * Math.pow(Math.abs(ratio), 3);\n                    // Positive penalty\n                    if (node.type === \"penalty\" && node.penalty >= 0) {\n                        demerits = Math.pow(options.demerits.line + badness, 2) + Math.pow(node.penalty, 2);\n                    // Negative penalty but not a forced break\n                    } else if (node.type === \"penalty\" && node.penalty !== -linebreak.infinity) {\n                        demerits = Math.pow(options.demerits.line + badness, 2) - Math.pow(node.penalty, 2);\n                    // All other cases\n                    } else {\n                        demerits = Math.pow(options.demerits.line + badness, 2);\n                    }\n                    if (node.type === \"penalty\" && nodes[active.data.position].type === \"penalty\") {\n                        demerits += options.demerits.flagged * node.flagged * nodes[active.data.position].flagged;\n                    }\n                    // Calculate the fitness class for this candidate active node.\n                    if (ratio < -0.5) {\n                        currentClass = 0;\n                    } else if (ratio <= 0.5) {\n                        currentClass = 1;\n                    } else if (ratio <= 1) {\n                        currentClass = 2;\n                    } else {\n                        currentClass = 3;\n                    }\n                    // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n                    // differ too much.\n                    if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n                        demerits += options.demerits.fitness;\n                    }\n                    // Add the total demerits of the active node to get the total demerits of this candidate node.\n                    demerits += active.data.demerits;\n                    // Only store the best candidate for each fitness class\n                    if (demerits < candidates[currentClass].demerits) {\n                        candidates[currentClass] = {\n                            active: active,\n                            demerits: demerits,\n                            ratio: ratio\n                        };\n                    }\n                }\n                active = next;\n                // Stop iterating through active nodes to insert new candidate active nodes in the active list\n                // before moving on to the active nodes for the next line.\n                // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n                // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n                // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n                // list sorted has a higher priority.\n                if (active !== null && active.data.line >= currentLine) {\n                    break;\n                }\n            }\n            tmpSum = computeSum(index);\n            for(fitnessClass = 0; fitnessClass < candidates.length; fitnessClass += 1){\n                candidate = candidates[fitnessClass];\n                if (candidate.demerits < Infinity) {\n                    newNode = new LinkedList.Node(breakpoint(index, candidate.demerits, candidate.ratio, candidate.active.data.line + 1, fitnessClass, tmpSum, candidate.active));\n                    if (active !== null) {\n                        activeNodes.insertBefore(active, newNode);\n                    } else {\n                        activeNodes.push(newNode);\n                    }\n                }\n            }\n        }\n    }\n    // Add an active node for the start of the paragraph.\n    activeNodes.push(new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)));\n    // eslint-disable-next-line no-shadow\n    nodes.forEach(function(node, index, nodes) {\n        if (node.type === \"box\") {\n            sum.width += node.width;\n        } else if (node.type === \"glue\") {\n            if (index > 0 && nodes[index - 1].type === \"box\") {\n                mainLoop(node, index, nodes);\n            }\n            sum.width += node.width;\n            sum.stretch += node.stretch;\n            sum.shrink += node.shrink;\n        } else if (node.type === \"penalty\" && node.penalty !== linebreak.infinity) {\n            mainLoop(node, index, nodes);\n        }\n    });\n    if (activeNodes.size() !== 0) {\n        // Find the best active node (the one with the least total demerits.)\n        activeNodes.forEach(function(node) {\n            if (node.data.demerits < tmp.data.demerits) {\n                tmp = node;\n            }\n        });\n        while(tmp !== null){\n            breaks.push({\n                position: tmp.data.position,\n                ratio: tmp.data.ratio\n            });\n            tmp = tmp.data.previous;\n        }\n        return breaks.reverse();\n    }\n    return [];\n};\nlinebreak.infinity = 10000;\nlinebreak.glue = function(width, value, stretch, shrink) {\n    return {\n        type: \"glue\",\n        value: value,\n        width: width,\n        stretch: stretch,\n        shrink: shrink\n    };\n};\nlinebreak.box = function(width, value, hyphenated) {\n    if (hyphenated === void 0) {\n        hyphenated = false;\n    }\n    return {\n        type: \"box\",\n        width: width,\n        value: value,\n        hyphenated: hyphenated\n    };\n};\nlinebreak.penalty = function(width, penalty, flagged) {\n    return {\n        type: \"penalty\",\n        width: width,\n        penalty: penalty,\n        flagged: flagged\n    };\n};\n/**\n * Add scalar to run\n *\n * @param  {number}  scalar\n * @param  {Object}  run\n * @return {Object} added run\n */ var add = function add(n, run) {\n    var start = run.start + n;\n    var end = run.end + n;\n    return Object.assign({}, run, {\n        start: start,\n        end: end\n    });\n};\n/**\n * Get run length\n *\n * @param  {Object}  run\n * @return {number} length\n */ var length = function length(run) {\n    return run.end - run.start;\n};\n/**\n * Concats two runs into one\n *\n * @param  {Object}  first run\n * @param  {Object}  second run\n * @return {Object}  concatenated run\n */ var concat = function concat(runA, runB) {\n    var end = runA.end + length(runB);\n    var glyphs = (runA.glyphs || []).concat(runB.glyphs || []);\n    var positions = (runA.positions || []).concat(runB.positions || []);\n    var attributes = Object.assign({}, runA.attributes, runB.attributes);\n    var runAIndices = runA.glyphIndices || [];\n    var runALastIndex = (0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runAIndices) || 0;\n    var runBIndices = (runB.glyphIndices || []).map(function(i) {\n        return i + runALastIndex + 1;\n    });\n    var glyphIndices = normalize(runAIndices.concat(runBIndices));\n    return Object.assign({}, runA, {\n        end: end,\n        glyphs: glyphs,\n        positions: positions,\n        attributes: attributes,\n        glyphIndices: glyphIndices\n    });\n};\n/**\n * Insert glyph to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */ var insertGlyph$1 = function insertGlyph(index, glyph, run) {\n    if (!glyph) return run;\n    // Split resolves ligature splitting in case new glyph breaks some\n    var leadingRun = slice$1(0, index, run);\n    var trailingRun = slice$1(index, Infinity, run);\n    return concat(append$1(glyph, leadingRun), trailingRun);\n};\n/**\n * Insert either glyph or code point to run in the given index\n *\n * @param  {number}  string index\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object}  run with glyph\n */ var insert = function insert(index, value, run) {\n    var font = getFont(run);\n    var glyph = isNumber(value) ? fromCodePoint(value, font) : value;\n    return insertGlyph$1(index, glyph, run);\n};\n/**\n * Get run index at char index\n *\n * @param  {number}  char index\n * @param  {Object}  attributedString\n * @return {number} run index\n */ var runIndexAt = function runIndexAt(n, string) {\n    return runIndexAt$1(n, string.runs);\n};\n/**\n * Insert glyph into attributed string\n *\n * @param {number} index\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */ var insertGlyph = function insertGlyph(index, glyph, attributedString) {\n    var runIndex = runIndexAt(index, attributedString);\n    // Add glyph to the end if run index invalid\n    if (runIndex === -1) return append(glyph, attributedString);\n    var codePoints = (glyph === null || glyph === void 0 ? void 0 : glyph.codePoints) || [];\n    var string = attributedString.string.slice(0, index) + stringFromCodePoints(codePoints) + attributedString.string.slice(index);\n    var runs = attributedString.runs.map(function(run, i) {\n        if (i === runIndex) return insert(index - run.start, glyph, run);\n        if (i > runIndex) return add(codePoints.length, run);\n        return run;\n    });\n    return Object.assign({}, attributedString, {\n        string: string,\n        runs: runs\n    });\n};\n/**\n * Advance width between two string indices\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} advanced width run\n */ var advanceWidthBetween$1 = function advanceWidthBetween(start, end, run) {\n    var runStart = run.start || 0;\n    var glyphStartIndex = Math.max(0, glyphIndexAt(start - runStart, run));\n    var glyphEndIndex = Math.max(0, glyphIndexAt(end - runStart, run));\n    var positions = (run.positions || []).slice(glyphStartIndex, glyphEndIndex);\n    return advanceWidth$2(positions);\n};\n/**\n * Advance width between start and end\n * Does not consider ligature splitting for the moment.\n * Check performance impact on supporting this\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {number} advance width\n */ var advanceWidthBetween = function advanceWidthBetween(start, end, attributedString) {\n    var runs = filter(start, end, attributedString.runs);\n    return runs.reduce(function(acc, run) {\n        return acc + advanceWidthBetween$1(start, end, run);\n    }, 0);\n};\nvar HYPHEN = 0x002d;\nvar TOLERANCE_STEPS = 5;\nvar TOLERANCE_LIMIT = 50;\nvar opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9\n};\n/**\n * Slice attributed string to many lines\n *\n * @param {Object} attributed string\n * @param  {Array}  nodes\n * @param  {Array}  breaks\n * @return {Array} attributed strings\n */ var breakLines = function breakLines(string, nodes, breaks) {\n    var start = 0;\n    var end = null;\n    var lines = breaks.reduce(function(acc, breakPoint) {\n        var node = nodes[breakPoint.position];\n        var prevNode = nodes[breakPoint.position - 1];\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n        var line;\n        if (node.type === \"penalty\") {\n            end = prevNode.value.end;\n            line = slice(start, end, string);\n            line = insertGlyph(line.length, HYPHEN, line);\n        } else {\n            end = node.value.end;\n            line = slice(start, end, string);\n        }\n        start = end;\n        return [].concat(acc, [\n            line\n        ]);\n    }, []);\n    // Last line\n    lines.push(slice(start, string.string.length, string));\n    return lines;\n};\n/**\n * Return Knuth & Plass nodes based on line and previously calculated syllables\n *\n * @param {Object} attributed string\n * @param  {Object}  attributed string\n * @param  {Object}  layout options\n * @return {Array} attributed strings\n */ var getNodes = function getNodes(attributedString, _ref, options) {\n    var align = _ref.align;\n    var start = 0;\n    var hyphenWidth = 5;\n    var syllables = attributedString.syllables;\n    var hyphenPenalty = options.hyphenationPenalty || (align === \"justify\" ? 100 : 600);\n    var result = syllables.reduce(function(acc, s, index) {\n        var width = advanceWidthBetween(start, start + s.length, attributedString);\n        if (s.trim() === \"\") {\n            var stretch = width * opts.width / opts.stretch;\n            var shrink = width * opts.width / opts.shrink;\n            var value = {\n                start: start,\n                end: start + s.length\n            };\n            acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n            var hyphenated = syllables[index + 1] !== \" \";\n            var _value = {\n                start: start,\n                end: start + s.length\n            };\n            acc.push(linebreak.box(width, _value, hyphenated));\n            if (syllables[index + 1] && hyphenated) {\n                acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n            }\n        }\n        start += s.length;\n        return acc;\n    }, []);\n    result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n    result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n    return result;\n};\nvar getStyles = function getStyles(attributedString) {\n    var _attributedString$run, _attributedString$run2;\n    return ((_attributedString$run = attributedString.runs) === null || _attributedString$run === void 0 ? void 0 : (_attributedString$run2 = _attributedString$run[0]) === null || _attributedString$run2 === void 0 ? void 0 : _attributedString$run2.attributes) || {};\n};\n/**\n * Performs Knuth & Plass line breaking algorithm\n * Fallbacks to best fit algorithm if latter not successful\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @param {Object} attributed string\n * @return {Array} attributed strings\n */ var linebreaker = function linebreaker(options) {\n    return function(attributedString, availableWidths) {\n        var tolerance = options.tolerance || 4;\n        var style = getStyles(attributedString);\n        var nodes = getNodes(attributedString, style, options);\n        var breaks = linebreak(nodes, availableWidths, {\n            tolerance: tolerance\n        });\n        // Try again with a higher tolerance if the line breaking failed.\n        while(breaks.length === 0 && tolerance < TOLERANCE_LIMIT){\n            tolerance += TOLERANCE_STEPS;\n            breaks = linebreak(nodes, availableWidths, {\n                tolerance: tolerance\n            });\n        }\n        if (breaks.length === 0 || breaks.length === 1 && breaks[0].position === 0) {\n            breaks = applyBestFit(nodes, availableWidths);\n        }\n        return breakLines(attributedString, nodes, breaks.slice(1));\n    };\n};\nvar WHITESPACE_PRIORITY = 1;\nvar LETTER_PRIORITY = 2;\nvar EXPAND_WHITESPACE_FACTOR = {\n    before: 0.5,\n    after: 0.5,\n    priority: WHITESPACE_PRIORITY,\n    unconstrained: false\n};\nvar EXPAND_CHAR_FACTOR = {\n    before: 0.14453125,\n    // 37/256\n    after: 0.14453125,\n    priority: LETTER_PRIORITY,\n    unconstrained: false\n};\nvar SHRINK_WHITESPACE_FACTOR = {\n    before: -0.04296875,\n    // -11/256\n    after: -0.04296875,\n    priority: WHITESPACE_PRIORITY,\n    unconstrained: false\n};\nvar SHRINK_CHAR_FACTOR = {\n    before: -0.04296875,\n    after: -0.04296875,\n    priority: LETTER_PRIORITY,\n    unconstrained: false\n};\nvar getCharFactor = function getCharFactor(direction, options) {\n    var expandCharFactor = options.expandCharFactor || {};\n    var shrinkCharFactor = options.shrinkCharFactor || {};\n    return direction === \"GROW\" ? Object.assign({}, EXPAND_CHAR_FACTOR, expandCharFactor) : Object.assign({}, SHRINK_CHAR_FACTOR, shrinkCharFactor);\n};\nvar getWhitespaceFactor = function getWhitespaceFactor(direction, options) {\n    var expandWhitespaceFactor = options.expandWhitespaceFactor || {};\n    var shrinkWhitespaceFactor = options.shrinkWhitespaceFactor || {};\n    return direction === \"GROW\" ? Object.assign({}, EXPAND_WHITESPACE_FACTOR, expandWhitespaceFactor) : Object.assign({}, SHRINK_WHITESPACE_FACTOR, shrinkWhitespaceFactor);\n};\nvar factor = function factor(direction, options) {\n    return function(glyphs) {\n        var charFactor = getCharFactor(direction, options);\n        var whitespaceFactor = getWhitespaceFactor(direction, options);\n        var factors = [];\n        for(var index = 0; index < glyphs.length; index += 1){\n            var f = void 0;\n            var glyph = glyphs[index];\n            if (isWhiteSpace(glyph)) {\n                f = Object.assign({}, whitespaceFactor);\n                if (index === glyphs.length - 1) {\n                    f.before = 0;\n                    if (index > 0) {\n                        factors[index - 1].after = 0;\n                    }\n                }\n            } else if (glyph.isMark && index > 0) {\n                f = Object.assign({}, factors[index - 1]);\n                f.before = 0;\n                factors[index - 1].after = 0;\n            } else {\n                f = Object.assign({}, charFactor);\n            }\n            factors.push(f);\n        }\n        return factors;\n    };\n};\nvar getFactors = function getFactors(gap, line, options) {\n    var direction = gap > 0 ? \"GROW\" : \"SHRINK\";\n    var getFactor = factor(direction, options);\n    var factors = line.runs.reduce(function(acc, run) {\n        return acc.concat(getFactor(run.glyphs));\n    }, []);\n    factors[0].before = 0;\n    factors[factors.length - 1].after = 0;\n    return factors;\n};\n/* eslint-disable no-multi-assign */ var KASHIDA_PRIORITY = 0;\nvar NULL_PRIORITY = 3;\nvar getDistances = function getDistances(gap, factors) {\n    var total = 0;\n    var priorities = [];\n    var unconstrained = [];\n    for(var _priority = KASHIDA_PRIORITY; _priority <= NULL_PRIORITY; _priority += 1){\n        priorities[_priority] = unconstrained[_priority] = 0;\n    }\n    // sum the factors at each priority\n    for(var j = 0; j < factors.length; j += 1){\n        var f = factors[j];\n        var sum = f.before + f.after;\n        total += sum;\n        priorities[f.priority] += sum;\n        if (f.unconstrained) {\n            unconstrained[f.priority] += sum;\n        }\n    }\n    // choose the priorities that need to be applied\n    var highestPriority = -1;\n    var highestPrioritySum = 0;\n    var remainingGap = gap;\n    var priority;\n    for(priority = KASHIDA_PRIORITY; priority <= NULL_PRIORITY; priority += 1){\n        var prioritySum = priorities[priority];\n        if (prioritySum !== 0) {\n            if (highestPriority === -1) {\n                highestPriority = priority;\n                highestPrioritySum = prioritySum;\n            }\n            // if this priority covers the remaining gap, we're done\n            if (Math.abs(remainingGap) <= Math.abs(prioritySum)) {\n                priorities[priority] = remainingGap / prioritySum;\n                unconstrained[priority] = 0;\n                remainingGap = 0;\n                break;\n            }\n            // mark that we need to use 100% of the adjustment from\n            // this priority, and subtract the space that it consumes\n            priorities[priority] = 1;\n            remainingGap -= prioritySum;\n            // if this priority has unconstrained glyphs, let them consume the remaining space\n            if (unconstrained[priority] !== 0) {\n                unconstrained[priority] = remainingGap / unconstrained[priority];\n                remainingGap = 0;\n                break;\n            }\n        }\n    }\n    // zero out remaining priorities (if any)\n    for(var p = priority + 1; p <= NULL_PRIORITY; p += 1){\n        priorities[p] = 0;\n        unconstrained[p] = 0;\n    }\n    // if there is still space left over, assign it to the highest priority that we saw.\n    // this violates their factors, but it only happens in extreme cases\n    if (remainingGap > 0 && highestPriority > -1) {\n        priorities[highestPriority] = (highestPrioritySum + (gap - total)) / highestPrioritySum;\n    }\n    // create and return an array of distances to add to each glyph's advance\n    var distances = [];\n    for(var index = 0; index < factors.length; index += 1){\n        // the distance to add to this glyph is the sum of the space to add\n        // after this glyph, and the space to add before the next glyph\n        var _f = factors[index];\n        var next = factors[index + 1];\n        var dist = _f.after * priorities[_f.priority];\n        if (next) {\n            dist += next.before * priorities[next.priority];\n        }\n        // if this glyph is unconstrained, add the unconstrained distance as well\n        if (_f.unconstrained) {\n            dist += _f.after * unconstrained[_f.priority];\n            if (next) {\n                dist += next.before * unconstrained[next.priority];\n            }\n        }\n        distances.push(dist);\n    }\n    return distances;\n};\n/**\n * Adjust run positions by given distances\n *\n * @param {Array} distances\n * @param {Object} line\n * @returns {Object} line\n */ var justifyLine = function justifyLine(distances, line) {\n    var index = 0;\n    for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_3__(line.runs), _step; !(_step = _iterator()).done;){\n        var run = _step.value;\n        for(var _iterator2 = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_3__(run.positions), _step2; !(_step2 = _iterator2()).done;){\n            var position = _step2.value;\n            position.xAdvance += distances[index++];\n        }\n    }\n    return line;\n};\n/**\n * A JustificationEngine is used by a Typesetter to perform line fragment\n * justification. This implementation is based on a description of Apple's\n * justification algorithm from a PDF in the Apple Font Tools package.\n *\n * //TODO: Make it immutable\n *\n * @param {Object} layout options\n * @param {Object} line\n * @returns {Object} line\n */ var justification = function justification(options) {\n    return function(line) {\n        var gap = line.box.width - advanceWidth(line);\n        if (gap === 0) return; // Exact fit\n        var factors = getFactors(gap, line, options);\n        var distances = getDistances(gap, factors);\n        return justifyLine(distances, line);\n    };\n};\n/**\n * Returns attributed string ascent\n *\n * @param {Object} attributed string\n * @return {number} ascent\n */ var ascent = function ascent(attributeString) {\n    var reducer = function reducer(acc, run) {\n        return Math.max(acc, ascent$1(run));\n    };\n    return attributeString.runs.reduce(reducer, 0);\n};\n/* eslint-disable no-param-reassign */ // The base font size used for calculating underline thickness.\nvar BASE_FONT_SIZE = 12;\n/**\n * A TextDecorationEngine is used by a Typesetter to generate\n * DecorationLines for a line fragment, including underlines\n * and strikes.\n */ var textDecoration = function textDecoration() {\n    return function(lineFragment) {\n        var x = lineFragment.overflowLeft || 0;\n        var overflowRight = lineFragment.overflowRight || 0;\n        var maxX = advanceWidth(lineFragment) - overflowRight;\n        lineFragment.decorationLines = [];\n        for(var i = 0; i < lineFragment.runs.length; i += 1){\n            var run = lineFragment.runs[i];\n            var width = Math.min(maxX - x, advanceWidth$1(run));\n            var thickness = Math.max(0.5, Math.floor(run.attributes.fontSize / BASE_FONT_SIZE));\n            if (run.attributes.underline) {\n                var rect = {\n                    x: x,\n                    y: ascent(lineFragment) + thickness * 2,\n                    width: width,\n                    height: thickness\n                };\n                var line = {\n                    rect: rect,\n                    opacity: run.attributes.opacity,\n                    color: run.attributes.underlineColor || \"black\",\n                    style: run.attributes.underlineStyle || \"solid\"\n                };\n                lineFragment.decorationLines.push(line);\n            }\n            if (run.attributes.strike) {\n                var y = ascent(lineFragment) - ascent$1(run) / 3;\n                var _rect = {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: thickness\n                };\n                var _line = {\n                    rect: _rect,\n                    opacity: run.attributes.opacity,\n                    color: run.attributes.strikeColor || \"black\",\n                    style: run.attributes.strikeStyle || \"solid\"\n                };\n                lineFragment.decorationLines.push(_line);\n            }\n            x += width;\n        }\n        return lineFragment;\n    };\n};\nvar ignoredScripts = [\n    \"Common\",\n    \"Inherited\",\n    \"Unknown\"\n];\n/**\n * Resolves unicode script in runs, grouping equal runs together\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */ var scriptItemizer = function scriptItemizer() {\n    return function(attributedString) {\n        var string = attributedString.string;\n        var lastScript = \"Unknown\";\n        var lastIndex = 0;\n        var index = 0;\n        var res = [];\n        if (!string) return empty();\n        for(var i = 0; i < string.length; i += 1){\n            var char = string[i];\n            var codePoint = char.codePointAt();\n            var script = unicode_properties__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getScript(codePoint);\n            if (script !== lastScript && !ignoredScripts.includes(script)) {\n                if (lastScript !== \"Unknown\") {\n                    res.push({\n                        start: lastIndex,\n                        end: index,\n                        attributes: {\n                            script: lastScript\n                        }\n                    });\n                }\n                lastIndex = index;\n                lastScript = script;\n            }\n            index += char.length;\n        }\n        if (lastIndex < string.length) {\n            res.push({\n                start: lastIndex,\n                end: string.length,\n                attributes: {\n                    script: lastScript\n                }\n            });\n        }\n        return {\n            string: string,\n            runs: res\n        };\n    };\n};\nvar SOFT_HYPHEN = \"\\xad\";\nvar hyphenator = hyphen__WEBPACK_IMPORTED_MODULE_5__(hyphen_patterns_en_us_js__WEBPACK_IMPORTED_MODULE_6__);\nvar splitHyphen = function splitHyphen(word) {\n    return word.split(SOFT_HYPHEN);\n};\nvar cache = {};\nvar getParts = function getParts(word) {\n    var base = word.includes(SOFT_HYPHEN) ? word : hyphenator(word);\n    return splitHyphen(base);\n};\nvar wordHyphenation = function wordHyphenation() {\n    return function(word) {\n        var cacheKey = \"_\" + word;\n        if ((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.isNil)(word)) return [];\n        if (cache[cacheKey]) return cache[cacheKey];\n        cache[cacheKey] = getParts(word);\n        return cache[cacheKey];\n    };\n};\nvar getFontSize = function getFontSize(value) {\n    return value.attributes.fontSize || 12;\n};\n/**\n * Resolve font runs in an AttributedString, grouping equal\n * runs and performing font substitution where necessary.\n *\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string\n */ var fontSubstitution = function fontSubstitution() {\n    return function(attributedString) {\n        var string = attributedString.string, runs = attributedString.runs;\n        var lastFont = null;\n        var lastIndex = 0;\n        var index = 0;\n        var res = [];\n        if (!string) return empty();\n        for(var _iterator = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_3__(runs), _step; !(_step = _iterator()).done;){\n            var run = _step.value;\n            var _fontSize = getFontSize(run);\n            var defaultFont = run.attributes.font;\n            if (string.length === 0) {\n                res.push({\n                    start: 0,\n                    end: 0,\n                    attributes: {\n                        font: defaultFont\n                    }\n                });\n                break;\n            }\n            for(var _iterator2 = _babel_runtime_helpers_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_3__(string.slice(run.start, run.end)), _step2; !(_step2 = _iterator2()).done;){\n                var char = _step2.value;\n                var font = defaultFont;\n                if (font !== lastFont) {\n                    if (lastFont) {\n                        res.push({\n                            start: lastIndex,\n                            end: index,\n                            attributes: {\n                                font: lastFont,\n                                scale: lastFont ? _fontSize / lastFont.unitsPerEm : 0\n                            }\n                        });\n                    }\n                    lastFont = font;\n                    lastIndex = index;\n                }\n                index += char.length;\n            }\n        }\n        if (lastIndex < string.length) {\n            var fontSize = getFontSize((0,_react_pdf_fns__WEBPACK_IMPORTED_MODULE_0__.last)(runs));\n            res.push({\n                start: lastIndex,\n                end: string.length,\n                attributes: {\n                    font: lastFont,\n                    scale: lastFont ? fontSize / lastFont.unitsPerEm : 0\n                }\n            });\n        }\n        return {\n            string: string,\n            runs: res\n        };\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-pdf/textkit/lib/textkit.js\n");

/***/ })

};
;