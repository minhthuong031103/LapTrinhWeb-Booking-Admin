"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/normalize-svg-path";
exports.ids = ["vendor-chunks/normalize-svg-path"];
exports.modules = {

/***/ "(ssr)/./node_modules/normalize-svg-path/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/normalize-svg-path/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ normalize)\n/* harmony export */ });\n/* harmony import */ var svg_arc_to_cubic_bezier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svg-arc-to-cubic-bezier */ \"(ssr)/./node_modules/svg-arc-to-cubic-bezier/modules/index.js\");\n\nfunction normalize(path) {\n    // init state\n    var prev;\n    var result = [];\n    var bezierX = 0;\n    var bezierY = 0;\n    var startX = 0;\n    var startY = 0;\n    var quadX = null;\n    var quadY = null;\n    var x = 0;\n    var y = 0;\n    for(var i = 0, len = path.length; i < len; i++){\n        var seg = path[i];\n        var command = seg[0];\n        switch(command){\n            case \"M\":\n                startX = seg[1];\n                startY = seg[2];\n                break;\n            case \"A\":\n                var curves = (0,svg_arc_to_cubic_bezier__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n                    px: x,\n                    py: y,\n                    cx: seg[6],\n                    cy: seg[7],\n                    rx: seg[1],\n                    ry: seg[2],\n                    xAxisRotation: seg[3],\n                    largeArcFlag: seg[4],\n                    sweepFlag: seg[5]\n                });\n                // null-curves\n                if (!curves.length) continue;\n                for(var j = 0, c; j < curves.length; j++){\n                    c = curves[j];\n                    seg = [\n                        \"C\",\n                        c.x1,\n                        c.y1,\n                        c.x2,\n                        c.y2,\n                        c.x,\n                        c.y\n                    ];\n                    if (j < curves.length - 1) result.push(seg);\n                }\n                break;\n            case \"S\":\n                // default control point\n                var cx = x;\n                var cy = y;\n                if (prev == \"C\" || prev == \"S\") {\n                    cx += cx - bezierX // reflect the previous command's control\n                    ;\n                    cy += cy - bezierY // point relative to the current point\n                    ;\n                }\n                seg = [\n                    \"C\",\n                    cx,\n                    cy,\n                    seg[1],\n                    seg[2],\n                    seg[3],\n                    seg[4]\n                ];\n                break;\n            case \"T\":\n                if (prev == \"Q\" || prev == \"T\") {\n                    quadX = x * 2 - quadX // as with 'S' reflect previous control point\n                    ;\n                    quadY = y * 2 - quadY;\n                } else {\n                    quadX = x;\n                    quadY = y;\n                }\n                seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n                break;\n            case \"Q\":\n                quadX = seg[1];\n                quadY = seg[2];\n                seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n                break;\n            case \"L\":\n                seg = line(x, y, seg[1], seg[2]);\n                break;\n            case \"H\":\n                seg = line(x, y, seg[1], y);\n                break;\n            case \"V\":\n                seg = line(x, y, x, seg[1]);\n                break;\n            case \"Z\":\n                seg = line(x, y, startX, startY);\n                break;\n        }\n        // update state\n        prev = command;\n        x = seg[seg.length - 2];\n        y = seg[seg.length - 1];\n        if (seg.length > 4) {\n            bezierX = seg[seg.length - 4];\n            bezierY = seg[seg.length - 3];\n        } else {\n            bezierX = x;\n            bezierY = y;\n        }\n        result.push(seg);\n    }\n    return result;\n}\nfunction line(x1, y1, x2, y2) {\n    return [\n        \"C\",\n        x1,\n        y1,\n        x2,\n        y2,\n        x2,\n        y2\n    ];\n}\nfunction quadratic(x1, y1, cx, cy, x2, y2) {\n    return [\n        \"C\",\n        x1 / 3 + 2 / 3 * cx,\n        y1 / 3 + 2 / 3 * cy,\n        x2 / 3 + 2 / 3 * cx,\n        y2 / 3 + 2 / 3 * cy,\n        x2,\n        y2\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/normalize-svg-path/index.mjs\n");

/***/ })

};
;